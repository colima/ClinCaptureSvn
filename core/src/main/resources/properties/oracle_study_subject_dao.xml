<?xml version="1.0"?>
<queries>
	<query>
		<name>findByPK</name>
        <sql>SELECT ss.*,st.unique_identifier FROM study_subject ss, study st WHERE
        ss.study_subject_id = ? and ss.study_id = st.study_id</sql>
	</query>
	<query>
		<name>findByPKAndStudy</name>
		<sql>
			SELECT ss.*
			FROM study_subject ss, study st
			WHERE ss.study_subject_id = ?
				AND ss.study_id=st.study_id
				AND (st.study_id=? or st.parent_study_id=?)
		</sql>
	</query>
    <query>
        <name>findByOidAndStudy</name>
        <sql>SELECT SS.*
            FROM STUDY_SUBJECT SS, study st
            WHERE SS.oc_oid = ?
                AND SS.study_id = st.study_id
                AND (st.study_id=? or st.parent_study_id=?)
        </sql>
    </query>
    <query>
        <name>findByOid</name>
        <sql>SELECT SS.*
            FROM STUDY_SUBJECT SS
            WHERE SS.oc_oid = ?
        </sql>
    </query>
    <query>
        <name>getCountofStudySubjectsAtStudyOrSite</name>
        <sql>select count(*) as count from study_subject where study_id = ?</sql>
    </query>
    <query>
        <name>getCountofStudySubjectsAtStudyOrSite</name>
        <sql>select count(*) as count from study_subject where study_id = ?</sql>
    </query>
    <query>
        <name>getCountofStudySubjectsAtStudy</name>
        <sql>
            select count(*) as count from study_subject, study s
                where s.study_id = study_subject.study_id and
                (s.study_id = ? or s.parent_study_id = ?)
        </sql>
    </query>
    <query>
        <name>getCountofStudySubjects</name>
        <sql>
            select count(distinct ss.study_subject_id) as count from study_subject ss, study s where
                ss.study_id = s.study_id AND
                ( s.study_id = ? or s.parent_study_id = ? )
        </sql>
    </query>
    <query>
        <name>getCountofStudySubjectsBasedOnStatus</name>
        <sql>
            select count(DISTINCT(ss.study_subject_id)) as count from study_subject ss,study s, status where
                status.status_id = ss.status_id  AND
                ss.study_id = s.study_id AND
                ( s.study_id = ? or s.parent_study_id = ? ) AND
                status.status_id = ?
        </sql>
    </query>
    <query>
        <name>getCountWithFilter</name>
        <sql>SELECT COUNT( DISTINCT  SS.study_subject_id) as count
                FROM study_subject ss LEFT JOIN study_event se ON ss.study_subject_id = se.study_subject_id,STUDY ST,SUBJECT S
                where
                    SS.SUBJECT_ID=S.SUBJECT_ID
                    AND SS.study_id = ST.study_id
                    AND (ST.study_id=? or ST.parent_study_id=?)
        </sql>
    </query>
    <query>
        <name>getWithFilterAndSort</name>
        <sql>
        SELECT * from (
            SELECT x.*, rownum as r from(select DISTINCT ss.*, ST.unique_identifier 
                FROM study_subject ss LEFT JOIN study_event se ON
                ss.study_subject_id = se.study_subject_id,STUDY ST,SUBJECT S
                where
                    SS.SUBJECT_ID=S.SUBJECT_ID
                    AND SS.study_id = ST.study_id
                    AND (ST.study_id=? or ST.parent_study_id=?)
        </sql>
    </query>

    <query>
        <name>findAllByStudySDV</name>
        <sql>
            SELECT mss.study_subject_id
            FROM study_subject mss
            LEFT JOIN study s on s.study_id = mss.study_id
        </sql>
    </query>

    <query>
        <name>allowSDVSubject</name>
        <sql>
            SELECT COUNT(mss.study_subject_id) = 1 as allow FROM study_subject mss, study s
            WHERE
            mss.study_id = s.study_id AND mss.study_subject_id=? AND
            (s.study_id=? or s.parent_study_id=?)
            AND ((SELECT count(distinct edc.event_definition_crf_id) FROM study_event_definition sed, study s, event_definition_crf edc WHERE sed.study_id = s.study_id and (s.study_id = s.study_id or s.study_id = s.parent_study_id) and sed.status_id = 1 and edc.study_id = sed.study_id and edc.study_event_definition_id = sed.study_event_definition_id and edc.status_id = 1 and edc.required_crf = true and edc.source_data_verification_code in (1,2)) = (SELECT count(distinct ec.event_crf_id) FROM study_event_definition sed, study s, event_definition_crf edc, study_event se, event_crf ec, crf_version cv WHERE ec.status_id not in (0,1,5,7,8) and ec.date_completed IS NOT NULL and ec.crf_version_id = cv.crf_version_id and edc.crf_id = cv.crf_id and ec.study_event_id = se.study_event_id and ec.study_subject_id = se.study_subject_id and se.study_subject_id = mss.study_subject_id and se.study_event_definition_id = sed.study_event_definition_id and sed.study_id = s.study_id and (s.study_id = s.study_id or s.study_id = s.parent_study_id) and sed.status_id = 1 and edc.study_id = sed.study_id and edc.study_event_definition_id = sed.study_event_definition_id and edc.status_id = 1 and edc.required_crf = true and edc.source_data_verification_code in (1,2)))
            AND ((SELECT count(distinct edc.event_definition_crf_id) FROM study_event_definition sed, study s, event_definition_crf edc WHERE sed.study_id = s.study_id and (s.study_id = s.study_id or s.study_id = s.parent_study_id) and sed.status_id = 1 and edc.study_id = sed.study_id and edc.study_event_definition_id = sed.study_event_definition_id and edc.status_id = 1 and edc.required_crf = true and edc.source_data_verification_code in (1,2)) > (SELECT count(distinct ec.event_crf_id) FROM study_event_definition sed, study s, event_definition_crf edc, study_event se, event_crf ec, crf_version cv WHERE ec.sdv_status = true and ec.crf_version_id = cv.crf_version_id and edc.crf_id = cv.crf_id and ec.study_event_id = se.study_event_id and ec.study_subject_id = se.study_subject_id and se.study_subject_id = mss.study_subject_id and se.study_event_definition_id = sed.study_event_definition_id and sed.study_id = s.study_id and (s.study_id = s.study_id or s.study_id = s.parent_study_id) and sed.status_id = 1 and edc.study_id = sed.study_id and edc.study_event_definition_id = sed.study_event_definition_id and edc.status_id = 1 and edc.required_crf = true and edc.source_data_verification_code in (1,2)))
        </sql>
    </query>

    <query>
        <name>getCountWithFilterListDiscNotes</name>
        <sql><![CDATA[SELECT COUNT( DISTINCT  SS.study_subject_id) as count
              FROM study_subject SS,STUDY ST, study_event SE,dn_item_data_map didm, discrepancy_note dn where
                SS.study_id = ST.study_id AND
                ss.study_subject_id = se.study_subject_id AND
                (ST.study_id=? or ST.parent_study_id= ?) AND
                didm.study_subject_id =  ss.study_subject_id AND
                didm.discrepancy_note_id = dn.discrepancy_note_id
        ]]></sql>
    </query>
    <query>
        <name>getWithFilterAndSortListDiscNotes</name>
        <sql><![CDATA[
                 SELECT * from (
                    SELECT x.*, rownum as r from(select DISTINCT ss.*
                  FROM study_subject SS,STUDY ST, study_event SE,dn_item_data_map didm, discrepancy_note dn where
                SS.study_id = ST.study_id AND
                ss.study_subject_id = se.study_subject_id AND
                (ST.study_id=? or ST.parent_study_id= ?) AND
                didm.study_subject_id =  ss.study_subject_id AND
                didm.discrepancy_note_id = dn.discrepancy_note_id
        ]]></sql>
    </query>
    
    
    
    <query>
        <name>getCountWithFilterAuditLog</name>
        <sql>SELECT COUNT( DISTINCT  SS.study_subject_id) as count
                FROM study_subject ss LEFT JOIN study_event se ON ss.study_subject_id = se.study_subject_id,STUDY ST,SUBJECT S,USER_ACCOUNT UA
                where
                    SS.SUBJECT_ID=S.SUBJECT_ID
                    AND SS.study_id = ST.study_id
                    AND SS.owner_id = UA.user_id
                    AND (ST.study_id=? or ST.parent_study_id=?)
        </sql>
    </query>
    <query>
        <name>getWithFilterAndSortAuditLog</name>
        <sql>
            SELECT * from ( select x.*, rownum as r from(
            SELECT DISTINCT ss.*, s.date_of_birth,s.unique_identifier, ua.user_name
                FROM study_subject ss LEFT JOIN study_event se ON ss.study_subject_id = se.study_subject_id,STUDY ST,SUBJECT S,USER_ACCOUNT UA
                where
                    SS.SUBJECT_ID=S.SUBJECT_ID
                    AND SS.study_id = ST.study_id
                    AND SS.owner_id = UA.user_id
                    AND (ST.study_id=? or ST.parent_study_id=?)
        </sql>
    </query>
    <query>
		<name>findAll</name>
		<sql>SELECT * FROM study_subject</sql>
	</query>

    <query>
		<name>findAnotherBySameLabel</name>
		<sql>
			SELECT ss.*
			FROM study_subject ss, study st
			WHERE ss.label=?
				AND ss.study_id=st.study_id
				AND st.study_id=?
				AND ss.study_subject_id != ?

		</sql>
	</query>

    <query>
		<name>findAnotherBySameLabelInSites</name>
		<sql>
			SELECT ss.*
			FROM study_subject ss, study st
			WHERE ss.label=?
				AND ss.study_id=st.study_id
				AND st.parent_study_id=?
				AND ss.study_subject_id != ?

		</sql>
	</query>

	<query>
		<name>findByLabelAndStudy</name>
		<sql>
			SELECT ss.*
			FROM study_subject ss, study st
			WHERE ss.label=?
				AND ss.study_id=st.study_id
				AND (st.study_id=? or st.parent_study_id=?)
		</sql>
	</query>
	<query>
		<name>findSameByLabelAndStudy</name>
		<sql>
			SELECT ss.*
			FROM study_subject ss, study st
			WHERE ss.label=?
				AND ss.study_id=st.study_id
				AND (st.study_id=? or st.parent_study_id=?)
				AND ss.study_subject_id != ?
		</sql>
	</query>
	<query>
		<name>findAllByStudy</name>
		<sql>
			SELECT ss.*
			FROM study_subject ss, study st
			WHERE ss.study_id = st.study_id
				AND (st.study_id=? or st.parent_study_id=?)
		</sql>
	</query>
    <query>
        <name>findAllWithAllStatesByStudyId</name>
        <sql>
            SELECT  s.unique_identifier, s.gender, ss.*, stu.name
            FROM subject s, study_subject ss, study stu
            WHERE s.subject_id = ss.subject_id
            AND ss.study_id = stu.study_id
            AND (stu.study_id=? or stu.parent_study_id=?)
            order by ss.date_updated desc
        </sql>
    </query>
	<query>
		<name>findAllByStudyId</name>
		<sql>
	        SELECT  s.unique_identifier, s.gender, ss.*, stu.name
	        FROM subject s, study_subject ss, study stu
	        WHERE s.subject_id = ss.subject_id
			    AND ss.study_id = stu.study_id
			    AND (stu.study_id=? or stu.parent_study_id=?)
	        	AND s.status_id=1
	        	order by ss.date_updated desc
        </sql>
	</query>
	<query>
		<name>findAllByStudyIdAndLimit</name>
		<sql>
	        SELECT  s.unique_identifier, s.gender, ss.*, stu.name
	        FROM subject s, study_subject ss, study stu
	        WHERE s.subject_id = ss.subject_id
			AND ss.study_id = stu.study_id
			AND (stu.study_id=? or stu.parent_study_id=?)
	        AND s.status_id=1
            and rownum &lt;= 5
	        order by ss.date_updated desc
        </sql>
	</query>
	<query>
		<name>create</name>
		<sql>
            INSERT INTO study_subject
            (LABEL,  SUBJECT_ID,  STUDY_ID, STATUS_ID,
             DATE_CREATED, OWNER_ID, ENROLLMENT_DATE, SECONDARY_LABEL, OC_OID, DYNAMIC_GROUP_CLASS_ID)
            VALUES (?,?,?,?,sysdate,?,?,?,?,?)
		</sql>
	</query>
    <query>
        <name>update</name>
        <sql>
            UPDATE study_subject SET LABEL=?,  SUBJECT_ID=?,  STUDY_ID=?,
            STATUS_ID=?, ENROLLMENT_DATE=?, DATE_UPDATED=?,
            UPDATE_ID=?, SECONDARY_LABEL=?, DYNAMIC_GROUP_CLASS_ID=?,
            RANDOMIZATION_DATE=?, RANDOMIZATION_RESULT=? WHERE STUDY_SUBJECT_ID=?
        </sql>
    </query>
	<query>
		<name>getCurrentPK</name>
		<sql>SELECT study_subject_id_seq.currval AS key from dual</sql>
	</query>
	<query>
		<name>findAllWithStudyEvent</name>
		<sql>
			SELECT DISTINCT
				S.*
			FROM
				study_subject S
				, study_event E
				, study st
			WHERE
				S.study_subject_id = E.study_subject_id
				AND S.study_id=st.study_id
				AND (st.study_id=? or st.parent_study_id=?)
		</sql>
	</query>
	<query>
		<name>findBySubjectIdAndStudy</name>
		<sql>
            SELECT ss.*, st.unique_identifier
            FROM study_subject ss, study st
            WHERE ss.subject_id=?
                AND ss.study_id=st.study_id
                AND (st.study_id=? or st.parent_study_id=?)
		</sql>
	</query>
	<query>
		<name>findAllBySubjectId</name>
		<sql>
			SELECT *
			FROM study_subject WHERE subject_id=?
		</sql>
	</query>
	<query>
		<name>findAllByStudyOrderByLabel</name>
		<sql>
			SELECT ss.*
			FROM study_subject ss, study st
			WHERE ss.study_id = st.study_id
				AND (st.study_id=? or st.parent_study_id=?)
			ORDER BY ss.label ASC
		</sql>
	</query>
	<query>
		<name>findAllActiveByStudyOrderByLabel</name>
		<sql>
			SELECT ss.*
			FROM study_subject ss, study st
			WHERE ss.study_id = st.study_id
				AND (st.study_id=? or st.parent_study_id=?)
				AND (ss.status_id=1 or ss.status_id=8)
			ORDER BY ss.label ASC
		</sql>
	</query>
    <query>
        <name>countByLabel</name>
        <sql>
            SELECT count(distinct ss.study_subject_id)
            FROM study_subject ss, subject s
            where s.subject_id = ss.subject_id and (s.unique_identifier = ? or ss.label = ? or ss.secondary_label = ?)
        </sql>
    </query>
    <query>
        <name>sdvCompleteFilterForStudySubject</name>
        <sql>
            <![CDATA[
            SELECT mss.study_subject_id

            FROM study_subject mss

            LEFT JOIN study s on s.study_id = mss.study_id

            LEFT JOIN (select distinct de.study_event_definition_id, de.study_id, sgc.study_group_class_id, sgc.is_default from study_group_class sgc, dynamic_event de where sgc.status_id = 1 and group_class_type_id = 4 and de.study_group_class_id = sgc.study_group_class_id) de on (s.parent_study_id is null and de.study_id = s.study_id) or (not(s.parent_study_id is null) and de.study_id = s.parent_study_id)

            LEFT JOIN (select distinct edc.event_definition_crf_id, edc.study_event_definition_id, edc.study_id from event_definition_crf edc, crf_version cv, crf c
            where edc.status_id = 1 and edc.hide_crf = false and edc.source_data_verification_code in (1,2) and edc.crf_id = c.crf_id and c.status_id = 1 and (select count(distinct cv.crf_version_id) from crf_version cv where cv.crf_id = c.crf_id and cv.status_id = 1) > 0)
            edc on ((s.parent_study_id is null and edc.study_id = s.study_id) or (not(s.parent_study_id is null) and (edc.study_id = s.study_id or edc.study_id = s.parent_study_id) and edc.event_definition_crf_id not in (select parent_id from event_definition_crf edc where edc.study_id = s.study_id)))

            LEFT JOIN (select distinct sed.study_event_definition_id, sed.study_id from study_event_definition sed

            where sed.status_id = 1) sed on

            sed.study_event_definition_id = edc.study_event_definition_id and

            ((sed.study_event_definition_id not in (select distinct de.study_event_definition_id from dynamic_event de)) or

            (sed.study_event_definition_id = de.study_event_definition_id and de.study_group_class_id = mss.dynamic_group_class_id) or

            (sed.study_event_definition_id = de.study_event_definition_id and de.is_default = true))

            LEFT JOIN (select distinct se.study_event_id, se.study_subject_id, se.study_event_definition_id, se.subject_event_status_id from study_event se, event_crf ec where se.status_id >= 1 and se.subject_event_status_id in (8,9) and ec.not_started = false and ec.sdv_status = true and ec.status_id = 2 and ec.study_event_id = se.study_event_id) sdv_se on sdv_se.study_event_definition_id = sed.study_event_definition_id and sdv_se.study_subject_id = mss.study_subject_id

            LEFT JOIN (select distinct se.study_event_id, se.study_subject_id, se.study_event_definition_id from study_event se where se.status_id >= 1 and se.subject_event_status_id in (1,7,10)) ignore_se on ignore_se.study_event_definition_id = sed.study_event_definition_id and ignore_se.study_subject_id = mss.study_subject_id

            LEFT JOIN (select distinct se.study_event_id, se.study_subject_id, se.study_event_definition_id, se.subject_event_status_id from study_event se, event_crf ec where se.status_id >= 1 and se.subject_event_status_id in (5,6) and  ec.not_started = false and ec.study_event_id = se.study_event_id) skipped_se on skipped_se.study_event_definition_id = sed.study_event_definition_id and skipped_se.study_subject_id = mss.study_subject_id

            LEFT JOIN (select distinct se.study_event_id, se.study_subject_id, se.study_event_definition_id from study_event se where se.status_id >= 1 and se.subject_event_status_id in (3,4)) other_se on other_se.study_event_definition_id = sed.study_event_definition_id and other_se.study_subject_id = mss.study_subject_id

            group by mss.study_subject_id

            having count(distinct sdv_se.study_event_id) > 0 and count(distinct sdv_se.study_event_id) + count(distinct ignore_se.study_event_id) <= count(distinct sed.study_event_definition_id) and count(distinct skipped_se.study_event_id) = 0 and count(distinct other_se.study_event_id) = 0
            ]]>
        </sql>
    </query>
    <query>
        <name>sdvCompleteFilterForCertainStudySubject</name>
        <sql>
            <![CDATA[
            SELECT mss.study_subject_id

            FROM study_subject mss

            LEFT JOIN study s on s.study_id = mss.study_id

            LEFT JOIN (select distinct de.study_event_definition_id, de.study_id, sgc.study_group_class_id, sgc.is_default from study_group_class sgc, dynamic_event de where sgc.status_id = 1 and group_class_type_id = 4 and de.study_group_class_id = sgc.study_group_class_id) de on (s.parent_study_id is null and de.study_id = s.study_id) or (not(s.parent_study_id is null) and de.study_id = s.parent_study_id)

            LEFT JOIN (select distinct edc.event_definition_crf_id, edc.study_event_definition_id, edc.study_id from event_definition_crf edc, crf_version cv, crf c
            where edc.status_id = 1 and edc.hide_crf = false and edc.source_data_verification_code in (1,2) and edc.crf_id = c.crf_id and c.status_id = 1 and (select count(distinct cv.crf_version_id) from crf_version cv where cv.crf_id = c.crf_id and cv.status_id = 1) > 0)
            edc on ((s.parent_study_id is null and edc.study_id = s.study_id) or (not(s.parent_study_id is null) and (edc.study_id = s.study_id or edc.study_id = s.parent_study_id) and edc.event_definition_crf_id not in (select parent_id from event_definition_crf edc where edc.study_id = s.study_id)))

            LEFT JOIN (select distinct sed.study_event_definition_id, sed.study_id from study_event_definition sed

            where sed.status_id = 1) sed on

            sed.study_event_definition_id = edc.study_event_definition_id and

            ((sed.study_event_definition_id not in (select distinct de.study_event_definition_id from dynamic_event de)) or

            (sed.study_event_definition_id = de.study_event_definition_id and de.study_group_class_id = mss.dynamic_group_class_id) or

            (sed.study_event_definition_id = de.study_event_definition_id and de.is_default = true))

            LEFT JOIN (select distinct se.study_event_id, se.study_subject_id, se.study_event_definition_id, se.subject_event_status_id from study_event se, event_crf ec where se.status_id >= 1 and se.subject_event_status_id in (8,9) and ec.not_started = false and ec.sdv_status = true and ec.status_id = 2 and ec.study_event_id = se.study_event_id) sdv_se on sdv_se.study_event_definition_id = sed.study_event_definition_id and sdv_se.study_subject_id = mss.study_subject_id

            LEFT JOIN (select distinct se.study_event_id, se.study_subject_id, se.study_event_definition_id from study_event se where se.status_id >= 1 and se.subject_event_status_id in (1,7,10)) ignore_se on ignore_se.study_event_definition_id = sed.study_event_definition_id and ignore_se.study_subject_id = mss.study_subject_id

            LEFT JOIN (select distinct se.study_event_id, se.study_subject_id, se.study_event_definition_id, se.subject_event_status_id from study_event se, event_crf ec where se.status_id >= 1 and se.subject_event_status_id in (5,6) and  ec.not_started = false and ec.study_event_id = se.study_event_id) skipped_se on skipped_se.study_event_definition_id = sed.study_event_definition_id and skipped_se.study_subject_id = mss.study_subject_id

            LEFT JOIN (select distinct se.study_event_id, se.study_subject_id, se.study_event_definition_id from study_event se where se.status_id >= 1 and se.subject_event_status_id in (3,4)) other_se on other_se.study_event_definition_id = sed.study_event_definition_id and other_se.study_subject_id = mss.study_subject_id

            where mss.study_subject_id = ?

            group by mss.study_subject_id

            having count(distinct sdv_se.study_event_id) > 0 and count(distinct sdv_se.study_event_id) + count(distinct ignore_se.study_event_id) <= count(distinct sed.study_event_definition_id) and count(distinct skipped_se.study_event_id) = 0 and count(distinct other_se.study_event_id) = 0
            ]]>
        </sql>
    </query>
    <query>
        <name>withoutDns</name>
        <sql>
            LEFT JOIN (select distinct dn.discrepancy_note_id, dsm_map.subject_id
            FROM subject s, discrepancy_note dn, dn_age_days dad, dn_subject_map dsm_map
            WHERE s.subject_id = dsm_map.subject_id
            AND dn.discrepancy_note_id = dsm_map.discrepancy_note_id
            AND ((dn.parent_dn_id IS NULL) or (dn.parent_dn_id = 0))
            AND dn.discrepancy_note_id = dad.discrepancy_note_id
            AND s.status_id not in (5, 7) and (dn.resolution_status_id = 1 or dn.resolution_status_id = 2 or dn.resolution_status_id = 3)) dn5 on dn5.subject_id = mss.subject_id

            LEFT JOIN (select distinct dn.discrepancy_note_id, dss_map.study_subject_id
            FROM study_subject ss, discrepancy_note dn, dn_age_days dad, dn_study_subject_map dss_map
            WHERE ss.study_subject_id = dss_map.study_subject_id
            AND dn.discrepancy_note_id = dss_map.discrepancy_note_id
            AND ((dn.parent_dn_id IS NULL) or (dn.parent_dn_id = 0))
            AND dn.discrepancy_note_id = dad.discrepancy_note_id
            AND ss.status_id not in (5, 7) and (dn.resolution_status_id = 1 or dn.resolution_status_id = 2 or dn.resolution_status_id = 3)) dn4 on dn4.study_subject_id = mss.study_subject_id

            LEFT JOIN (select distinct dn.discrepancy_note_id, se.study_subject_id, se.study_event_definition_id
            FROM study_event se, discrepancy_note dn, dn_age_days dad, dn_study_event_map dse_map
            WHERE se.study_event_id = dse_map.study_event_id
            AND dn.discrepancy_note_id = dse_map.discrepancy_note_id
            AND ((dn.parent_dn_id IS NULL) or (dn.parent_dn_id = 0))
            AND dn.discrepancy_note_id = dad.discrepancy_note_id
            AND se.status_id not in (5, 7) and (dn.resolution_status_id = 1 or dn.resolution_status_id = 2 or dn.resolution_status_id = 3)) dn3 on dn3.study_subject_id = mss.study_subject_id

            LEFT JOIN (select distinct dn.discrepancy_note_id, ec.study_subject_id, se.study_event_definition_id
            FROM event_crf ec, study_event se, discrepancy_note dn, dn_age_days dad, dn_event_crf_map dec_map
            WHERE ec.event_crf_id = dec_map.event_crf_id
            AND se.study_event_id = ec.study_event_id
            AND dn.discrepancy_note_id = dec_map.discrepancy_note_id
            AND ((dn.parent_dn_id IS NULL) or (dn.parent_dn_id = 0))
            AND dn.discrepancy_note_id = dad.discrepancy_note_id
            AND ec.status_id not in (5, 7)
            AND se.status_id not in (5, 7) and (dn.resolution_status_id = 1 or dn.resolution_status_id = 2 or dn.resolution_status_id = 3)) dn2 on dn2.study_subject_id = mss.study_subject_id

            LEFT JOIN (select distinct dn.discrepancy_note_id, id.item_data_id, did_map.study_subject_id
            FROM item_data id, event_crf ec, study_event se, discrepancy_note dn, dn_age_days dad, dn_item_data_map did_map
            WHERE id.item_data_id = did_map.item_data_id
            AND id.event_crf_id = ec.event_crf_id
            AND ec.study_event_id = se.study_event_id
            AND dn.discrepancy_note_id = did_map.discrepancy_note_id
            AND ((dn.parent_dn_id IS NULL) or (dn.parent_dn_id = 0))
            AND dn.discrepancy_note_id = dad.discrepancy_note_id
            AND id.status_id not in (5, 7)
            AND ec.status_id not in (5, 7)
            AND se.status_id not in (5, 7) and (dn.resolution_status_id = 1 or dn.resolution_status_id = 2 or dn.resolution_status_id = 3)) dn1 on dn1.study_subject_id = mss.study_subject_id
        </sql>
    </query>
    <query>
        <name>withoutDnsTail</name>
        <sql>
            <![CDATA[
            group by mss.study_subject_id
            having count(distinct dn1.discrepancy_note_id) = 0 and count(distinct dn2.discrepancy_note_id) = 0 and count(distinct dn3.discrepancy_note_id) = 0 and count(distinct dn4.discrepancy_note_id) = 0 and count(distinct dn5.discrepancy_note_id) = 0
            ]]>
        </sql>
    </query>
    <query>
        <name>readyToBeSdvStudySubjectFilter</name>
        <sql>
            <![CDATA[
            SELECT mss.study_subject_id

            FROM study_subject mss

            LEFT JOIN study s on s.study_id = mss.study_id

            LEFT JOIN (select distinct de.study_event_definition_id, de.study_id, sgc.study_group_class_id, sgc.is_default from study_group_class sgc, dynamic_event de where sgc.status_id = 1 and group_class_type_id = 4 and de.study_group_class_id = sgc.study_group_class_id) de on (s.parent_study_id is null and de.study_id = s.study_id) or (not(s.parent_study_id is null) and de.study_id = s.parent_study_id)

            LEFT JOIN (select distinct edc.event_definition_crf_id, edc.study_event_definition_id, edc.study_id from event_definition_crf edc, crf_version cv, crf c
            where edc.status_id = 1 and edc.hide_crf = false and edc.source_data_verification_code in (1,2) and edc.crf_id = c.crf_id and c.status_id = 1 and (select count(distinct cv.crf_version_id) from crf_version cv where cv.crf_id = c.crf_id and cv.status_id = 1) > 0)
            edc on ((s.parent_study_id is null and edc.study_id = s.study_id) or (not(s.parent_study_id is null) and (edc.study_id = s.study_id or edc.study_id = s.parent_study_id) and edc.event_definition_crf_id not in (select parent_id from event_definition_crf edc where edc.study_id = s.study_id)))

            LEFT JOIN (select distinct sed.study_event_definition_id, sed.study_id from study_event_definition sed

            where sed.status_id = 1) sed on

            sed.study_event_definition_id = edc.study_event_definition_id and

            ((sed.study_event_definition_id not in (select distinct de.study_event_definition_id from dynamic_event de)) or

            (sed.study_event_definition_id = de.study_event_definition_id and de.study_group_class_id = mss.dynamic_group_class_id) or

            (sed.study_event_definition_id = de.study_event_definition_id and de.is_default = true))

            LEFT JOIN (select distinct se.study_event_id, se.study_subject_id, se.study_event_definition_id from study_event se where se.status_id >= 1 and se.subject_event_status_id in (4)) completed_se on completed_se.study_event_definition_id = sed.study_event_definition_id and completed_se.study_subject_id = mss.study_subject_id

            LEFT JOIN (select distinct se.study_event_id, se.study_subject_id, se.study_event_definition_id, se.subject_event_status_id from study_event se, event_crf ec where se.status_id >= 1 and se.subject_event_status_id in (8,9) and ec.not_started = false and ec.sdv_status = true and ec.status_id = 2 and ec.study_event_id = se.study_event_id) sdv_se on sdv_se.study_event_definition_id = sed.study_event_definition_id and sdv_se.study_subject_id = mss.study_subject_id

            LEFT JOIN (select distinct se.study_event_id, se.study_subject_id, se.study_event_definition_id from study_event se where se.status_id >= 1 and se.subject_event_status_id in (1,7,10)) ignore_se on ignore_se.study_event_definition_id = sed.study_event_definition_id and ignore_se.study_subject_id = mss.study_subject_id

            LEFT JOIN (select distinct se.study_event_id, se.study_subject_id, se.study_event_definition_id, se.subject_event_status_id from study_event se, event_crf ec where se.status_id >= 1 and se.subject_event_status_id in (5,6) and  ec.not_started = false and ec.study_event_id = se.study_event_id) skipped_se on skipped_se.study_event_definition_id = sed.study_event_definition_id and skipped_se.study_subject_id = mss.study_subject_id

            LEFT JOIN (select distinct se.study_event_id, se.study_subject_id, se.study_event_definition_id from study_event se where se.status_id >= 1 and se.subject_event_status_id in (3)) other_se on other_se.study_event_definition_id = sed.study_event_definition_id and other_se.study_subject_id = mss.study_subject_id

            where mss.study_subject_id = ?

            group by mss.study_subject_id

            having count(distinct completed_se.study_event_id) > 0 and count(distinct sdv_se.study_event_id) >= 0 and count(distinct sdv_se.study_event_id) + count(distinct ignore_se.study_event_id) <= count(distinct sed.study_event_definition_id) and count(distinct skipped_se.study_event_id) = 0 and count(distinct other_se.study_event_id) = 0
            ]]>
        </sql>
    </query>
</queries>
