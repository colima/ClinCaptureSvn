<?xml version="1.0"?>
<queries>
	<query>
		<name>findByPK</name>
		<sql>SELECT * FROM CRF_VERSION WHERE 
		CRF_VERSION_ID = ?</sql>
	</query>
	<query>
        <name>findByOID</name>
        <sql>SELECT * FROM CRF_VERSION WHERE 
        OC_OID = ?</sql>
    </query>
	<query>
		<name>findByFullNameInGUIStudies</name>
		<sql>
			select cv.* from crf_version cv
			join crf c on c.crf_id = cv.crf_id
			join study s on s.study_id = c.source_study_id
			where s.origin != 'studio' and cv.name = ? and c.name = ?
		</sql>
	</query>
	<query>
		<name>findByFullNameAndStudy</name>
		<sql>
			select cv.* from crf_version cv
			join crf c on c.crf_id = cv.crf_id
			where cv.name = ? and c.name = ? and c.source_study_id = ?
		</sql>
	</query>
	<query>
		<name>findAll</name>
		<sql>SELECT * FROM CRF_VERSION order by DATE_CREATED desc</sql>
	</query>
	<query>
        <name>findAllByOid</name>
        <sql>SELECT * FROM CRF_VERSION where oc_oid=?</sql>
    </query>
	<query>
		<name>findAllByCRF</name>
		<sql>SELECT * FROM CRF_VERSION WHERE crf_id =? order by DATE_CREATED desc </sql>
	</query>
	<query>
		<name>findAllActiveByCRF</name>
		<sql>SELECT * FROM CRF_VERSION WHERE crf_id =? and status_id =1 order by DATE_CREATED desc </sql>
	</query>
	<query>
		<name>create</name>
		<sql>INSERT INTO CRF_VERSION (CRF_ID, STATUS_ID, NAME,
		DESCRIPTION, OWNER_ID,
		DATE_CREATED, OC_OID, REVISION_NOTES)
		VALUES (?,?,?,?,?,NOW(),?,?)</sql>
	</query>
	<query>
		<name>update</name>
		<sql>UPDATE CRF_VERSION SET CRF_ID=?,STATUS_ID=?,NAME=?,
		DESCRIPTION=?,DATE_UPDATED=NOW(),UPDATE_ID=?,REVISION_NOTES =? WHERE 
		CRF_VERSION_ID=?</sql>
	</query>
	<query>
		<name>findItemFromMap</name>
		<sql>select v.item_id, i.name,i.owner_id from versioning_map v, item i 
		where v.item_id =i.item_id and v.crf_version_id=?
		</sql>
	</query>
	<query>
		<name>isItemUsedByOtherVersion</name>
		<sql>
		 SELECT DISTINCT v1.item_id
		 FROM versioning_map v1, versioning_map v2
		 WHERE v1.item_id = v2.item_id
		 	AND v1.crf_version_id != v2.crf_version_id
		 	AND v1.crf_version_id = ?
		</sql>
	</query>
	<query>
	 <name>findNotSharedItemsByVersion</name>
	 <sql>
	  select v.item_id,i.name,i.owner_id
      from versioning_map v, item i 
      where v.item_id =i.item_id
      and v.crf_version_id=?
      and v.item_id not in
         (SELECT DISTINCT v.item_id
	  FROM versioning_map v
	  WHERE v.crf_version_id != ? )
	  
	 </sql>
	</query>
	
	<query>
		<name>findItemUsedByOtherVersion</name>
		<sql>select v.item_id, i.name,i.owner_id from versioning_map v, item i 
		where v.item_id =i.item_id and v.crf_version_id!=?
		</sql>
	</query>	
	
	<query>
		<name>hasItemData</name>
		<sql>select item_data_id from item_data where item_id=?</sql>
	</query>
	
	<!-- all deletes are not prepareStatements-->
	<query>
		<name>delete</name>
		<sql>delete from CRF_VERSION where crf_version_id=</sql>
	</query>
	<query>
		<name>getCRFIdFromCRFVersionId</name>
		<sql>SELECT crf_id FROM crf_version WHERE crf_version_id=?</sql>
	</query>
	<query>
		<name>findAllByCRFId</name>
		<sql>SELECT * FROM crf_version WHERE crf_id=?</sql>
	</query>
	<!--ADDED by tbh, 1-8-05, shouldn't we have our own xml file for item_form_metadata? -->
	<query>
		<name>findAllBySectionId</name>
		<sql>SELECT ifm.*,rs.response_type_id,
		rs.label,rs.options_text,rs.options_values
		FROM ITEM_FORM_METADATA IFM, RESPONSE_SET RS WHERE IFM.RESPONSE_SET_ID = RS.RESPONSE_SET_ID AND SECTION_ID=?</sql>
	</query>
	<query>
		<name>findCRFVersionId</name>
		<sql>SELECT CRF_VERSION_ID FROM CRF_VERSION WHERE CRF_ID=? AND NAME =? </sql>
	</query>
	<query>
		<name>findLatestAfterDeleted</name>
		<sql>
			SELECT *
			FROM crf_version
			WHERE crf_id = (
				SELECT crf_id
				FROM crf_version
				WHERE crf_version_id = ?)
			AND crf_version_id != ?
			AND status_id NOT IN (5, 7)
			ORDER BY crf_version_id DESC
			LIMIT 1
		</sql>
	</query>
	<query>
		<name>findAllCRFVersionsInStudy</name>
		<sql>select distinct cv.*, c.name as crf_name from crf_version cv, crf c where cv.crf_id = c.crf_id and c.source_study_id = ? order by cv.crf_id, cv.crf_version_id</sql>
	</query>
	<query>
		<name>findAllCRFVersionsInGUIStudies</name>
		<sql>select distinct cv.*, c.name as crf_name from crf_version cv, crf c, study s where cv.crf_id = c.crf_id and c.source_study_id = s.study_id and s.origin != 'studio' order by cv.crf_id, cv.crf_version_id</sql>
	</query>
	<query>
		<name>deleteCrfVersion</name>
		<sql>
			DELETE FROM scd_item_metadata scd WHERE scd.scd_item_form_metadata_id IN (SELECT item_form_metadata.item_form_metadata_id FROM item_form_metadata WHERE item_form_metadata.crf_version_id = ?);

			DELETE FROM dyn_item_form_metadata WHERE crf_version_id = ?;

			DELETE FROM dyn_item_group_metadata WHERE event_crf_id IN (SELECT ec.event_crf_id FROM event_crf ec WHERE ec.crf_version_id = ?);

			DELETE FROM item_form_metadata WHERE item_form_metadata.crf_version_id = ?;

			DELETE FROM item_group_metadata WHERE crf_version_id = ?;

			DELETE FROM item_group WHERE item_group_id in (select distinct ig.item_group_id from item_group ig
			JOIN crf_version cv ON cv.crf_id = ig.crf_id
			LEFT JOIN item_group_metadata igm on igm.item_group_id = ig.item_group_id
			where  igm is null and ig.name != 'Ungrouped' and cv.crf_version_id = ?);

			DELETE FROM section WHERE crf_version_id = ?;

			DELETE FROM versioning_map WHERE crf_version_id = ?;

			DELETE FROM response_set WHERE response_set_id IN (SELECT DISTINCT rs.response_set_id FROM response_set rs
			LEFT JOIN item_form_metadata ifm ON ifm.response_set_id = rs.response_set_id
			WHERE ifm is null AND rs.version_id = ?);

			DELETE FROM coded_item_element WHERE id IN (SELECT DISTINCT cie.id FROM coded_item_element cie
			JOIN item_data id ON id.item_data_id = cie.item_data_id
			JOIN event_crf ec ON ec.event_crf_id = id.event_crf_id
			JOIN crf_version cv ON cv.crf_version_id = ec.crf_version_id
			WHERE cv.crf_version_id = ?);

			DELETE FROM coded_item WHERE id IN (SELECT DISTINCT ci.id FROM coded_item ci
			JOIN crf_version cv on cv.crf_version_id = ci.crf_version_id
			WHERE cv.crf_version_id = ?);

			DELETE FROM item_data WHERE item_data_id IN (SELECT DISTINCT id.item_data_id FROM item_data id
			JOIN event_crf ec ON ec.event_crf_id = id.event_crf_id
			JOIN crf_version cv ON cv.crf_version_id = ec.crf_version_id
			WHERE cv.crf_version_id = ?);

			DELETE FROM event_crf where crf_version_id = ?;

			DELETE FROM item WHERE item.item_id NOT IN (SELECT item_id FROM versioning_map);

			DELETE FROM crf_version WHERE crf_version_id = ?;
		</sql>
	</query>
</queries>
