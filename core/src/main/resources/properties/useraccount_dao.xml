<?xml version="1.0"?>
<queries>
	<query>
		<name>findByPK</name>
		<sql>SELECT * FROM USER_ACCOUNT WHERE USER_ID = ?</sql>
	</query>
	<query>
		<name>findAll</name>
		<sql>SELECT * FROM USER_ACCOUNT</sql>
	</query>
	<query>
		<name>findAllByLimit</name>
		<sql>SELECT * FROM USER_ACCOUNT limit 5</sql>
	</query>
	<query>
		<name>insert</name>
		<sql>insert into user_account (user_id,user_name, passwd, first_name, last_name,
			email, active_study, institutional_affiliation,
			status_id, owner_id, date_created,
			passwd_challenge_question, passwd_challenge_answer,
			phone, user_type_id,run_webservices)
			values (?,?,?,?,?,?,?,?,?,?,now(),?,?,?,?,?)</sql>
	</query>
	<query>
		<name>insertStudyUserRole</name>
		<sql>insert into study_user_role (role_name, study_id, status_id, user_name, owner_id, date_created)
			values(?,?,?,?,?,now())
		</sql>
	</query>
		<query>
		<name>findStudyUserRole</name>
		<sql>select * from study_user_role where role_name=? and study_id=? and status_id=? and user_name=?
		</sql>
	</query>
    <query>
        <name>updatePentahoAutoLoginParams</name>
        <sql>update user_account set pentaho_user_session=?, pentaho_token_date=? where user_id=?</sql>
    </query>
	<query>
		<name>update</name>
		<sql>update user_account set user_name=?, passwd=?, first_name=?, last_name=?,
			email=?, active_study=?, institutional_affiliation=?,
			status_id=?, update_id=?, date_updated=now(), date_lastvisit=?,
			passwd_timestamp=?, passwd_challenge_question=?,
			passwd_challenge_answer=?, phone=?, user_type_id=?, account_non_locked=?,lock_counter=?,run_webservices=?,enabled=?
			where user_id=?</sql>
	</query>
    <query>
        <name>updateUserType</name>
        <sql>update user_account set user_type_id = ? where user_id = ?</sql>
    </query>
	<query>
		<name>createRole</name>
		<sql>insert into study_user_role (role_name, study_id, status_id, owner_id, date_created)
		values (?,?,?,?,now())</sql>
	</query>
	<query>
		<name>deleteTestOnly</name>
		<sql>delete from user_account where user_name=?</sql>
	</query>
	<query>
		<name>delete</name>
		<sql>update user_account set status_id = 5, enabled = FALSE, update_id=? where user_id = ?</sql>
	</query>
    <query>
        <name>deleteUserRole</name>
        <sql>delete from study_user_role where user_name = ? and role_name = ? and (study_id = ? or study_id is null)</sql>
    </query>
	<query>
		<name>deleteStudyUserRolesByUserID</name>
		<sql>update study_user_role set status_id = 5 where user_name = ?</sql>
	</query>
    <query>
		<name>deleteStudyUserRolesIncludeAutoRemove</name>
		<sql>update study_user_role set status_id = 7 where user_name = ? AND status_id = 1</sql>
	</query>
    <query>
		<name>restore</name>
		<sql>update user_account set status_id = 1, passwd=?, update_id=?, passwd_timestamp=NULL, enabled = TRUE where user_id = ?</sql>
	</query>
	<query>
        <name>updateLockCounter</name>
        <sql>update user_account set lock_counter = ?  where user_id = ?</sql>
    </query>
    <query>
        <name>lockUser</name>
        <sql>update user_account set account_non_locked = ? , status_id= ? where user_id = ?</sql>
    </query>
	<query>
		<name>restoreStudyUserRolesByUserID</name>
		<sql>update study_user_role set status_id = 1 where user_name = ? AND status_id = 7</sql>
	</query>
	<query>
		<name>findByUserName</name>
		<sql>select * from user_account where user_name=?</sql>
	</query>
	<query>
		<name>findAllRolesByUserName</name>
		<sql>select * from study_user_role where user_name=?</sql>
	</query>
	<query>
		<name>findRole</name>
		<sql>select * from user_role where role_name=?</sql>
	</query>
	<query>
		<name>findPrivilegesByRole</name>
		<sql>select p.priv_id, p.priv_name, p.priv_desc, prm.priv_value from privilege p,
		role_privilege_map prm where p.priv_id=prm.priv_id and prm.role_id=?</sql>
	</query>
	<query>
		<name>findPrivilegesByRoleName</name>
		<sql>select p.priv_id, p.priv_name, p.priv_desc, prm.priv_value from privilege p,
		role_privilege_map prm, user_role ur where p.priv_id=prm.priv_id 
		and prm.role_id=ur.role_id and ur.role_name=?</sql>
	</query>
	<query>
		<name>updateStudyUserRole</name>
		<sql>
			UPDATE
				study_user_role
			SET
				role_name = ?
				, status_id = ?
				, date_updated = NOW()
				, update_id = ?
			WHERE
				study_id = ?
				AND user_name = ?
		</sql>
	</query>
	<query>
		<name>getCurrentPK</name>
		<sql>SELECT currval('user_account_user_id_seq') AS key</sql>
	</query>
	<query>
		<name>getNextPK</name>
		<sql>SELECT nextval('user_account_user_id_seq') AS key</sql>
	</query>
	<query>
		<name>addSysAdminRole</name>
		<sql>insert into study_user_role (role_name, user_name, status_id, owner_id, date_created, update_id, date_updated)
			values ('system administrator',?,1,?,now(),?,now())
		</sql>
	</query>
	<query>
		<name>removeSysAdminRole</name>
		<sql>delete from study_user_role where user_name=? and role_name='system administrator'</sql>
	</query>
    <query>
	    <name>findStudyByUser</name>
	    <sql>
            select sur.role_name, s.study_id ,s.name
	        from study_user_role sur, study s
            where (sur.study_id = s.study_id or (sur.study_id is null and sur.role_name = 'system administrator'))
            and sur.status_id = 1 and sur.user_name=?
            order by sur.study_id asc
        </sql>
	</query>
	<query>
		<name>findAllByParent</name>
		<sql>SELECT study_id,name FROM STUDY WHERE parent_study_id=?
		order by study_id asc</sql>
	</query>
	<query>
		<name>findAllByStudyId</name>
		<sql>SELECT sur.* FROM study_user_role sur, study st
		 WHERE sur.study_id=st.study_id
		AND (st.study_id=? or st.parent_study_id=?)
		order by sur.date_updated desc
		</sql>
	</query>
	<query>
		<name>findAllByStudyIdAndLimit</name>
		<sql>SELECT sur.* FROM study_user_role sur, study st
		 WHERE sur.study_id=st.study_id
		AND (st.study_id=? or st.parent_study_id=?)
		order by sur.date_updated desc limit 5
		</sql>
	</query>
	<query>
		<name>findAllUsersByStudy</name>
		<sql>
			SELECT
				ua.user_name
				, ua.first_name
				, ua.last_name
				, sur.role_name
				, sur.study_id
				, sur.status_id
				, sur.date_updated
				, sur.update_id
				, s.name
                , s.parent_study_id
				, ua.user_id
			FROM
				user_account ua
				, study_user_role sur
				, study s
			WHERE ua.user_name=sur.user_name
				AND (sur.study_id=s.study_id)
				AND ua.status_id=1
				AND sur.status_id=1
				AND (s.study_id=? OR s.parent_study_id=?)
			ORDER BY ua.date_created ASC
		</sql>
	</query>
	<query>
		<name>findAllRolesByStudy</name>
		<sql>
			SELECT
				ua.user_name
				, ua.first_name
				, ua.last_name
				, sur.role_name
				, sur.study_id
				, sur.status_id
				, sur.date_updated
				, sur.update_id
				, s.name
                , s.parent_study_id
				, ua.user_id
			FROM
				user_account ua
				, study_user_role sur
				, study s
			WHERE ua.user_name=sur.user_name
				AND (sur.study_id=s.study_id)
				AND ua.status_id=1
				AND (s.study_id=? OR s.parent_study_id=?)
			ORDER BY ua.date_created ASC
		</sql>
	</query>
    <query>
        <name>findAllUsersByStudyOrSite</name>
        <sql>
            SELECT
                ua.user_name
                , ua.first_name
                , ua.last_name
                , sur.role_name
                , sur.study_id
                , sur.status_id
                , sur.date_updated
                , sur.update_id
                , s.name
                , s.parent_study_id
                , ua.user_id
            FROM
                user_account ua
                , study_user_role sur
                , study s
            WHERE ua.user_name=sur.user_name
                AND (sur.study_id=s.study_id)
                AND ua.status_id=1
                AND sur.status_id=1
                AND (s.study_id=? OR s.study_id=?
			        OR s.study_id in (select ss.study_id from study_subject ss WHERE ss.study_subject_id=?)
                )
                ORDER BY ua.last_name ASC
        </sql>
    </query>
    <query>
        <name>findAllByRole</name>
        <sql>SELECT DISTINCT ON(uc.user_name) uc.* FROM study_user_role sur, user_account uc
            WHERE sur.user_name=uc.user_name and (sur.role_name=? OR sur.role_name=?)
        </sql>
    </query>
    <query>
        <name>insertPasswdHistory</name>
        <sql>insert into password (user_name, user_id, passwd, date_first_used, date_last_used)
            values(?,?,?,?,?)
        </sql>
    </query>
    <query>
        <name>updatePasswdHistory</name>
        <sql>update password set date_last_used = ? where user_name = ? AND passwd = ?</sql>
    </query>
    <query>
        <name>getPasswdHistory</name>
        <sql>select * from password where user_name=? and passwd = ?</sql>
    </query>
    <query>
                <name>findByUserEmail</name>
                <sql>select * from user_account where email=?</sql>
    </query>
    <query>
        <name>usersAssignedMetric</name>
        <sql>
            select count(distinct sur.oid)
			from study_user_role sur, study s
			where sur.study_id = s.study_id
			and (s.study_id = ? or s.parent_study_id = ?)
        </sql>
    </query>
</queries>