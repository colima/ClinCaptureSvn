<?xml version="1.0"?>
<queries>
    <query>
        <name>findByPK</name>
        <sql>SELECT * FROM discrepancy_note WHERE
            discrepancy_note_id = ?
        </sql>
    </query>
    <query>
        <name>findAll</name>
        <sql>SELECT * FROM discrepancy_note</sql>
    </query>
    <query>
        <name>findAllSubjectDNByStudy</name>
        <sql>
            SELECT distinct dn.*, ss.label, dad.age, dad.days, NULL item_name, NULL crf_name, NULL event_name, NULL item_value,
            0 item_data_ordinal, ds.column_name AS entity_name
            FROM discrepancy_note dn
            left join study s on s.study_id = ? or s.parent_study_id = ?
            join dn_age_days dad on dad.discrepancy_note_id = dn.discrepancy_note_id
            join dn_subject_map ds on ds.discrepancy_note_id = dn.discrepancy_note_id
            join study_subject ss on ss.subject_id = ds.subject_id and ss.study_id = s.study_id and ss.status_id not in (5)
            where (dn.parent_dn_id IS NULL or dn.parent_dn_id = 0)
        </sql>
    </query>
    <query>
        <name>countAllSubjectDNByStudyForStat</name>
        <sql>
            SELECT count(*), dn.discrepancy_note_type_id, dn.resolution_status_id, 1 as id
            FROM discrepancy_note dn
            left join study s on s.study_id = ? or s.parent_study_id = ?
            join dn_subject_map ds on ds.discrepancy_note_id = dn.discrepancy_note_id
            join study_subject ss on ss.subject_id = ds.subject_id and ss.study_id = s.study_id and ss.status_id not in (5)
            where (dn.parent_dn_id IS NULL or dn.parent_dn_id = 0)
        </sql>
    </query>
	<query>
		<name>countUsersDNForStatFilter</name>
		<sql>
			AND (dn.owner_id = ? OR dn.assigned_user_id = ?)
		</sql>
	</query>
	<query>
		<name>countDNGroupBySuffix</name>
		<sql>
			GROUP BY dn.discrepancy_note_type_id, dn.resolution_status_id
		</sql>
	</query>
    <query>
        <name>findEventCRFDNotesForToolTips</name>
        <sql>
            SELECT dn.*, eventcrf_map.column_name FROM discrepancy_note dn, dn_event_crf_map eventcrf_map,
            event_crf eventcrf WHERE eventcrf.event_crf_id =?
            AND
            eventcrf.event_crf_id=eventcrf_map.event_crf_id
            AND eventcrf_map.discrepancy_note_id=dn.discrepancy_note_id
            and dn.parent_dn_id !=0
            and column_name='date_interviewed'
            and dn.discrepancy_note_id = (select max(dn2.discrepancy_note_id) from discrepancy_note dn2,event_crf
            eventcrf2,dn_event_crf_map eventcrf_map2 where
            eventcrf2.event_crf_id=eventcrf_map2.event_crf_id and eventcrf2.event_crf_id = ? AND
            eventcrf_map2.discrepancy_note_id=dn2.discrepancy_note_id and column_name='date_interviewed')
            union

            SELECT dn.*, eventcrf_map.column_name FROM discrepancy_note dn, dn_event_crf_map eventcrf_map,
            event_crf eventcrf WHERE eventcrf.event_crf_id =?
            AND
            eventcrf.event_crf_id=eventcrf_map.event_crf_id
            AND eventcrf_map.discrepancy_note_id=dn.discrepancy_note_id
            and dn.discrepancy_note_id = (SELECT dn.parent_dn_id FROM discrepancy_note dn, dn_event_crf_map
            eventcrf_map,
            event_crf eventcrf WHERE eventcrf.event_crf_id =?
            AND
            eventcrf.event_crf_id=eventcrf_map.event_crf_id
            AND eventcrf_map.discrepancy_note_id=dn.discrepancy_note_id
            and dn.parent_dn_id !=0
            and column_name='date_interviewed'
            and dn.discrepancy_note_id = (select max(dn2.discrepancy_note_id) from discrepancy_note dn2,event_crf
            eventcrf2,dn_event_crf_map eventcrf_map2 where
            eventcrf2.event_crf_id=eventcrf_map2.event_crf_id and eventcrf2.event_crf_id = ? AND
            eventcrf_map2.discrepancy_note_id=dn2.discrepancy_note_id and column_name='date_interviewed'))
            union
            SELECT dn.*, eventcrf_map.column_name FROM discrepancy_note dn, dn_event_crf_map eventcrf_map,
            event_crf eventcrf WHERE eventcrf.event_crf_id =?
            AND
            eventcrf.event_crf_id=eventcrf_map.event_crf_id
            AND eventcrf_map.discrepancy_note_id=dn.discrepancy_note_id
            and dn.parent_dn_id !=0
            and column_name='interviewer_name'
            and dn.discrepancy_note_id = (select max(dn2.discrepancy_note_id) from discrepancy_note dn2,event_crf
            eventcrf2,dn_event_crf_map eventcrf_map2 where
            eventcrf2.event_crf_id=eventcrf_map2.event_crf_id and eventcrf2.event_crf_id = ? AND
            eventcrf_map2.discrepancy_note_id=dn2.discrepancy_note_id and column_name='interviewer_name')
            union

            SELECT dn.*, eventcrf_map.column_name FROM discrepancy_note dn, dn_event_crf_map eventcrf_map,
            event_crf eventcrf WHERE eventcrf.event_crf_id =?
            AND
            eventcrf.event_crf_id=eventcrf_map.event_crf_id
            AND eventcrf_map.discrepancy_note_id=dn.discrepancy_note_id
            and dn.discrepancy_note_id = (SELECT dn.parent_dn_id FROM discrepancy_note dn, dn_event_crf_map
            eventcrf_map,
            event_crf eventcrf WHERE eventcrf.event_crf_id =?
            AND
            eventcrf.event_crf_id=eventcrf_map.event_crf_id
            AND eventcrf_map.discrepancy_note_id=dn.discrepancy_note_id
            and dn.parent_dn_id !=0
            and column_name='interviewer_name'
            and dn.discrepancy_note_id = (select max(dn2.discrepancy_note_id) from discrepancy_note dn2,event_crf
            eventcrf2,dn_event_crf_map eventcrf_map2 where
            eventcrf2.event_crf_id=eventcrf_map2.event_crf_id and eventcrf2.event_crf_id = ? AND
            eventcrf_map2.discrepancy_note_id=dn2.discrepancy_note_id and column_name='interviewer_name'))
        </sql>
    </query>
    <query>
        <name>findAllStudySubjectDNByStudy</name>
        <sql>
            SELECT distinct dn.*,ss.label, dad.age, dad.days, NULL item_name, NULL crf_name, NULL event_name, NULL item_value,
            0 item_data_ordinal, dss.column_name AS entity_name
            FROM discrepancy_note dn
            left join study s on s.study_id = ? or s.parent_study_id = ?
            join dn_age_days dad on dad.discrepancy_note_id = dn.discrepancy_note_id
            join dn_study_subject_map dss on dss.discrepancy_note_id = dn.discrepancy_note_id
            join study_subject ss on ss.study_subject_id = dss.study_subject_id and ss.study_id = s.study_id and ss.status_id not in (5)
            where (dn.parent_dn_id IS NULL or dn.parent_dn_id = 0)
        </sql>
    </query>
    <query>
        <name>countAllStudySubjectDNByStudyForStat</name>
        <sql>
            SELECT count(*), dn.discrepancy_note_type_id, dn.resolution_status_id, 2 as id
            FROM discrepancy_note dn
            left join study s on s.study_id = ? or s.parent_study_id = ?
            join dn_study_subject_map dss on dss.discrepancy_note_id = dn.discrepancy_note_id
            join study_subject ss on ss.study_subject_id = dss.study_subject_id and ss.study_id = s.study_id and ss.status_id not in (5)
            where (dn.parent_dn_id IS NULL or dn.parent_dn_id = 0)
        </sql>
    </query>
    <query>
        <name>findAllStudyEventDNByStudy</name>
        <sql>
            SELECT distinct dn.*,ss.label, dad.age, dad.days, NULL item_name, NULL crf_name, sed.name event_name, NULL item_value,
            0 item_data_ordinal, dse.column_name AS entity_name
            FROM discrepancy_note dn
            left join study s on s.study_id = ? or s.parent_study_id = ?
            join dn_age_days dad on dad.discrepancy_note_id = dn.discrepancy_note_id
            join dn_study_event_map dse on dse.discrepancy_note_id = dn.discrepancy_note_id
            join study_event se on se.study_event_id = dse.study_event_id AND se.status_id not in (5,7)
            join study_subject ss on ss.study_subject_id = se.study_subject_id and ss.study_id = s.study_id
            join study_event_definition sed on sed.study_event_definition_id = se.study_event_definition_id and sed.status_id not in (5,7)
            where (dn.parent_dn_id IS NULL or dn.parent_dn_id = 0)
        </sql>
    </query>
    <query>
        <name>countAllStudyEventDNByStudyForStat</name>
        <sql>
            SELECT count(*), dn.discrepancy_note_type_id, dn.resolution_status_id, 3 as id
            FROM discrepancy_note dn
            left join study s on s.study_id = ? or s.parent_study_id = ?
            join dn_study_event_map dse on dse.discrepancy_note_id = dn.discrepancy_note_id
            join study_event se on se.study_event_id = dse.study_event_id AND se.status_id not in (5,7)
            join study_subject ss on ss.study_subject_id = se.study_subject_id and ss.study_id = s.study_id
            join study_event_definition sed on sed.study_event_definition_id = se.study_event_definition_id and sed.status_id not in (5,7)
            where (dn.parent_dn_id IS NULL or dn.parent_dn_id = 0)
        </sql>
    </query>
    <query>
        <name>findAllEventCrfDNByStudy</name>
        <sql>
            SELECT distinct dn.*,ss.label, dad.age, dad.days, NULL item_name, c.name crf_name, sed.name event_name, NULL
            item_value, 0 item_data_ordinal, dec.column_name AS entity_name
            FROM discrepancy_note dn
            left join study s on s.study_id = ? or s.parent_study_id = ?
            join dn_age_days dad on dad.discrepancy_note_id = dn.discrepancy_note_id
            join dn_event_crf_map dec on dec.discrepancy_note_id = dn.discrepancy_note_id
            join event_crf ec on ec.event_crf_id = dec.event_crf_id and ec.status_id not in (5,7)
            join study_subject ss on ss.study_subject_id = ec.study_subject_id and ss.study_id = s.study_id
            join crf_version cv on cv.crf_version_id = ec.crf_version_id
            join crf c on c.crf_id = cv.crf_id
            join study_event se on se.study_event_id = ec.study_event_id AND se.status_id not in (5,7)
            join study_event_definition sed on sed.study_event_definition_id = se.study_event_definition_id and sed.status_id not in (5,7)
            where (dn.parent_dn_id IS NULL or dn.parent_dn_id = 0)
        </sql>
    </query>
    <query>
        <name>countAllEventCrfDNByStudyForStat</name>
        <sql>
            SELECT count(*), dn.discrepancy_note_type_id, dn.resolution_status_id, 4 as id
            FROM discrepancy_note dn
            left join study s on s.study_id = ? or s.parent_study_id = ?
            join dn_event_crf_map dec on dec.discrepancy_note_id = dn.discrepancy_note_id
            join event_crf ec on ec.event_crf_id = dec.event_crf_id and ec.status_id not in (5,7)
            join study_subject ss on ss.study_subject_id = ec.study_subject_id and ss.study_id = s.study_id
            join crf_version cv on cv.crf_version_id = ec.crf_version_id
            join crf c on c.crf_id = cv.crf_id
            join study_event se on se.study_event_id = ec.study_event_id AND se.status_id not in (5,7)
            join study_event_definition sed on sed.study_event_definition_id = se.study_event_definition_id and sed.status_id not in (5,7)
            where (dn.parent_dn_id IS NULL or dn.parent_dn_id = 0)
        </sql>
    </query>
    <query>
        <name>findAllItemDataDNByStudy</name>
        <sql>
            SELECT distinct dn.*, ss.label, dad.age, dad.days, it.name item_name, c.name crf_name, sed.name event_name, itd.value
            item_value, itd.ordinal item_data_ordinal, it.name AS entity_name
            FROM discrepancy_note dn
            left join study s on s.study_id = ? or s.parent_study_id = ?
            join dn_age_days dad on dad.discrepancy_note_id = dn.discrepancy_note_id
            join dn_item_data_map did on did.discrepancy_note_id = dn.discrepancy_note_id
            join item_data itd on itd.item_data_id = did.item_data_id
            join item it on it.item_id = itd.item_id
            join event_crf ec on ec.event_crf_id = itd.event_crf_id and ec.status_id not in (5,7)
            join study_subject ss on ss.study_subject_id = ec.study_subject_id and ss.study_id = s.study_id
            join crf_version cv on cv.crf_version_id = ec.crf_version_id
            join crf c on c.crf_id = cv.crf_id
            join study_event se on se.study_event_id = ec.study_event_id AND se.status_id not in (5,7)
            join study_event_definition sed on sed.study_event_definition_id = se.study_event_definition_id and sed.status_id not in (5,7)
            where (dn.parent_dn_id IS NULL or dn.parent_dn_id = 0)
        </sql>
    </query>
    <query>
        <name>countAllItemDataDNByStudyForStat</name>
        <sql>
            SELECT count(*), dn.discrepancy_note_type_id, dn.resolution_status_id, 5 as id
            FROM discrepancy_note dn
            left join study s on s.study_id = ? or s.parent_study_id = ?
            join dn_item_data_map did on did.discrepancy_note_id = dn.discrepancy_note_id
            join item_data itd on itd.item_data_id = did.item_data_id
            join item it on it.item_id = itd.item_id
            join event_crf ec on ec.event_crf_id = itd.event_crf_id and ec.status_id not in (5,7)
            join study_subject ss on ss.study_subject_id = ec.study_subject_id and ss.study_id = s.study_id
            join crf_version cv on cv.crf_version_id = ec.crf_version_id
            join crf c on c.crf_id = cv.crf_id
            join study_event se on se.study_event_id = ec.study_event_id AND se.status_id not in (5,7)
            join study_event_definition sed on sed.study_event_definition_id = se.study_event_definition_id and sed.status_id not in (5,7)
            where (dn.parent_dn_id IS NULL or dn.parent_dn_id = 0)
            <!-- add GROUP BY dn.discrepancy_note_type_id, dn.resolution_status_id in code-->
        </sql>
    </query>
    <query>
        <name>getCountWithFilter</name>
        <sql>SELECT COUNT(dn.discrepancy_note_id) as count from discrepancy_note dn,study s, user_account ua
            where dn.study_id = s.study_id and dn.assigned_user_id = ua.user_id
            and ( s.study_id =? or s.parent_study_id =?)
            and dn.parent_dn_id is null
        </sql>
    </query>
    <query>
        <name>getWithFilterAndSort</name>
        <sql>SELECT dn.* from discrepancy_note dn,study s, user_account ua
            where dn.study_id = s.study_id and dn.assigned_user_id = ua.user_id
            and ( s.study_id =? or s.parent_study_id =? )
            and dn.parent_dn_id is null
        </sql>
    </query>
    <query>
        <name>findAllParentsByStudy</name>
        <sql>
            SELECT *
            FROM discrepancy_note
            WHERE ((parent_dn_id IS NULL) or (parent_dn_id = 0))
            AND (study_id = ?
            OR study_id in
            (SELECT study_id
            FROM study
            WHERE parent_study_id=?))
        </sql>
    </query>
    <query>
        <name>findAllByStudyAndParent</name>
        <sql>
            SELECT *
            FROM discrepancy_note
            WHERE parent_dn_id = ?
            AND (study_id = ?
            OR study_id in
            (SELECT study_id
            FROM study
            WHERE parent_study_id=?)
            OR study_id in (SELECT parent_study_id FROM study WHERE study_id=?)
            ) ORDER BY date_created
        </sql>
    </query>
    <query>
        <name>findAllSubjectByStudy</name>
        <sql>
            SELECT dn.*, ss.label,dsm.column_name,dsm.subject_id
            FROM discrepancy_note dn, dn_subject_map dsm,
            study_subject ss, subject sub
            WHERE (dn.study_id = ?
            OR dn.study_id in
            (SELECT study_id
            FROM study
            WHERE parent_study_id=?))
            AND dn.discrepancy_note_id=dsm.discrepancy_note_id
            AND dsm.subject_id = sub.subject_id
            AND ss.study_id = ?
            AND ss.subject_id = sub.subject_id
            AND ((dn.parent_dn_id IS NULL) or (dn.parent_dn_id = 0))

        </sql>
    </query>
    <query>
        <name>findAllSubjectByStudyAndId</name>
        <sql>
            SELECT dn.*, ss.label,dsm.column_name,dsm.subject_id
            FROM discrepancy_note dn, dn_subject_map dsm,
            study_subject ss, subject sub
            WHERE (dn.study_id = ?
            OR dn.study_id in
            (SELECT study_id
            FROM study
            WHERE parent_study_id=?))
            AND dn.discrepancy_note_id=dsm.discrepancy_note_id
            AND dsm.subject_id = sub.subject_id
            AND ss.study_id = ?
            AND ss.subject_id = ?
            AND ss.subject_id = sub.subject_id
            AND ((dn.parent_dn_id IS NULL) or (dn.parent_dn_id = 0))
        </sql>
    </query>
    <query>
        <name>findAllSubjectByStudiesAndSubjectId</name>
        <sql>
            SELECT dn.*, ss.label,dsm.column_name,dsm.subject_id
            FROM discrepancy_note dn, dn_subject_map dsm,
            study_subject ss, subject sub
            WHERE (dn.study_id in (?,?)
            OR dn.study_id in
            (SELECT study_id
            FROM study
            WHERE parent_study_id = ?))
            AND dn.discrepancy_note_id=dsm.discrepancy_note_id
            AND dsm.subject_id = sub.subject_id
            AND ss.study_id in (?,?)
            AND ss.subject_id = ?
            AND ss.subject_id = sub.subject_id
            AND ((dn.parent_dn_id IS NULL) or (dn.parent_dn_id = 0))
        </sql>
    </query>
    <query>
        <name>findAllStudyEventByStudy</name>
        <sql>
            SELECT dn.*, ss.label, se.date_start, sed.name as sed_name,
            dsm.column_name, dsm.study_event_id
            FROM discrepancy_note dn, dn_study_event_map dsm ,
            study_event se,
            study_event_definition sed,
            study_subject ss
            WHERE (dn.study_id = ?
            OR dn.study_id in
            (SELECT study_id
            FROM study
            WHERE parent_study_id=?))
            AND dn.discrepancy_note_id=dsm.discrepancy_note_id
            AND dsm.study_event_id =se.study_event_id
            AND sed.study_event_definition_id= se.study_event_definition_id
            AND se.study_subject_id = ss.study_subject_id
            AND ((dn.parent_dn_id IS NULL) or (dn.parent_dn_id = 0))
        </sql>
    </query>

    <query>
        <name>findAllStudyEventByStudyAndId</name>
        <sql>
            SELECT dn.*, ss.label, se.date_start, sed.name as sed_name,
            dsm.column_name, dsm.study_event_id
            FROM discrepancy_note dn, dn_study_event_map dsm ,
            study_event se,
            study_event_definition sed,
            study_subject ss
            WHERE (dn.study_id = ?
            OR dn.study_id in
            (SELECT study_id
            FROM study
            WHERE parent_study_id=?))
            AND dn.discrepancy_note_id=dsm.discrepancy_note_id
            AND dsm.study_event_id =se.study_event_id
            AND sed.study_event_definition_id= se.study_event_definition_id
            AND se.study_subject_id = ?
            AND se.study_subject_id = ss.study_subject_id
            AND ((dn.parent_dn_id IS NULL) or (dn.parent_dn_id = 0))
        </sql>
    </query>
    <query>
        <name>findAllStudyEventByStudiesAndSubjectId</name>
        <sql>
            SELECT dn.*, ss.label, se.date_start, sed.name as sed_name,
            dsm.column_name, dsm.study_event_id
            FROM discrepancy_note dn, dn_study_event_map dsm ,
            study_event se,
            study_event_definition sed,
            study_subject ss
            WHERE (dn.study_id in (?,?)
            OR dn.study_id in
            (SELECT study_id
            FROM study
            WHERE parent_study_id=?))
            AND dn.discrepancy_note_id=dsm.discrepancy_note_id
            AND dsm.study_event_id =se.study_event_id
            AND sed.study_event_definition_id= se.study_event_definition_id
            AND se.study_subject_id = ?
            AND se.study_subject_id = ss.study_subject_id
            AND ((dn.parent_dn_id IS NULL) or (dn.parent_dn_id = 0))
        </sql>
    </query>
    <query>
        <name>findAllStudySubjectByStudy</name>
        <sql>
            SELECT dn.*, ss.label,dsm.column_name, dsm.study_subject_id
            FROM discrepancy_note dn, dn_study_subject_map dsm ,
            study_subject ss
            WHERE (dn.study_id = ?
            OR dn.study_id in
            (SELECT study_id
            FROM study
            WHERE parent_study_id=?))
            AND dn.discrepancy_note_id=dsm.discrepancy_note_id
            AND dsm.study_subject_id = ss.study_subject_id
            AND ((dn.parent_dn_id IS NULL) or (dn.parent_dn_id = 0))
        </sql>
    </query>
    <query>
        <name>findAllStudySubjectByStudyAndId</name>
        <sql>
            SELECT dn.*, ss.label,dsm.column_name, dsm.study_subject_id
            FROM discrepancy_note dn, dn_study_subject_map dsm ,
            study_subject ss
            WHERE (dn.study_id = ?
            OR dn.study_id in
            (SELECT study_id
            FROM study
            WHERE parent_study_id=?))
            AND dn.discrepancy_note_id=dsm.discrepancy_note_id
            AND ss.study_subject_id = ?
            AND dsm.study_subject_id = ss.study_subject_id
            AND ((dn.parent_dn_id IS NULL) or (dn.parent_dn_id = 0))
        </sql>
    </query>
    <query>
        <name>findAllStudySubjectByStudiesAndStudySubjectId</name>
        <sql>
            SELECT dn.*, ss.label,dsm.column_name, dsm.study_subject_id
            FROM discrepancy_note dn, dn_study_subject_map dsm ,
            study_subject ss
            WHERE (dn.study_id in (?,?)
            OR dn.study_id in
            (SELECT study_id
            FROM study
            WHERE parent_study_id=?))
            AND dn.discrepancy_note_id=dsm.discrepancy_note_id
            AND ss.study_subject_id = ?
            AND dsm.study_subject_id = ss.study_subject_id
            AND ((dn.parent_dn_id IS NULL) or (dn.parent_dn_id = 0))
        </sql>
    </query>
    <query>
        <name>findAllEventCRFByStudy</name>
        <sql>
            SELECT dn.*, ss.label, se.date_start, sed.name as sed_name,
            crf.name as crf_name, dsm.column_name,dsm.event_crf_id
            FROM discrepancy_note dn, dn_event_crf_map dsm ,
            event_crf ec, study_event se,
            study_event_definition sed, crf_version cv,
            study_subject ss, crf
            WHERE (dn.study_id = ?
            OR dn.study_id in
            (SELECT study_id
            FROM study
            WHERE parent_study_id=?))
            AND dn.discrepancy_note_id=dsm.discrepancy_note_id
            AND ec.event_crf_id = dsm.event_crf_id
            AND ec.study_event_id=se.study_event_id
            AND sed.study_event_definition_id= se.study_event_definition_id
            AND se.study_subject_id = ss.study_subject_id
            AND ec.crf_version_id=cv.crf_version_id
            AND cv.crf_id = crf.crf_id
            AND ((dn.parent_dn_id IS NULL) or (dn.parent_dn_id = 0))
        </sql>
    </query>

    <query>
        <name>findAllEventCRFByStudyAndParent</name>
        <sql>
            SELECT dn.*, ss.label, se.date_start, sed.name as sed_name,
            crf.name as crf_name, dsm.column_name,dsm.event_crf_id
            FROM discrepancy_note dn, dn_event_crf_map dsm ,
            event_crf ec, study_event se,
            study_event_definition sed, crf_version cv,
            study_subject ss, crf
            WHERE (dn.study_id = ?
            OR dn.study_id in
            (SELECT study_id
            FROM study
            WHERE parent_study_id=?))
            AND dn.discrepancy_note_id=dsm.discrepancy_note_id
            AND ec.event_crf_id = dsm.event_crf_id
            AND ec.study_event_id=se.study_event_id
            AND sed.study_event_definition_id= se.study_event_definition_id
            AND se.study_subject_id = ss.study_subject_id
            AND ec.crf_version_id=cv.crf_version_id
            AND cv.crf_id = crf.crf_id
            AND dn.parent_dn_id = ?
        </sql>
    </query>
    <query>
        <name>findAllItemDataByStudy</name>
        <sql>
            SELECT dn.*, ss.label, se.date_start, se.study_event_definition_id as sed_id, sed.name as sed_name,
            crf.name as crf_name, it.name as item_name, id.value, it.item_id, dsm.item_data_id
            FROM discrepancy_note dn, dn_item_data_map dsm ,
            item_data id, item it, event_crf ec, study_event se,
            study_event_definition sed, crf_version cv,
            study_subject ss, crf
            WHERE (dn.study_id = ?
            OR dn.study_id in
            (SELECT study_id
            FROM study
            WHERE parent_study_id=?))
            AND dn.discrepancy_note_id=dsm.discrepancy_note_id
            AND dsm.item_data_id = id.item_data_id
            AND id.item_id = it.item_id
            AND ec.event_crf_id = id.event_crf_id
            AND ec.study_event_id=se.study_event_id
            AND sed.study_event_definition_id= se.study_event_definition_id
            AND se.study_subject_id = ss.study_subject_id
            AND ec.crf_version_id=cv.crf_version_id
            AND cv.crf_id = crf.crf_id
            AND ((dn.parent_dn_id IS NULL) or (dn.parent_dn_id = 0))
        </sql>
    </query>
    <query>
        <name>countAllItemDataByStudyAndUser</name>
        <sql>
            SELECT count(dn.discrepancy_note_id) as count
            FROM discrepancy_note dn, dn_item_data_map dsm ,
            item_data id, item it, event_crf ec, study_event se,
            study_event_definition sed, crf_version cv,
            study_subject ss, crf
            WHERE (dn.study_id = ?
            OR dn.study_id in
            (SELECT study_id
            FROM study
            WHERE parent_study_id=?))
            AND dn.discrepancy_note_id=dsm.discrepancy_note_id
            AND dsm.item_data_id = id.item_data_id
            AND id.item_id = it.item_id
            AND ec.event_crf_id = id.event_crf_id
            AND ec.study_event_id=se.study_event_id
            AND sed.study_event_definition_id= se.study_event_definition_id
            AND se.study_subject_id = ss.study_subject_id
            AND ec.crf_version_id=cv.crf_version_id
            AND cv.crf_id = crf.crf_id
            AND ((dn.parent_dn_id IS NULL) or (dn.parent_dn_id = 0))
            AND dn.assigned_user_id=?
        </sql>
    </query>
    <query>
        <name>findAllItemDataByStudyAndParent</name>
        <sql>
            SELECT dn.*, ss.label, se.date_start, sed.name as sed_name,
            crf.name as crf_name, it.name as item_name, id.value, it.item_id, dsm.item_data_id
            FROM discrepancy_note dn, dn_item_data_map dsm ,
            item_data id, item it, event_crf ec, study_event se,
            study_event_definition sed, crf_version cv,
            study_subject ss, crf
            WHERE (dn.study_id = ?
            OR dn.study_id in
            (SELECT study_id
            FROM study
            WHERE parent_study_id=?))
            AND dn.discrepancy_note_id=dsm.discrepancy_note_id
            AND dsm.item_data_id = id.item_data_id
            AND id.item_id = it.item_id
            AND ec.event_crf_id = id.event_crf_id
            AND ec.study_event_id=se.study_event_id
            AND sed.study_event_definition_id= se.study_event_definition_id
            AND se.study_subject_id = ss.study_subject_id
            AND ec.crf_version_id=cv.crf_version_id
            AND cv.crf_id = crf.crf_id
            AND dn.parent_dn_id = ?
        </sql>
    </query>
    <query>
        <name>findAllBySubjectAndColumnAndStudy</name>
        <sql>
            SELECT dn.*,ss.label
            FROM discrepancy_note dn, dn_subject_map dsm,
            study_subject ss, subject sub, study st 
            where dsm.subject_id=?
            AND dsm.column_name=?
            AND dn.discrepancy_note_id=dsm.discrepancy_note_id
			AND (dn.study_id IN (SELECT study_id FROM study WHERE study.study_id = ? OR study.parent_study_id = ?))
            AND dsm.subject_id = sub.subject_id
            AND ss.subject_id = sub.subject_id
			AND ss.study_id = st.study_id
			AND (st.study_id = ? OR st.parent_study_id = ?) 
            order by dn.date_created desc

        </sql>
    </query>
    <query>
        <name>findAllByStudySubjectAndColumn</name>
        <sql>
            SELECT dn.* ,ss.label
            FROM discrepancy_note dn, dn_study_subject_map dsm,
            study_subject ss
            where dsm.study_subject_id=?
            AND dsm.column_name=?
            AND dn.discrepancy_note_id=dsm.discrepancy_note_id
            AND dsm.study_subject_id = ss.study_subject_id
            ORDER BY dn.date_created DESC

        </sql>
    </query>
	<query>
        <name>findAllEvCRFIdsWithUnclosedDNsByStSubId</name>
        <sql>
            SELECT distinct itd.event_crf_id
            FROM item_data itd, discrepancy_note dn, dn_item_data_map dsm
			where dsm.study_subject_id = ?
			AND dsm.column_name='value'
			AND dsm.discrepancy_note_id = dn.discrepancy_note_id
			AND dn.entity_type='itemData'
			AND dn.parent_dn_id is null
			AND (dn.resolution_status_id = '1' OR dn.resolution_status_id = '2')
			AND dsm.item_data_id = itd.item_data_id
        </sql>
    </query>
    <query>
        <name>findAllByStudyEventAndColumn</name>
        <sql>
            SELECT dn.*, ss.label, se.date_start, sed.name as sed_name
            FROM discrepancy_note dn, dn_study_event_map dsm ,
            study_event se,
            study_event_definition sed,
            study_subject ss
            where dsm.study_event_id=?
            AND dsm.column_name=?
            AND dn.discrepancy_note_id=dsm.discrepancy_note_id
            AND dsm.study_event_id =se.study_event_id
            AND sed.study_event_definition_id= se.study_event_definition_id
            AND se.study_subject_id = ss.study_subject_id
            order by dn.date_created desc

        </sql>
    </query>
    <query>
        <name>findAllByEventCRFAndColumn</name>
        <sql>
            SELECT dn.*, ss.label, se.date_start, sed.name as sed_name,
            crf.name as crf_name
            FROM discrepancy_note dn, dn_event_crf_map dsm,
            event_crf ec, study_event se,
            study_event_definition sed, crf_version cv,
            study_subject ss, crf
            where dsm.event_crf_id=?
            AND dsm.column_name=?
            AND dn.discrepancy_note_id=dsm.discrepancy_note_id
            AND ec.event_crf_id = dsm.event_crf_id
            AND ec.study_event_id=se.study_event_id
            AND sed.study_event_definition_id= se.study_event_definition_id
            AND se.study_subject_id = ss.study_subject_id
            AND ec.crf_version_id=cv.crf_version_id
            AND cv.crf_id = crf.crf_id
            order by dn.date_created desc

        </sql>
    </query>
    <query>
        <name>findAllByItemDataAndColumn</name>
        <sql>
            SELECT dn.* , ss.label, se.date_start, sed.name as sed_name,
            crf.name as crf_name,it.name as item_name
            FROM discrepancy_note dn, dn_item_data_map dsm,
            item_data id, event_crf ec, study_event se,
            study_event_definition sed, crf_version cv,
            study_subject ss, crf, item it
            where dsm.item_data_id=?
            AND dsm.column_name=?
            AND dn.discrepancy_note_id=dsm.discrepancy_note_id
            AND dsm.item_data_id = id.item_data_id
            AND id.item_id = it.item_id
            AND ec.event_crf_id = id.event_crf_id
            AND ec.study_event_id=se.study_event_id
            AND sed.study_event_definition_id= se.study_event_definition_id
            AND se.study_subject_id = ss.study_subject_id
            AND ec.crf_version_id=cv.crf_version_id
            AND cv.crf_id = crf.crf_id
            order by dn.date_created desc

        </sql>
    </query>
    <query>
        <name>findAllItemNotesByEventCRF</name>
        <sql>
            SELECT distinct dn.*
            FROM discrepancy_note dn, dn_item_data_map dsm,
            item_data id
            where id.event_crf_id=?
            AND dsm.column_name='value'
            AND (dn.entity_type='itemData' or dn.entity_type='ItemData')
            AND dn.discrepancy_note_id=dsm.discrepancy_note_id
            AND dsm.item_data_id = id.item_data_id
            order by dn.date_created desc
        </sql>
    </query>
    <query>
        <name>findAllParentItemNotesByEventCRF</name>
        <sql>
            SELECT distinct dn.*
            FROM discrepancy_note dn, dn_item_data_map dsm,
            item_data id
            where id.event_crf_id=?
            AND dsm.column_name='value'
            AND dn.entity_type='itemData'
            AND dn.discrepancy_note_id=dsm.discrepancy_note_id
            AND dsm.item_data_id = id.item_data_id
            AND dn.parent_dn_id is null
            order by dn.date_created desc
        </sql>
    </query>
    <query>
        <name>findAllByParent</name>
        <sql>
            SELECT dn.*
            FROM discrepancy_note dn
            WHERE parent_dn_id=?
            ORDER BY dn.date_created ASC
        </sql>
    </query>
    <query>
        <name>findAllDnIdsByStudyEvent</name>
        <sql>
            SELECT dn.discrepancy_note_id as discrepancy_note_id
            FROM discrepancy_note dn, dn_study_event_map dsm
            where dsm.study_event_id=?
            AND dn.discrepancy_note_id=dsm.discrepancy_note_id
        </sql>
    </query>
    <query>
        <name>countOfOutstandingDNsForStudySubject</name>
        <sql>
            select count(dn.resolution_status_id) from discrepancy_note dn,dn_item_data_map didm,event_crf ec,item_data
            ed,study_event se
            where
            SE.study_event_id = ec.study_event_id
            AND EC.event_crf_id = ed.event_crf_id
            AND ed.item_data_id = didm.item_data_id
            AND didm.discrepancy_note_id = dn.discrepancy_note_id
            AND se.study_subject_id = ?
            AND dn.parent_dn_id is null
            AND dn.resolution_status_id in (0,1,2,3)
        </sql>
    </query>
    <query>
        <name>countOfOutstandingDNsForStudyEvent</name>
        <sql>
            select count(dn.resolution_status_id) from discrepancy_note dn,dn_item_data_map didm,event_crf ec,item_data
            ed,study_event se
            where
            SE.study_event_id = ec.study_event_id
            AND EC.event_crf_id = ed.event_crf_id
            AND ed.item_data_id = didm.item_data_id
            AND didm.discrepancy_note_id = dn.discrepancy_note_id
            AND se.study_event_id = ?
            AND dn.parent_dn_id is null
            AND dn.resolution_status_id in (0,1,2,3)
        </sql>
    </query>
    <query>
        <name>countOfOutstandingDNsForEventCrf</name>
        <sql>
            select count(distinct dns.discrepancy_note_id)

            from

            (select dn.discrepancy_note_id from discrepancy_note dn, dn_event_crf_map dnecm
            where
            dnecm.event_crf_id = ?
            AND dnecm.discrepancy_note_id = dn.discrepancy_note_id
            AND dn.parent_dn_id is null
            AND dn.resolution_status_id in (0,1,2,3)

            union

            select dn.discrepancy_note_id from discrepancy_note dn, dn_item_data_map dnidm, item_data id
            where
            id.event_crf_id = ?
            AND dnidm.item_data_id = id.item_data_id
            AND dnidm.discrepancy_note_id = dn.discrepancy_note_id
            AND dn.parent_dn_id is null
            AND dn.resolution_status_id in (0,1,2,3)) dns
        </sql>
    </query>
    <query>
        <name>countOfOutstandingDNsForStudyEventFromStudyEventMap</name>
        <sql>
            select count(dn.resolution_status_id) from discrepancy_note dn, dn_study_event_map dsem, study_event se
            where
            se.study_event_id = dsem.study_event_id
            AND dsem.discrepancy_note_id = dn.discrepancy_note_id
            AND se.study_event_id = ?
            AND dn.parent_dn_id is null
            AND dn.resolution_status_id in (0,1,2,3)
        </sql>
    </query>
    <query>
        <name>countAllByStudyEventTypeAndStudyEvent</name>
        <sql>
            select count(dn.resolution_status_id)
            from discrepancy_note dn, dn_study_event_map dsem, study_event se
            where dsem.study_event_id = se.study_event_id
            and dsem.discrepancy_note_id = dn.discrepancy_note_id
            and se.study_event_id = ?
        </sql>
    </query>
	<query>
        <name>countViewNotesByStatusId</name>
        <sql>
            SELECT COUNT(dn.*) from discrepancy_note dn, study s
            WHERE dn.study_id = s.study_id 
			AND dn.resolution_status_id = ?
            AND ( s.study_id =? or s.parent_study_id =?)
            AND dn.parent_dn_id is null
        </sql>
    </query>
    <query>
        <name>create</name>
        <sql>
            INSERT INTO discrepancy_note
            (description, discrepancy_note_type_id ,
            resolution_status_id , detailed_notes , date_created,
            owner_id, parent_dn_id, entity_type, study_id, assigned_user_id)
            VALUES (?,?,?,?,sysdate,?,?, ?, ?, ?)
        </sql>
    </query>
    <query>
        <name>update</name>
        <sql>
            update discrepancy_note set
            description =?,
            discrepancy_note_type_id =? ,
            resolution_status_id =? ,
            detailed_notes =?
            where discrepancy_note_id=?

        </sql>
    </query>
    <query>
        <name>updateAssignedUser</name>
        <sql>
            update discrepancy_note set
            assigned_user_id = ?
            where discrepancy_note_id=?
        </sql>
    </query>
    <query>
        <name>updateAssignedUserToNull</name>
        <sql>
            update discrepancy_note set
            assigned_user_id = NULL
            where discrepancy_note_id=?
        </sql>
    </query>
    <query>
        <name>deleteNotes</name>
        <sql>
            delete from discrepancy_note where discrepancy_note_id = ?
        </sql>
    </query>
    <query>
        <name>createSubjectMap</name>
        <sql>
            INSERT INTO dn_subject_map
            (subject_id,
            discrepancy_note_id,
            column_name)
            VALUES (?,?,?)
        </sql>
    </query>
    <query>
        <name>createStudySubjectMap</name>
        <sql>
            INSERT INTO dn_study_subject_map
            (study_subject_id,
            discrepancy_note_id,
            column_name)
            VALUES (?,?,?)
        </sql>
    </query>
    <query>
        <name>createStudyEventMap</name>
        <sql>
            INSERT INTO dn_study_event_map
            (study_event_id,
            discrepancy_note_id,
            column_name)
            VALUES (?,?,?)
        </sql>
    </query>
    <query>
        <name>createEventCRFMap</name>
        <sql>
            INSERT INTO dn_event_crf_map
            (event_crf_id,
            discrepancy_note_id,
            column_name)
            VALUES (?,?,?)
        </sql>
    </query>
    <query>
        <name>createItemDataMap</name>
        <sql>
            INSERT INTO dn_item_data_map
            (item_data_id,
            discrepancy_note_id,
            column_name)
            VALUES (?,?,?)
        </sql>
    </query>
    <query>
        <name>findSubjectMapByDNId</name>
        <sql>
            SELECT * FROM dn_subject_map WHERE discrepancy_note_id=?
        </sql>
    </query>
    <query>
        <name>findStudySubjectMapByDNId</name>
        <sql>
            SELECT * FROM dn_study_subject_map WHERE discrepancy_note_id=?
        </sql>
    </query>
    <query>
        <name>findStudyEventMapByDNId</name>
        <sql>
            SELECT * FROM dn_study_event_map WHERE discrepancy_note_id=?
        </sql>
    </query>
    <query>
        <name>findEventCRFMapByDNId</name>
        <sql>
            SELECT * FROM dn_event_crf_map WHERE discrepancy_note_id=?
        </sql>
    </query>
    <query>
        <name>findItemDataMapByDNId</name>
        <sql>
            SELECT * FROM dn_item_data_map WHERE discrepancy_note_id=?
        </sql>
    </query>
    <query>
        <name>getCurrentPrimaryKey</name>
        <sql>SELECT discrepancy_note_id_seq.currval AS key from dual</sql>
    </query>
    <query>
        <name>findNumExistingNotesForItem</name>
        <sql>
            SELECT count(*) as num
            FROM discrepancy_note dn, dn_item_data_map dsm
            where dsm.item_data_id=?
            AND dn.discrepancy_note_id=dsm.discrepancy_note_id
        </sql>
    </query>
    <query>
        <name>findExistingNotesForItemData</name>
        <sql>
            SELECT dn.*
            FROM discrepancy_note dn, dn_item_data_map dsm
            where dsm.item_data_id=?
            AND dn.discrepancy_note_id=dsm.discrepancy_note_id
        </sql>
    </query>
    <query>
        <name>findExistingNotesForToolTipByEventCrfId</name>
        <sql>
            SELECT dn.*, id.item_data_id
            FROM discrepancy_note dn, dn_item_data_map dsm,item_data id
            where
            id.event_crf_id = ? AND
            dn.discrepancy_note_id=dsm.discrepancy_note_id and
            dsm.item_data_id = id.item_data_id
            and dn.discrepancy_note_id in (select max(dn2.discrepancy_note_id) FROM discrepancy_note dn2,
            dn_item_data_map dsms,item_data id
            where
            id.event_crf_id = ? AND
            dn2.discrepancy_note_id=dsms.discrepancy_note_id and
            dsms.item_data_id = id.item_data_id

            )
            union

            SELECT dn.*, id.item_data_id
            FROM discrepancy_note dn, dn_item_data_map dsm,item_data id
            where
            dn.parent_dn_id is null AND
            id.event_crf_id = ? AND
            dn.discrepancy_note_id=dsm.discrepancy_note_id and
            dsm.item_data_id = id.item_data_id
            and dn.discrepancy_note_id in (select max(dn2.discrepancy_note_id) FROM discrepancy_note dn2,
            dn_item_data_map dsms,item_data id
            where
            id.event_crf_id = ? AND
            dn2.discrepancy_note_id=dsms.discrepancy_note_id and
            dsms.item_data_id = id.item_data_id

            )
        </sql>
    </query>
    <query>
        <name>findExistingNotesForToolTip</name>
        <sql>
            SELECT dn.*
            FROM discrepancy_note dn, dn_item_data_map dsm,item_data id
            where
            dsm.item_data_id= ? AND
            dn.discrepancy_note_id=dsm.discrepancy_note_id and
            dsm.item_data_id = id.item_data_id
            and dn.discrepancy_note_id in (select max(dn2.discrepancy_note_id) FROM discrepancy_note dn2,
            dn_item_data_map dsms,item_data id
            where
            dsms.item_data_id= ? AND
            dn2.discrepancy_note_id=dsms.discrepancy_note_id and
            dsms.item_data_id = id.item_data_id

            )
            union
            SELECT dnParent.*
            FROM discrepancy_note dnParent where dnParent.discrepancy_note_id = ( SELECT dn.parent_dn_id
            FROM discrepancy_note dn, dn_item_data_map dsm,item_data id
            where
            dsm.item_data_id= ? AND
            dn.discrepancy_note_id=dsm.discrepancy_note_id and
            dsm.item_data_id = id.item_data_id
            and dn.discrepancy_note_id in (select max(dn2.discrepancy_note_id) FROM discrepancy_note dn2,
            dn_item_data_map dsms,item_data id
            where
            dsms.item_data_id= ? AND
            dn2.discrepancy_note_id=dsms.discrepancy_note_id and
            dsms.item_data_id = id.item_data_id

            ) )
        </sql>
    </query>


    <query>
        <name>findItemDataDNotesFromEventCRF</name>
        <sql>
            SELECT dn.* FROM discrepancy_note dn, dn_item_data_map dn_idmap,
            item_data idata, event_crf eventcrf WHERE eventcrf.event_crf_id = ?
            AND
            idata.event_crf_id = eventcrf.event_crf_id
            AND idata.item_data_id =dn_idmap.item_data_id
            AND dn_idmap.discrepancy_note_id=dn.discrepancy_note_id
        </sql>
    </query>
    <query>
        <name>findParentItemDataDNotesFromEventCRF</name>
        <sql>
            SELECT dn.* FROM discrepancy_note dn, dn_item_data_map dn_idmap,
            item_data idata, event_crf eventcrf WHERE eventcrf.event_crf_id = ?
            AND
            idata.event_crf_id = eventcrf.event_crf_id
            AND idata.item_data_id =dn_idmap.item_data_id
            AND dn_idmap.discrepancy_note_id=dn.discrepancy_note_id
            AND ((dn.parent_dn_id IS NULL) or (dn.parent_dn_id = 0))
        </sql>
    </query>
    <query>
        <name>findEventCRFDNotesFromEventCRF</name>
        <sql>
            SELECT dn.*, eventcrf_map.column_name FROM discrepancy_note dn, dn_event_crf_map eventcrf_map,
            event_crf eventcrf WHERE eventcrf.event_crf_id = ?
            AND
            eventcrf.event_crf_id=eventcrf_map.event_crf_id
            AND eventcrf_map.discrepancy_note_id=dn.discrepancy_note_id
        </sql>
    </query>
    <query>
        <name>findAllDNotesByItemNameAndEventCRF</name>
        <sql>
            SELECT dn.*
            FROM discrepancy_note dn, dn_item_data_map dsm, item_data id, item it
            where id.event_crf_id = ?
            AND dn.discrepancy_note_id=dsm.discrepancy_note_id
            AND dsm.item_data_id = id.item_data_id
            AND id.item_id = it.item_id
            AND it.name = ?
        </sql>
    </query>
    <query>
        <name>findOnlyParentEventCRFDNotesFromEventCRF</name>
        <sql>
            SELECT dn.*, eventcrf_map.column_name FROM discrepancy_note dn, dn_event_crf_map eventcrf_map,
            event_crf eventcrf
            WHERE eventcrf.event_crf_id = ?
            AND
            eventcrf.event_crf_id=eventcrf_map.event_crf_id
            AND eventcrf_map.discrepancy_note_id=dn.discrepancy_note_id
            AND ((dn.parent_dn_id IS NULL) or (dn.parent_dn_id = 0))
        </sql>
    </query>
    <query>
        <name>findAllTopNotesByEventCRF</name>
        <sql>
            SELECT distinct dn.*, id.item_id, id.ordinal item_data_ordinal
            FROM discrepancy_note dn, dn_item_data_map dsm,
            item_data id
            where id.event_crf_id=?
            AND dsm.column_name='value'
            AND (dn.entity_type='itemData' or dn.entity_type='ItemData')
            AND ((dn.parent_dn_id IS NULL) or (dn.parent_dn_id = 0))
            AND dn.discrepancy_note_id=dsm.discrepancy_note_id
            AND dsm.item_data_id = id.item_data_id
            order by dn.date_created desc
        </sql>
    </query>
    <query>
        <name>findLatestChildByParent</name>
        <sql>
            SELECT dn.*
            FROM discrepancy_note dn
            WHERE parent_dn_id=?
            and dn.discrepancy_note_id =
            (select max(discrepancy_note_id) from discrepancy_note where parent_dn_id = ?)
        </sql>
    </query>
    <query>
        <name>getResolutionStatusIdForSubjectDNFlag</name>
        <sql>select min(a.resolution_status_id) as resolution_status_id from (
            select dn.discrepancy_note_id, dn.resolution_status_id from discrepancy_note dn
            where dn.parent_dn_id is NULL
            and dn.discrepancy_note_id in (
            select dsm.discrepancy_note_id from dn_subject_map dsm where dsm.subject_id=? and dsm.column_name=?
            ) )as a
        </sql>
    </query>
    <query>
        <name>findAllByCRFId</name>
        <sql>
            SELECT distinct dn.*, ss.label
            FROM item_data itd, discrepancy_note dn, study_subject ss, dn_item_data_map dsm, event_crf ec, crf_version cv
            where cv.crf_id = ?
            AND ec.crf_version_id = cv.crf_version_id
            AND itd.event_crf_id = ec.event_crf_id
            AND dsm.item_data_id = itd.item_data_id
            AND dsm.column_name='value'
            AND dsm.discrepancy_note_id = dn.discrepancy_note_id
            AND dn.entity_type='itemData'
            AND dn.parent_dn_id is null
            AND ss.study_subject_id = dsm.study_subject_id
        </sql>
    </query>
    <query>
        <name>findAllByCrfVersionId</name>
        <sql>
            SELECT distinct dn.*, ss.label
            FROM item_data itd, discrepancy_note dn, study_subject ss, dn_item_data_map dsm, event_crf ec
            WHERE ec.crf_version_id = ?
            AND itd.event_crf_id = ec.event_crf_id
            AND dsm.item_data_id = itd.item_data_id
            AND dsm.column_name='value'
            AND dsm.discrepancy_note_id = dn.discrepancy_note_id
            AND dn.entity_type='itemData'
            AND dn.parent_dn_id is null
            AND ss.study_subject_id = dsm.study_subject_id
        </sql>
    </query>
    <query>
        <name>findAllByEventCrfId</name>
        <sql>
            SELECT distinct dn.*, itd.item_data_id
            FROM item_data itd, discrepancy_note dn, dn_item_data_map dsm
            WHERE itd.event_crf_id = ?
            AND dsm.item_data_id = itd.item_data_id
            AND dsm.column_name='value'
            AND dsm.discrepancy_note_id = dn.discrepancy_note_id
            AND dn.entity_type='itemData'
        </sql>
    </query>
    <query>
		<name>findDcfsByNoteIdsForItemDataDNs</name>
		<sql>
			SELECT dn.discrepancy_note_id, dn.description, dn.discrepancy_note_type_id, dn.resolution_status_id, dn.detailed_notes,
			dn.date_created, dn.entity_type, s.site_name, s.oc_oid as site_oid, s.study_name, s.study_protocol, s.investigator, ss.label as subject_id, 
			sed.name as event_name, c.name as crf_name, i.description as item_name, id.value as item_value, dnid.item_data_id as entity_id, rs.options_text, 
			rs.options_values, rs.response_type_id, sec.label as page, sub.unique_identifier, sub.date_of_birth, sub.gender, ss.enrollment_date,
			ec.date_interviewed, ec.interviewer_name, se.date_start, se.date_end, se.location
			FROM discrepancy_note dn 
			INNER JOIN dn_item_data_map dnid ON dn.discrepancy_note_id = dnid.discrepancy_note_id
			INNER JOIN item_data id ON dnid.item_data_id = id.item_data_id
			INNER JOIN event_crf ec ON id.event_crf_id = ec.event_crf_id
			INNER JOIN study_event se ON ec.study_event_id = se.study_event_id
			INNER JOIN study_subject ss ON se.study_subject_id = ss.study_subject_id
			INNER JOIN subject sub ON ss.subject_id = sub.subject_id
			INNER JOIN (
				SELECT study_id, name as site_name, oc_oid, principal_investigator as investigator, 
					CASE 
						WHEN parent_study_id IS NULL THEN s1.name
						ELSE (SELECT name FROM study WHERE study_id = s1.parent_study_id)
					END as study_name,
					CASE 
						WHEN parent_study_id IS NULL THEN s1.unique_identifier
						ELSE (SELECT unique_identifier FROM study WHERE study_id = s1.parent_study_id)
					END as study_protocol
				FROM study s1) s 
			ON ss.study_id = s.study_id	
			INNER JOIN study_event_definition sed ON se.study_event_definition_id = sed.study_event_definition_id
			INNER JOIN crf_version cv ON ec.crf_version_id = cv.crf_version_id
			INNER JOIN crf c ON cv.crf_id = c.crf_id
			INNER JOIN item i ON id.item_id = i.item_id
			INNER JOIN item_form_metadata ifm ON id.item_id = ifm.item_id AND cv.crf_version_id = ifm.crf_version_id
			INNER JOIN section sec ON ifm.section_id = sec.section_id
			INNER JOIN response_set rs ON ifm.response_set_id = rs.response_set_id
		</sql>
	</query>
	<query>
		<name>findDcfsByNoteIdsForStudyEventDNs</name>
		<sql>
			SELECT dn.discrepancy_note_id, dn.description, dn.discrepancy_note_type_id, dn.resolution_status_id, dn.detailed_notes,
			dn.date_created, dn.entity_type, s.site_name, s.oc_oid as site_oid, s.study_name, s.study_protocol, s.investigator, ss.label as subject_id, 
			sed.name as event_name, '' as crf_name, dnse.column_name as item_name, '' as item_value, dnse.study_event_id as entity_id, '' as options_text, '' as options_values, 
			-1 as response_type_id, '' as page, sub.unique_identifier, sub.date_of_birth, sub.gender, ss.enrollment_date, CURRENT_DATE as date_interviewed, 
			'' as interviewer_name, se.date_start, se.date_end, se.location 
			FROM discrepancy_note dn 
			INNER JOIN dn_study_event_map dnse ON dn.discrepancy_note_id = dnse.discrepancy_note_id
			INNER JOIN study_event se ON dnse.study_event_id = se.study_event_id
			INNER JOIN study_event_definition sed ON se.study_event_definition_id = sed.study_event_definition_id
			INNER JOIN study_subject ss ON se.study_subject_id = ss.study_subject_id
			INNER JOIN subject sub ON ss.subject_id = sub.subject_id
			INNER JOIN (
				SELECT study_id, name as site_name, oc_oid, principal_investigator as investigator, 
					CASE 
						WHEN parent_study_id IS NULL THEN s1.name
						ELSE (SELECT name FROM study WHERE study_id = s1.parent_study_id)
					END as study_name,
					CASE 
						WHEN parent_study_id IS NULL THEN s1.unique_identifier
						ELSE (SELECT unique_identifier FROM study WHERE study_id = s1.parent_study_id)
					END as study_protocol
				FROM study s1) s 
			ON ss.study_id = s.study_id	
		</sql>
	</query>
	<query>
		<name>findDcfsByNoteIdsForEventCrfDNs</name>
		<sql>
			SELECT dn.discrepancy_note_id, dn.description, dn.discrepancy_note_type_id, dn.resolution_status_id, dn.detailed_notes,
			dn.date_created, dn.entity_type, s.site_name, s.oc_oid as site_oid, s.study_name, s.study_protocol, s.investigator, ss.label as subject_id, 
			sed.name as event_name, c.name as crf_name, dnec.column_name as item_name, '' as item_value, dnec.event_crf_id as entity_id, '' as options_text, '' as options_values, 
			-1 as response_type_id, '' as page, sub.unique_identifier, sub.date_of_birth, sub.gender, ss.enrollment_date, ec.date_interviewed, ec.interviewer_name,
			se.date_start, se.date_end, se.location
			FROM discrepancy_note dn 
			INNER JOIN dn_event_crf_map dnec ON dn.discrepancy_note_id = dnec.discrepancy_note_id
			INNER JOIN event_crf ec ON dnec.event_crf_id = ec.event_crf_id
			INNER JOIN crf_version cv ON ec.crf_version_id = cv.crf_version_id
			INNER JOIN crf c ON cv.crf_id = c.crf_id
			INNER JOIN study_event se ON ec.study_event_id = se.study_event_id
			INNER JOIN study_event_definition sed ON se.study_event_definition_id = sed.study_event_definition_id
			INNER JOIN study_subject ss ON se.study_subject_id = ss.study_subject_id
			INNER JOIN subject sub ON ss.subject_id = sub.subject_id
			INNER JOIN (
				SELECT study_id, name as site_name, oc_oid, principal_investigator as investigator, 
					CASE 
						WHEN parent_study_id IS NULL THEN s1.name
						ELSE (SELECT name FROM study WHERE study_id = s1.parent_study_id)
					END as study_name,
					CASE 
						WHEN parent_study_id IS NULL THEN s1.unique_identifier
						ELSE (SELECT unique_identifier FROM study WHERE study_id = s1.parent_study_id)
					END as study_protocol
				FROM study s1) s 
			ON ss.study_id = s.study_id	
		</sql>
	</query>
	<query>
		<name>findDcfsByNoteIdsForStudySubjectDNs</name>
		<sql>
			SELECT dn.discrepancy_note_id, dn.description, dn.discrepancy_note_type_id, dn.resolution_status_id, dn.detailed_notes,
			dn.date_created, dn.entity_type, s.site_name, s.oc_oid as site_oid, s.study_name, s.study_protocol, s.investigator, ss.label as subject_id, 
			'' as event_name, '' as crf_name, dnss.column_name as item_name, '' as item_value, dnss.study_subject_id as entity_id, '' as options_text, '' as options_values, 
			-1 as response_type_id, '' as page, sub.unique_identifier, sub.date_of_birth, sub.gender, ss.enrollment_date, CURRENT_DATE as date_interviewed,
			'' as interviewer_name, CURRENT_DATE as date_start, CURRENT_DATE as date_end, '' as location
			FROM discrepancy_note dn 
			INNER JOIN dn_study_subject_map dnss ON dn.discrepancy_note_id = dnss.discrepancy_note_id
			INNER JOIN study_subject ss ON dnss.study_subject_id = ss.study_subject_id
			INNER JOIN subject sub ON ss.subject_id = sub.subject_id
			INNER JOIN (
				SELECT study_id, name as site_name, oc_oid, principal_investigator as investigator, 
					CASE 
						WHEN parent_study_id IS NULL THEN s1.name
						ELSE (SELECT name FROM study WHERE study_id = s1.parent_study_id)
					END as study_name,
					CASE 
						WHEN parent_study_id IS NULL THEN s1.unique_identifier
						ELSE (SELECT unique_identifier FROM study WHERE study_id = s1.parent_study_id)
					END as study_protocol
				FROM study s1) s 
			ON ss.study_id = s.study_id
		</sql>
	</query>
	<query>
		<name>findDcfsByNoteIdsForSubjectDNs</name>
		<sql>
			SELECT dn.discrepancy_note_id, dn.description, dn.discrepancy_note_type_id, dn.resolution_status_id, dn.detailed_notes,
			dn.date_created, dn.entity_type, s.site_name, s.oc_oid as site_oid, s.study_name, s.study_protocol, s.investigator, ss.label as subject_id, 
			'' as event_name, '' as crf_name, dns.column_name as item_name, '' as item_value, dns.subject_id as entity_id, '' as options_text, '' as options_values, 
			-1 as response_type_id, '' as page, sub.unique_identifier, sub.date_of_birth, sub.gender, ss.enrollment_date, CURRENT_DATE as date_interviewed, 
			'' as interviewer_name, CURRENT_DATE as date_start, CURRENT_DATE as date_end, '' as location
			FROM discrepancy_note dn 
			INNER JOIN dn_subject_map dns ON dn.discrepancy_note_id = dns.discrepancy_note_id
			INNER JOIN study_subject ss ON dns.subject_id = ss.subject_id
			INNER JOIN subject sub ON ss.subject_id = sub.subject_id
			INNER JOIN (
				SELECT study_id, name as site_name, oc_oid, principal_investigator as investigator, 
					CASE 
						WHEN parent_study_id IS NULL THEN s1.name
						ELSE (SELECT name FROM study WHERE study_id = s1.parent_study_id)
					END as study_name,
					CASE 
						WHEN parent_study_id IS NULL THEN s1.unique_identifier
						ELSE (SELECT unique_identifier FROM study WHERE study_id = s1.parent_study_id)
					END as study_protocol
				FROM study s1) s 
			ON ss.study_id = s.study_id	
		</sql>
	</query>
</queries>

