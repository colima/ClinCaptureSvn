<?xml version="1.0"?>
<queries>
	<query>
		<name>findByPK</name>
		<sql>SELECT * FROM STUDY WHERE STUDY_ID = ?</sql>
	</query>
	<query>
		<name>findByName</name>
		<sql>SELECT * FROM STUDY WHERE NAME = ?</sql>
	</query>
	<query>
		<name>findStudyByName</name>
		<sql>SELECT * FROM STUDY WHERE NAME = ? AND parent_study_id IS NULL</sql>
	</query>
    <query>
		<name>getStudyIdsByCRF</name>
		<sql>select distinct study_id from event_definition_crf where crf_id=?</sql>
	</query>
	<query>
		<name>deleteTestOnly</name>
		<sql>delete from study where name=?</sql>
	</query>
	<query>
		<name>findAll</name>
		<sql>SELECT * FROM STUDY order by name</sql>
	</query>
    <query>
        <name>findAllNotRemoved</name>
        <sql>SELECT * FROM STUDY where status_id not in (5,7) order by name</sql>
    </query>
	<query>
        <name>findAllByStudyId</name>
        <sql>SELECT * FROM STUDY where (study_id =? or parent_study_id =?) and parent_study_id is not null order by name</sql>
    </query>
	<query>
		<name>findAllByStatus</name>
		<sql>SELECT * FROM STUDY where status_id=?</sql>
	</query>
	<query>
		<name>findAllParents</name>
		<sql>SELECT * FROM STUDY WHERE parent_study_id is null order by name</sql>
	</query>
	<query>
		<name>findAllByParent</name>
		<sql>SELECT * FROM STUDY WHERE parent_study_id=? order by name</sql>
	</query>
	<query>
		<name>findAllByParentLimit5</name>
		<sql>SELECT * FROM STUDY WHERE parent_study_id=? order by name
		    limit 5
		</sql>
	</query>
	<query>
		<name>findAllByParentAndActive</name>
		<sql>
			SELECT * 
			FROM study 
			WHERE parent_study_id = ?
			AND status_id NOT IN (5,7) 
			ORDER BY name
		</sql>
	</query>
	<query>
		<name>findAllByUser</name>
		<sql>SELECT s.* FROM study s, study_user_role sur
           WHERE sur.user_name = ?
           AND s.study_id=sur.study_id
         </sql>
	</query>
	<!-- YW 10-18-2007 find studies belonging to a user whose study user role status is not removed or auto-removed -->
	<query>
		<name>findAllByUserNotRemoved</name>
		<sql>
            SELECT s.* FROM study s, study_user_role sur
            WHERE sur.user_name = ?
            AND (s.study_id=sur.study_id or (sur.study_id is null and sur.role_name = 'system_administrator'))
            AND sur.status_id != 5
            AND sur.status_id != 7
        </sql>
	</query>
	<query>
		<name>findAllActiveWhereUserHasRole</name>
		<sql>
            SELECT s.* FROM study s, study_user_role sur
            WHERE sur.user_name = ?
            AND s.study_id = sur.study_id
            AND s.status_id NOT IN (5,7)
        </sql>
	</query>
	<query>
		<name>findAllActiveWhereUserHasActiveRole</name>
		<sql>
			SELECT s.* FROM study s, study_user_role sur
			WHERE sur.user_name = ?
			AND s.study_id = sur.study_id
			AND s.status_id NOT IN (5,7)
			AND sur.status_id NOT IN (5,7)
		</sql>
	</query>
	<query>
		<name>findAllActiveStudiesWhereUserHasRole</name>
		<sql>
			SELECT *
			FROM study
			WHERE study.study_id IN (SELECT DISTINCT s.parent_study_id 
										FROM study s, study_user_role sur
										WHERE sur.user_name = ?
										AND s.study_id = sur.study_id
										AND s.parent_study_id IS NOT NULL
										AND sur.status_id NOT IN (5,7)
										AND s.status_id NOT IN (5,7)) 
				OR study.study_id IN (SELECT s.study_id 
										FROM study s, study_user_role sur
										WHERE sur.user_name = ?
										AND (s.study_id = sur.study_id OR (sur.study_id IS NULL AND sur.role_name = 'system_administrator'))
										AND s.parent_study_id IS NULL
										AND sur.status_id NOT IN (5,7)
										AND s.status_id NOT IN (5,7))
			ORDER BY study.name
        </sql>
	</query>
	<!-- tbh 04/2008 -->
	<query>
		<name>findByOid</name>
		<sql>SELECT s.* FROM study s
           WHERE s.OC_OID = ?
         </sql>
	</query>
	<query>
        <name>findByUniqueIdentifier</name>
        <sql>SELECT s.* FROM study s
           WHERE s.unique_identifier = ?
         </sql>
    </query>
    <query>
        <name>findSiteByUniqueIdentifier</name>
        <sql>select site.* from study site, study study where
                site.parent_study_id = study.study_id and
                study.unique_identifier = ? and   
                site.unique_identifier = ?
         </sql>
    </query>
	<query>
		<name>updateStepOne</name>
		<sql>UPDATE STUDY SET PARENT_STUDY_ID=?, NAME=?, official_title=?, UNIQUE_IDENTIFIER=?,
		SECONDARY_IDENTIFIER=?, SUMMARY=?,
		PRINCIPAL_INVESTIGATOR=?, DATE_PLANNED_START=?,
		DATE_PLANNED_END=?, FACILITY_NAME=?, FACILITY_CITY=?,
		FACILITY_STATE=?, FACILITY_ZIP=?, FACILITY_COUNTRY=?,
		FACILITY_RECRUITMENT_STATUS=?, FACILITY_CONTACT_NAME=?,
		FACILITY_CONTACT_DEGREE=?, FACILITY_CONTACT_PHONE=?,
		FACILITY_CONTACT_EMAIL=?, STATUS_ID=?,
		UPDATE_ID=?, DATE_UPDATED=NOW(), OLD_STATUS_ID=?, BRIEF_TITLE=?, ORIGIN=? WHERE STUDY_ID=?</sql>
	</query>
	<query>
		<name>findNextKey</name>
		<sql>select nextval('study_study_id_seq') as key</sql>
	</query>
	<query>
		<name>createStepOne</name>
		<sql>INSERT INTO STUDY (STUDY_ID, PARENT_STUDY_ID, NAME, official_title,
		UNIQUE_IDENTIFIER, SECONDARY_IDENTIFIER, SUMMARY,
		PRINCIPAL_INVESTIGATOR, DATE_PLANNED_START,
		DATE_PLANNED_END, FACILITY_NAME, FACILITY_CITY, FACILITY_STATE,
		FACILITY_ZIP, FACILITY_COUNTRY, FACILITY_RECRUITMENT_STATUS,
		FACILITY_CONTACT_NAME, FACILITY_CONTACT_DEGREE, FACILITY_CONTACT_PHONE,
		FACILITY_CONTACT_EMAIL, STATUS_ID, DATE_CREATED, OWNER_ID, OC_OID, BRIEF_TITLE, ORIGIN)
		VALUES (?,
		?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,NOW(),?,?,?,?)</sql>
	</query>
	<query>
	   <name>createStepTwo</name>
	   <sql>
        UPDATE STUDY SET TYPE_ID=?, PROTOCOL_TYPE=?,PROTOCOL_DESCRIPTION=?,
		PROTOCOL_DATE_VERIFICATION=?, PHASE=?, EXPECTED_TOTAL_ENROLLMENT=?,
		SPONSOR=?, COLLABORATORS=?, MEDLINE_IDENTIFIER=?, results_reference=?,
		URL=?,URL_DESCRIPTION=?, CONDITIONS=?, KEYWORDS=?, ELIGIBILITY=?,
		GENDER=?, AGE_MAX=?, AGE_MIN=?, HEALTHY_VOLUNTEER_ACCEPTED=?
		WHERE STUDY_ID=?
      </sql>
	</query>
	<query>
		<name>createStepThree</name>
		<sql>UPDATE STUDY SET PURPOSE=?, ALLOCATION=?, MASKING=?,
		CONTROL=?, ASSIGNMENT=?, ENDPOINT=?, INTERVENTIONS=? WHERE
		STUDY_ID=?</sql>
	</query>
	<query>
		<name>createStepFour</name>
		<sql>UPDATE STUDY SET DURATION=?, SELECTION=?, TIMING=? WHERE
		STUDY_ID=?</sql>
	</query>
    <query>
        <name>updateSitesStatus</name>
        <sql>UPDATE STUDY SET STATUS_ID=?, OLD_STATUS_ID=? WHERE PARENT_STUDY_ID=?</sql>
    </query>
    <query>
        <name>updateStudyStatus</name>
        <sql>UPDATE STUDY SET STATUS_ID=?, OLD_STATUS_ID=? WHERE STUDY_ID=?</sql>
    </query>
    <!-- YW 07-2008 find all sites' ids belonging to a study -->
	<query>
		<name>findAllSiteIdsByStudy</name>
		<sql>SELECT study_id FROM study
		WHERE study_id = ? or parent_study_id = ?</sql>
	</query>
	<query>
		<name>findOlnySiteIdsByStudy</name>
		<sql>SELECT study_id FROM study WHERE parent_study_id = ?</sql>
	</query>
	<query>
		<name>findByStudySubjectId</name>
		<sql>select s.* from study_subject ss, study s
		where ss.study_subject_id = ? and ss.study_id = s.study_id
      </sql>
	</query>
	<query>
		<name>findAllByParentStudyIdOrderedByIdAsc</name>
		<sql>SELECT * FROM STUDY WHERE study_id=? or parent_study_id=? order by study_id asc</sql>
	</query>
    <query>
        <name>countLockedEvents</name>
        <sql>
            select count(se.study_event_id)
            from study_event se
            join study_event_definition sed on sed.study_event_definition_id = se.study_event_definition_id
            join study s on s.parent_study_id = sed.study_id
            join study_subject ss on ss.study_subject_id = se.study_subject_id and ss.study_id = s.study_id
            where s.study_id=? and se.subject_event_status_id=7;
        </sql>
    </query>
    <query>
        <name>countEvents</name>
        <sql>
            select count(se.study_event_id)
            from study_event se
            join study_event_definition sed on sed.study_event_definition_id = se.study_event_definition_id
            join study s on s.parent_study_id = sed.study_id
            join study_subject ss on ss.study_subject_id = se.study_subject_id and ss.study_id = s.study_id
            where s.study_id=?;
        </sql>
    </query>
    <query>
        <name>analyzeEvents</name>
        <sql>
            select s.study_id as studyId, count(se1.study_event_id) as countEvents, count(se2.study_event_id) as countLockedEvents
            from study s
            join study_event_definition sed on sed.study_id = s.parent_study_id
            join study_subject ss on ss.study_id = s.study_id
            join subject sbj on sbj.subject_id = ss.subject_id
            left join study_event se1 on se1.study_subject_id = ss.study_subject_id and se1.study_event_definition_id = sed.study_event_definition_id
            left join study_event se2 on se2.study_subject_id = ss.study_subject_id and se2.study_event_definition_id = sed.study_event_definition_id and se2.subject_event_status_id = 7
            where s.study_id in (?) and sbj.status_id = 1
            group by studyId;
        </sql>
    </query>
	<query>
		<name>findAllActiveWhereCRFIsUsed</name>
		<sql>
			SELECT DISTINCT s.*
			FROM study s
			INNER JOIN study_event_definition sed ON s.study_id = sed.study_id
			INNER JOIN event_definition_crf edc ON edc.study_event_definition_id = sed.study_event_definition_id
				AND edc.study_id = s.study_id
			WHERE edc.crf_id = ?
		</sql>
	</query>
</queries>
