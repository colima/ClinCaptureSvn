<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
				   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
				   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.4.xsd">

	<changeSet author="denis" id="2015-02-10-TICKET2033" dbms="postgresql">
		<comment>Create child event definition CRFs for sites where they not exists.</comment>
		<sql splitStatements="false">
			CREATE OR REPLACE FUNCTION cc_add_event_definition_crfs() RETURNS integer AS '
			DECLARE
			stids RECORD;
			edc RECORD;
			BEGIN
			FOR stids IN SELECT * FROM study WHERE parent_study_id IS NOT NULL LOOP
				FOR edc IN SELECT * FROM event_definition_crf WHERE study_id = stids.parent_study_id LOOP
					IF (SELECT count(*) FROM event_definition_crf ecd WHERE parent_id = edc.event_definition_crf_id AND study_id = stids.study_id) = 0 THEN
						INSERT INTO event_definition_crf (study_event_definition_id, study_id, crf_id, required_crf, double_entry, require_all_text_filled, decision_conditions, null_values, default_version_id, status_id, owner_id, date_created,   date_updated, update_id, ordinal, electronic_signature, hide_crf, source_data_verification_code, selected_version_ids, parent_id, email_step, email_to, evaluated_crf)
						VALUES (edc.study_event_definition_id,
								stids.study_id,
								edc.crf_id,
								edc.required_crf,
								edc.double_entry,
								edc.require_all_text_filled,
								edc.decision_conditions,
								edc.null_values,
								edc.default_version_id,
								edc.status_id,
								edc.owner_id,
								edc.date_created,
								edc.date_updated,
								edc.update_id,
								edc.ordinal,
								edc.electronic_signature,
								edc.hide_crf,
								edc.source_data_verification_code,
								edc.selected_version_ids,
								edc.event_definition_crf_id,
								edc.email_step,
								edc.email_to,
								edc.evaluated_crf);
					END IF;
				END LOOP;
			END LOOP;
			RETURN 1;
			END;
			' LANGUAGE plpgsql;

			SELECT cc_add_event_definition_crfs();
			DROP FUNCTION cc_add_event_definition_crfs();
		</sql>
	</changeSet>

</databaseChangeLog>
