<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog/1.9"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog/1.9 http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-1.9.xsd">
    <changeSet author="skirpichenok" id="2013-03-26-quartz-2.1.7-1">
        <preConditions onFail="MARK_RAN">
            <dbms type="postgresql"/>
        </preConditions>
        <comment>Migrate quartz's DB schema from 1.8.0 to 2.1.7 [http://quartz-scheduler.org/documentation/quartz-2.1.x/migration-guide]</comment>
        <sql splitStatements="false">
            drop table if exists oc_qrtz_job_listeners;
            drop table if exists oc_qrtz_trigger_listeners;

            alter table oc_qrtz_job_details drop column is_volatile;
            alter table oc_qrtz_triggers drop column is_volatile;
            alter table oc_qrtz_fired_triggers drop column is_volatile;

            alter table oc_qrtz_job_details add column is_nonconcurrent bool;
            alter table oc_qrtz_job_details add column is_update_data bool;
            update oc_qrtz_job_details set is_nonconcurrent = is_stateful;
            update oc_qrtz_job_details set is_update_data = is_stateful;
            alter table oc_qrtz_job_details drop column is_stateful;
            alter table oc_qrtz_fired_triggers add column is_nonconcurrent bool;
            alter table oc_qrtz_fired_triggers add column is_update_data bool;
            update oc_qrtz_fired_triggers set is_nonconcurrent = is_stateful;
            update oc_qrtz_fired_triggers set is_update_data = is_stateful;
            alter table oc_qrtz_fired_triggers drop column is_stateful;

            alter table oc_qrtz_blob_triggers add column sched_name varchar(120) not null DEFAULT 'schedulerFactoryBean';
            alter table oc_qrtz_calendars add column sched_name varchar(120) not null DEFAULT 'schedulerFactoryBean';
            alter table oc_qrtz_cron_triggers add column sched_name varchar(120) not null DEFAULT 'schedulerFactoryBean';
            alter table oc_qrtz_fired_triggers add column sched_name varchar(120) not null DEFAULT 'schedulerFactoryBean';
            alter table oc_qrtz_job_details add column sched_name varchar(120) not null DEFAULT 'schedulerFactoryBean';
            alter table oc_qrtz_locks add column sched_name varchar(120) not null DEFAULT 'schedulerFactoryBean';
            alter table oc_qrtz_paused_trigger_grps add column sched_name varchar(120) not null DEFAULT 'schedulerFactoryBean';
            alter table oc_qrtz_scheduler_state add column sched_name varchar(120) not null DEFAULT 'schedulerFactoryBean';
            alter table oc_qrtz_simple_triggers add column sched_name varchar(120) not null DEFAULT 'schedulerFactoryBean';
            alter table oc_qrtz_triggers add column sched_name varchar(120) not null DEFAULT 'schedulerFactoryBean';

            alter table oc_qrtz_triggers drop constraint oc_qrtz_triggers_job_name_fkey;
            alter table oc_qrtz_blob_triggers drop constraint pk_oc_qrtz_blob_triggers;
            alter table oc_qrtz_blob_triggers drop constraint oc_qrtz_blob_triggers_trg_fkey;
            alter table oc_qrtz_simple_triggers drop constraint pk_oc_qrtz_simple_triggers;
            alter table oc_qrtz_simple_triggers drop constraint oc_qrtz_simple_trigs_trg_fkey;
            alter table oc_qrtz_cron_triggers drop constraint pk_oc_qrtz_cron_triggers;
            alter table oc_qrtz_cron_triggers drop constraint oc_qrtz_cron_triggers_trg_fkey;
            alter table oc_qrtz_job_details drop constraint pk_oc_qrtz_job_details;
            alter table oc_qrtz_job_details add primary key (sched_name, job_name, job_group);
            alter table oc_qrtz_triggers drop constraint pk_oc_qrtz_triggers;

            alter table oc_qrtz_triggers add primary key (sched_name, trigger_name, trigger_group);
            alter table oc_qrtz_triggers add foreign key (sched_name, job_name, job_group) references oc_qrtz_job_details(sched_name, job_name, job_group);
            alter table oc_qrtz_blob_triggers add primary key (sched_name, trigger_name, trigger_group);
            alter table oc_qrtz_blob_triggers add foreign key (sched_name, trigger_name, trigger_group) references oc_qrtz_triggers(sched_name, trigger_name, trigger_group);
            alter table oc_qrtz_cron_triggers add primary key (sched_name, trigger_name, trigger_group);
            alter table oc_qrtz_cron_triggers add foreign key (sched_name, trigger_name, trigger_group) references oc_qrtz_triggers(sched_name, trigger_name, trigger_group);
            alter table oc_qrtz_simple_triggers add primary key (sched_name, trigger_name, trigger_group);
            alter table oc_qrtz_simple_triggers add foreign key (sched_name, trigger_name, trigger_group) references oc_qrtz_triggers(sched_name, trigger_name, trigger_group);
            alter table oc_qrtz_fired_triggers drop constraint pk_oc_qrtz_fired_triggers;
            alter table oc_qrtz_fired_triggers add primary key (sched_name, entry_id);
            alter table oc_qrtz_calendars drop constraint pk_oc_qrtz_calendars;
            alter table oc_qrtz_calendars add primary key (sched_name, calendar_name);
            alter table oc_qrtz_locks drop constraint pk_oc_qrtz_locks;
            alter table oc_qrtz_locks add primary key (sched_name, lock_name);
            alter table oc_qrtz_paused_trigger_grps drop constraint pk_oc_qrtz_paused_trigger_grps;
            alter table oc_qrtz_paused_trigger_grps add primary key (sched_name, trigger_group);
            alter table oc_qrtz_scheduler_state drop constraint pk_oc_qrtz_scheduler_state;
            alter table oc_qrtz_scheduler_state add primary key (sched_name, instance_name);

            CREATE TABLE oc_qrtz_simprop_triggers
            (
            SCHED_NAME VARCHAR(120) NOT NULL,
            TRIGGER_NAME VARCHAR(200) NOT NULL,
            TRIGGER_GROUP VARCHAR(200) NOT NULL,
            STR_PROP_1 VARCHAR(512) NULL,
            STR_PROP_2 VARCHAR(512) NULL,
            STR_PROP_3 VARCHAR(512) NULL,
            INT_PROP_1 INT NULL,
            INT_PROP_2 INT NULL,
            LONG_PROP_1 BIGINT NULL,
            LONG_PROP_2 BIGINT NULL,
            DEC_PROP_1 NUMERIC(13,4) NULL,
            DEC_PROP_2 NUMERIC(13,4) NULL,
            BOOL_PROP_1 BOOL NULL,
            BOOL_PROP_2 BOOL NULL,
            PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
            FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
            REFERENCES oc_qrtz_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
            );

            create index idx_oc_qrtz_j_req_recovery on oc_qrtz_job_details(SCHED_NAME,REQUESTS_RECOVERY);
            create index idx_oc_qrtz_j_grp on oc_qrtz_job_details(SCHED_NAME,JOB_GROUP);
            create index idx_oc_qrtz_t_j on oc_qrtz_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
            create index idx_oc_qrtz_t_jg on oc_qrtz_triggers(SCHED_NAME,JOB_GROUP);
            create index idx_oc_qrtz_t_c on oc_qrtz_triggers(SCHED_NAME,CALENDAR_NAME);
            create index idx_oc_qrtz_t_g on oc_qrtz_triggers(SCHED_NAME,TRIGGER_GROUP);
            create index idx_oc_qrtz_t_state on oc_qrtz_triggers(SCHED_NAME,TRIGGER_STATE);
            create index idx_oc_qrtz_t_n_state on oc_qrtz_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);
            create index idx_oc_qrtz_t_n_g_state on oc_qrtz_triggers(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);
            create index idx_oc_qrtz_t_next_fire_time on oc_qrtz_triggers(SCHED_NAME,NEXT_FIRE_TIME);
            create index idx_oc_qrtz_t_nft_st on oc_qrtz_triggers(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);
            create index idx_oc_qrtz_t_nft_misfire on oc_qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);
            create index idx_oc_qrtz_t_nft_st_misfire on oc_qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);
            create index idx_oc_qrtz_t_nft_st_misfire_grp on oc_qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);
            create index idx_oc_qrtz_ft_trig_inst_name on oc_qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME);
            create index idx_oc_qrtz_ft_inst_job_req_rcvry on oc_qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);
            create index idx_oc_qrtz_ft_j_g on oc_qrtz_fired_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
            create index idx_oc_qrtz_ft_jg on oc_qrtz_fired_triggers(SCHED_NAME,JOB_GROUP);
            create index idx_oc_qrtz_ft_t_g on oc_qrtz_fired_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);
            create index idx_oc_qrtz_ft_tg on oc_qrtz_fired_triggers(SCHED_NAME,TRIGGER_GROUP);
        </sql>
    </changeSet>
</databaseChangeLog>