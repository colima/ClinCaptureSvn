/*******************************************************************************
 * CLINOVO RESERVES ALL RIGHTS TO THIS SOFTWARE, INCLUDING SOURCE AND DERIVED BINARY CODE. BY DOWNLOADING THIS SOFTWARE YOU AGREE TO THE FOLLOWING LICENSE:
 *
 * Subject to the terms and conditions of this Agreement including, Clinovo grants you a non-exclusive, non-transferable, non-sublicenseable limited license without license fees to reproduce and use internally the software complete and unmodified for the sole purpose of running Programs on one computer.
 * This license does not allow for the commercial use of this software except by IRS approved non-profit organizations; educational entities not working in joint effort with for profit business.
 * To use the license for other purposes, including for profit clinical trials, an additional paid license is required. Please contact our licensing department at http://www.clinovo.com/contact for pricing information.
 *
 * You may not modify, decompile, or reverse engineer the software.
 * Clinovo disclaims any express or implied warranty of fitness for use.
 * No right, title or interest in or to any trademark, service mark, logo or trade name of Clinovo or its licensors is granted under this Agreement.
 * THIS SOFTWARE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND. CLINOVO FURTHER DISCLAIMS ALL WARRANTIES, EXPRESS AND IMPLIED, INCLUDING WITHOUT LIMITATION, ANY IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.

 * LIMITATION OF LIABILITY. IN NO EVENT SHALL CLINOVO BE LIABLE FOR ANY INDIRECT, INCIDENTAL, SPECIAL, PUNITIVE OR CONSEQUENTIAL DAMAGES, OR DAMAGES FOR LOSS OF PROFITS, REVENUE, DATA OR DATA USE, INCURRED BY YOU OR ANY THIRD PARTY, WHETHER IN AN ACTION IN CONTRACT OR TORT, EVEN IF ORACLE HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. CLINOVOâ€™S ENTIRE LIABILITY FOR DAMAGES HEREUNDER SHALL IN NO EVENT EXCEED TWO HUNDRED DOLLARS (U.S. $200).
 *******************************************************************************/
package com.clinovo.enums;

import com.clinovo.enums.BaseEnum;

import java.util.ArrayList;
import java.util.List;

/**
 * StudyConfigurationParameter.
 */
public enum StudyConfigurationParameter implements BaseEnum {

	// Study Parameters
	STUDY_PARAMETERS("studyParameters", "studyParameters", StudyConfigurationParameterType.GROUP),

	DISCREPANCY_MANAGEMENT("discrepancyManagement", "allow_discrepancy_management", new String[] {"true", "false"}, new String[] {"yes", "no"}, StudyConfigurationParameterType.RADIO),
	ADMIN_FORCED_REASON_FOR_CHANGE("adminForcedReasonForChange", "forced_reason_for_change", new String[] {"true", "false"}, new String[] {"yes", "no"}, StudyConfigurationParameterType.RADIO),
	ALLOW_SDV_WITH_OPEN_QUERIES("allowSdvWithOpenQueries", "allowSdvWithOpenQueries", new String[] {"yes", "no"}, new String[] {"yes", "no"}, StudyConfigurationParameterType.RADIO),
	ALLOW_DYNAMIC_GROUPS_MANAGEMENT("allowDynamicGroupsManagement", "allowDynamicGroupsManagement", new String[] {"yes", "no"}, new String[] {"yes", "no"}, StudyConfigurationParameterType.RADIO),
	ALLOW_DISCREPANCY_CORRECTION_FORMS("allowDiscrepancyCorrectionForms", "dcf_allow_discrepancy_correction_forms", new String[] {"yes", "no"}, new String[] {"yes", "no"}, StudyConfigurationParameterType.RADIO),
	INSTANCE_TYPE("instanceType", true, "20", StudyConfigurationParameterType.TEXT),
	INSTANCE_TYPE_SELECT(true, "instanceType", "systemProperty.instanceType.label", new String[] {"development", "training", "production", Constants.CUSTOM}, new String[] {"systemProperty.instanceType.development.radioLabel", "systemProperty.instanceType.training.radioLabel", "systemProperty.instanceType.production.radioLabel", "other"}, Constants.CUSTOM, StudyConfigurationParameterType.SELECT, Constants.CUSTOM, INSTANCE_TYPE),

	// Subject Parameters
	SUBJECT_PARAMETERS("subjectParameters", "subjectParameters", StudyConfigurationParameterType.GROUP),

	SUBJECT_ID_GENERATION("subjectIdGeneration", "how_to_generate_the_study_subject_ID", new String[] {"manual", "auto-editable", "auto-non-editable"}, new String[] {"manual_entry", "auto_generated_and_editable", "auto_generated_and_non_editable"}, "autoGeneratedFormat", "manual", StudyConfigurationParameterType.RADIO),
	AUTO_GENERATED_PREFIX("autoGeneratedPrefix", true, "25", "subjectIdGenerationLabel", StudyConfigurationParameterType.TEXT,  "[=!#\\$%&\\*\\+\\/\\?`\\^\\{\\|\\}~'@:\\\\;\\]\\[]+", "auto_generated_subject_id_prefix_message"),
	AUTO_GENERATED_PREFIX_SELECT(true, "autoGeneratedPrefix", "auto_generated_prefix", new String[] {"", "SiteID", Constants.CUSTOM}, new String[] {"none", "site_id", "custom"}, "autoGeneratedFormat", Constants.CUSTOM, StudyConfigurationParameterType.SELECT, Constants.CUSTOM, AUTO_GENERATED_PREFIX, "subjectIdGenerationLabel"),
	AUTO_GENERATED_SEPARATOR("autoGeneratedSeparator", true, "2", "subjectIdGenerationLabel", StudyConfigurationParameterType.TEXT, "[a-zA-Z0-9]+", "auto_generated_subject_id_separator_message"),
	AUTO_GENERATED_SEPARATOR_SELECT(true, "autoGeneratedSeparator", "auto_generated_separator", new String[] {"", Constants.CUSTOM}, new String[] {"none", "custom"}, "autoGeneratedFormat", Constants.CUSTOM, StudyConfigurationParameterType.SELECT, Constants.CUSTOM, AUTO_GENERATED_SEPARATOR, "subjectIdGenerationLabel"),
	AUTO_GENERATED_SUFFIX("autoGeneratedSuffix", "auto_generated_suffix", new String[] {"3", "4", "5", "6"}, new String[] {"integer.3", "integer.4", "integer.5", "integer.6"}, "subjectIdGenerationLabel", "xGenerator", StudyConfigurationParameterType.SELECT, "autoGeneratedFormat"),
	SUBJECT_ID("input[name=autoGeneratedPrefix],input[name=autoGeneratedSeparator],select[name=autoGeneratedSuffix]", "autoGeneratedFormat", "subjectIdGenerationLabel", "subject_ID", StudyConfigurationParameterType.DYNAMIC_LABEL),
	STUDY_SUBJECT_ID_LABEL("studySubjectIdLabel", "studySubjectIdLabel", "255", StudyConfigurationParameterType.TEXT),
	SECONDARY_ID_REQUIRED("secondaryIdRequired", "secondaryIDRequired", new String[] {"yes", "no", "not_used"}, new String[] {"required", "optional", "not_used"}, "secondaryId", "not_used", StudyConfigurationParameterType.RADIO),
	SECONDARY_ID_LABEL("secondaryIdLabel", "secondaryIdLabel", "255", StudyConfigurationParameterType.TEXT, "secondaryId"),
	SECONDARY_LABEL_VIEWABLE("secondaryLabelViewable", "secondary_label_viewable", new String[] {"true", "false"}, new String[] {"yes", "no"}, StudyConfigurationParameterType.RADIO, "secondaryId"),
	DATE_OF_ENROLLMENT_FOR_STUDY_REQUIRED("dateOfEnrollmentForStudyRequired", "dateOfEnrollmentForStudyRequired", new String[] {"yes", "no", "not_used"}, new String[] {"required", "auto_populate_with_current_date_upon_creation", "not_used"}, "dateOfEnrollment", "not_used", StudyConfigurationParameterType.RADIO),
	DATE_OF_ENROLLMENT_FOR_STUDY_LABEL("dateOfEnrollmentForStudyLabel", "dateOfEnrollmentForStudyLabel", "255", StudyConfigurationParameterType.TEXT, "dateOfEnrollment"),
	GENDER_REQUIRED("genderRequired", "gender_required2", new String[] {"true", "false"}, new String[] {"yes", "no"}, "gender", "false", StudyConfigurationParameterType.RADIO),
	GENDER_LABEL("genderLabel", "genderLabel", "255", StudyConfigurationParameterType.TEXT, "gender"),
	COLLECT_DOB("collectDob", "collect_subject_date_of_birth", new String[] {"1", "2", "3"}, new String[] {"yes", "only_year_of_birth", "not_used"}, StudyConfigurationParameterType.RADIO),
	SUBJECT_PERSON_ID_REQUIRED("subjectPersonIdRequired", "subject_person_ID_required", new String[] {"required", "optional", "copyFromSSID", "not_used"}, new String[] {"required", "optional", "copy_from_ssid", "not_used"}, "personId", "not_used", StudyConfigurationParameterType.RADIO),
	PERSON_ID_SHOWN_ON_CRF("personIdShownOnCRF", "show_person_id_on_crf_header", new String[] {"true", "false"}, new String[] {"yes", "no"}, StudyConfigurationParameterType.RADIO, "personId"),

	// Event Parameters
	EVENT_PARAMETERS("eventParameters", "eventParameters", StudyConfigurationParameterType.GROUP),

	EVENT_LOCATION_REQUIRED("eventLocationRequired", "event_location_required", new String[] {"required", "optional", "not_used"}, new String[] {"required", "optional", "not_used"}, StudyConfigurationParameterType.RADIO),
	START_DATE_TIME_REQUIRED("startDateTimeRequired", "startDateTimeRequired", new String[] {"yes", "no", "not_used"}, new String[] {"required", "optional", "not_used"}, "startDate", "not_used", StudyConfigurationParameterType.RADIO),
	USE_START_TIME("useStartTime", "useStartTime", new String[] {"yes", "no"}, new String[] {"yes", "no"}, StudyConfigurationParameterType.RADIO, "startDate"),
	START_DATE_TIME_LABEL("startDateTimeLabel", "startDateTimeLabel", "255", StudyConfigurationParameterType.TEXT, "startDate"),
	END_DATE_TIME_REQUIRED("endDateTimeRequired", "endDateTimeRequired", new String[] {"yes", "no", "not_used"}, new String[] {"required", "optional", "not_used"}, "stopDate", "not_used", StudyConfigurationParameterType.RADIO),
	USE_END_TIME("useEndTime", "useEndTime", new String[] {"yes", "no"}, new String[] {"yes", "no"}, StudyConfigurationParameterType.RADIO, "stopDate"),
	END_DATE_TIME_LABEL("endDateTimeLabel", "endDateTimeLabel", "255", StudyConfigurationParameterType.TEXT, "stopDate"),

	// Data Entry Parameters
	DATA_ENTRY_PARAMETERS("dataEntryParameters", "dataEntryParameters", StudyConfigurationParameterType.GROUP),

	INTERVIEWER_NAME_REQUIRED("interviewerNameRequired", "when_entering_data_entry_interviewer", new String[] {"yes", "no", "not_used"}, new String[] {"required", "optional", "not_used"}, "interviewer1 interviewer2", "not_used", StudyConfigurationParameterType.RADIO),
	INTERVIEWER_NAME_DEFAULT("interviewerNameDefault", "interviewer_name_default_as_blank", new String[] {"blank", "pre-populated"}, new String[] {"blank", "pre_populated_from_active_user"}, "interviewer2", "blank", "interviewer1 simulateRadioOnClick", StudyConfigurationParameterType.RADIO),
	INTERVIEWER_NAME_EDITABLE("interviewerNameEditable", "interviewer_name_editable", new String[] {"true", "false"}, new String[] {"yes", "no"}, StudyConfigurationParameterType.RADIO, "interviewer2"),
	INTERVIEW_DATE_REQUIRED("interviewDateRequired", "interviewer_date_required", new String[] {"yes", "no", "not_used"}, new String[] {"required", "optional", "not_used"}, "interviewDate1 interviewDate2", "not_used", StudyConfigurationParameterType.RADIO),
	INTERVIEW_DATE_DEFAULT("interviewDateDefault", "interviewer_date_default_as_blank", new String[] {"blank", "pre-populated"}, new String[] {"blank", "pre_populated_from_SE"}, "interviewDate2", "blank", "interviewDate1 simulateRadioOnClick", StudyConfigurationParameterType.RADIO),
	INTERVIEW_DATE_EDITABLE("interviewDateEditable", "interviewer_date_editable", new String[] {"true", "false"}, new String[] {"yes", "no"}, StudyConfigurationParameterType.RADIO, "interviewDate2"),
	AUTO_TABBING("autoTabbing", "useAutoTabbing", new String[] {"yes", "no"}, new String[] {"yes", "no"}, StudyConfigurationParameterType.RADIO),

	// CRFs Parameters
	CRFS_PARAMETERS("crfs_parameters", "crfs_parameters", StudyConfigurationParameterType.GROUP),

	EVALUATE_WITH_CONTEXT("evaluateWithContext", "systemProperty.evaluateWithContext.label", new String[] {"yes", "no"}, new String[] {"yes", "no"}, StudyConfigurationParameterType.RADIO),
	ANNOTATED_CRF_SAS_ITEM_NAMES("annotatedCrfSasItemNames", "sas_name_annotation", new String[] {"yes", "no"}, new String[] {"yes", "no"}, StudyConfigurationParameterType.RADIO),
	SHOW_YEARS_IN_CALENDAR("showYearsInCalendar", "show_years_in_calendar", new String[] {"yes", "no"}, new String[] {"yes", "no"}, StudyConfigurationParameterType.RADIO),

	// Randomization Parameters
	RANDOMIZATION_PARAMETERS("randomization_parameters", "randomization_parameters", StudyConfigurationParameterType.GROUP),

	ASSIGN_RANDOMIZATION_RESULT_TO("assignRandomizationResultTo", "assign_randomization_parameters_to", new String[] {"dngroup", "ssid", "none"}, new String[] {"systemProperty.assignRandomizationResultTo.dngroup.radioLabel", "systemProperty.assignRandomizationResultTo.ssid.radioLabel", "systemProperty.assignRandomizationResultTo.none.radioLabel"}, StudyConfigurationParameterType.RADIO),
	RANDOMIZATION_TRIAL_ID("randomizationTrialId", "systemProperty.randomizationTrialId.label", "255", StudyConfigurationParameterType.TEXT),
	RANDOMIZATION_ENVIROMENT("randomizationEnviroment", "systemProperty.randomizationEnviroment.label", new String[] {"test", "prod"}, new String[] {"systemProperty.randomizationEnviroment.test.radioLabel", "systemProperty.randomizationEnviroment.prod.radioLabel"}, StudyConfigurationParameterType.RADIO),

	// Data Import
	DATA_IMPORT("dataImport", "dataImport", StudyConfigurationParameterType.GROUP),

	MARK_IMPORTED_CRFAS_COMPLETED("markImportedCRFAsCompleted", "markImportedCRFAsCompleted", new String[] {"yes", "no"}, new String[] {"yes", "no"}, StudyConfigurationParameterType.RADIO),
	AUTO_SCHEDULE_EVENT_DURING_IMPORT("autoScheduleEventDuringImport", "autoScheduleEventDuringImport", new String[] {"yes", "no"}, new String[] {"yes", "no"}, StudyConfigurationParameterType.RADIO),
	AUTO_CREATE_SUBJECT_DURING_IMPORT("autoCreateSubjectDuringImport", "autoCreateSubjectDuringImport", new String[] {"yes", "no"}, new String[] {"yes", "no"}, StudyConfigurationParameterType.RADIO),
	REPLACE_EXISITING_DATA_DURING_IMPORT("replaceExisitingDataDuringImport", "replaceExisitingDataDuringImport", new String[] {"yes", "no"}, new String[] {"yes", "no"}, StudyConfigurationParameterType.RADIO),

	// Medical Coding
	MEDICAL_CODING("medical_coding", "medical_coding", StudyConfigurationParameterType.GROUP),

	MEDICAL_CODING_APPROVAL_NEEDED(true, "medicalCodingApprovalNeeded", "medicalCodingApprovalNeeded", new String[] {"yes", "no"}, new String[] {"yes", "no"}, StudyConfigurationParameterType.RADIO),
	MEDICAL_CODING_CONTEXT_NEEDED("medicalCodingContextNeeded", "medicalCodingContextNeeded", new String[] {"yes", "no"}, new String[] {"yes", "no"}, StudyConfigurationParameterType.RADIO),
	AUTO_CODE_DICTIONARY_NAME("autoCodeDictionaryName", "autoCodeDictionaryName", "255", StudyConfigurationParameterType.TEXT),

	// Rules
	RULE_RULES("rule_rules", "rule_rules", StudyConfigurationParameterType.GROUP),

	ALLOW_RULES_AUTO_SCHEDULING("allowRulesAutoScheduling", "allowRulesAutoScheduling", new String[] {"yes", "no"}, new String[] {"yes", "no"}, StudyConfigurationParameterType.RADIO);

	private String name;
	private String code;
	private boolean skip;
	private String[] values;
	private boolean required;
	private boolean disabled;
	private boolean ignoreName;
	private String defaultValue;
	private String[] valueCodes;
	private String dynamicLabelId;
	private String maxLength = "";
	private String objectsSelector;
	private String rowClassName = "";
	private String processorMode = "";
	private String validationPattern = "";
	private String dependentRowsClassName;
	private String validationErrorMessage = "";
	private StudyConfigurationParameterType type;
	private String hideDependentRowsIfSelectedValueIs;
	private String selectValueIfThereIsNothingIsSelected;
	private String showAdditionalStudyConfigurationParameterIfSelectedValueIs;
	private StudyConfigurationParameter additionalStudyConfigurationParameter;

	StudyConfigurationParameter(String name, String code, StudyConfigurationParameterType type) {
		this.name = name;
		this.code = code;
		this.type = type;
	}

	StudyConfigurationParameter(String objectsSelector, String rowClassName, String name, String code,
			StudyConfigurationParameterType type) {
		this.name = name;
		this.code = code;
		this.type = type;
		this.rowClassName = rowClassName;
		this.objectsSelector = objectsSelector;
	}

	StudyConfigurationParameter(String name, String code, String maxLength, StudyConfigurationParameterType type) {
		this.name = name;
		this.code = code;
		this.type = type;
		this.maxLength = maxLength;
	}

	StudyConfigurationParameter(String name, boolean skip, String maxLength, StudyConfigurationParameterType type) {
		this.name = name;
		this.type = type;
		this.skip = skip;
		this.maxLength = maxLength;
	}

	StudyConfigurationParameter(String name, String code, String maxLength, StudyConfigurationParameterType type,
			String rowClassName) {
		this.name = name;
		this.code = code;
		this.type = type;
		this.maxLength = maxLength;
		this.rowClassName = rowClassName;
	}

	StudyConfigurationParameter(String name, boolean skip, String maxLength, String dynamicLabelId,
			StudyConfigurationParameterType type, String validationPattern, String validationErrorMessage) {
		this.name = name;
		this.type = type;
		this.skip = skip;
		this.maxLength = maxLength;
		this.dynamicLabelId = dynamicLabelId;
		this.validationPattern = validationPattern;
		this.validationErrorMessage = validationErrorMessage;
	}

	StudyConfigurationParameter(String name, String code, String[] values, String[] valueCodes,
			StudyConfigurationParameterType type) {
		this.name = name;
		this.code = code;
		this.type = type;
		this.values = values;
		this.valueCodes = valueCodes;
	}

	StudyConfigurationParameter(boolean disabled, String name, String code, String[] values, String[] valueCodes,
			StudyConfigurationParameterType type) {
		this.name = name;
		this.code = code;
		this.type = type;
		this.values = values;
		this.disabled = disabled;
		this.valueCodes = valueCodes;
	}

	StudyConfigurationParameter(String name, String code, String[] values, String[] valueCodes,
			StudyConfigurationParameterType type, String rowClassName) {
		this.name = name;
		this.code = code;
		this.type = type;
		this.values = values;
		this.valueCodes = valueCodes;
		this.rowClassName = rowClassName;
	}

	StudyConfigurationParameter(String name, String code, String[] values, String[] valueCodes, String dynamicLabelId,
			String processorMode, StudyConfigurationParameterType type, String rowClassName) {
		this.name = name;
		this.code = code;
		this.type = type;
		this.values = values;
		this.valueCodes = valueCodes;
		this.rowClassName = rowClassName;
		this.processorMode = processorMode;
		this.dynamicLabelId = dynamicLabelId;
	}

	StudyConfigurationParameter(String name, String code, String[] values, String[] valueCodes,
			String dependentRowsClassName, String hideDependentRowsIfSelectedValueIs, String rowClassName,
			StudyConfigurationParameterType type) {
		this.name = name;
		this.code = code;
		this.type = type;
		this.values = values;
		this.valueCodes = valueCodes;
		this.rowClassName = rowClassName;
		this.dependentRowsClassName = dependentRowsClassName;
		this.hideDependentRowsIfSelectedValueIs = hideDependentRowsIfSelectedValueIs;
	}

	StudyConfigurationParameter(String name, String code, String[] values, String[] valueCodes,
			String dependentRowsClassName, String hideDependentRowsIfSelectedValueIs,
			StudyConfigurationParameterType type) {
		this.name = name;
		this.code = code;
		this.type = type;
		this.values = values;
		this.valueCodes = valueCodes;
		this.dependentRowsClassName = dependentRowsClassName;
		this.hideDependentRowsIfSelectedValueIs = hideDependentRowsIfSelectedValueIs;
	}

	StudyConfigurationParameter(boolean ignoreName, String name, String code, String[] values, String[] valueCodes,
			String selectValueIfThereIsNothingIsSelected, StudyConfigurationParameterType type,
			String showAdditionalStudyConfigurationParameterIfSelectedValueIs,
			StudyConfigurationParameter additionalStudyConfigurationParameter) {
		this.name = name;
		this.code = code;
		this.type = type;
		this.values = values;
		this.valueCodes = valueCodes;
		this.ignoreName = ignoreName;
		this.selectValueIfThereIsNothingIsSelected = selectValueIfThereIsNothingIsSelected;
		this.additionalStudyConfigurationParameter = additionalStudyConfigurationParameter;
		this.showAdditionalStudyConfigurationParameterIfSelectedValueIs = showAdditionalStudyConfigurationParameterIfSelectedValueIs;
	}

	StudyConfigurationParameter(boolean ignoreName, String name, String code, String[] values, String[] valueCodes,
			String rowClassName, String selectValueIfThereIsNothingIsSelected, StudyConfigurationParameterType type,
			String showAdditionalStudyConfigurationParameterIfSelectedValueIs,
			StudyConfigurationParameter additionalStudyConfigurationParameter, String dynamicLabelId) {
		this.name = name;
		this.code = code;
		this.type = type;
		this.values = values;
		this.valueCodes = valueCodes;
		this.ignoreName = ignoreName;
		this.rowClassName = rowClassName;
		this.dynamicLabelId = dynamicLabelId;
		this.selectValueIfThereIsNothingIsSelected = selectValueIfThereIsNothingIsSelected;
		this.additionalStudyConfigurationParameter = additionalStudyConfigurationParameter;
		this.showAdditionalStudyConfigurationParameterIfSelectedValueIs = showAdditionalStudyConfigurationParameterIfSelectedValueIs;
	}

	/**
	 * {@inheritDoc}
	 */
	public String getName() {
		return name;
	}

	/**
	 * {@inheritDoc}
	 */
	public String getCode() {
		return code;
	}

	public boolean isSkip() {
		return skip;
	}

	/**
	 * {@inheritDoc}
	 */
	public String[] getValues() {
		return values;
	}

	public boolean isDisabled() {
		return disabled;
	}

	public boolean isIgnoreName() {
		return ignoreName;
	}

	public String[] getValueCodes() {
		return valueCodes;
	}

	public String getDynamicLabelId() {
		return dynamicLabelId;
	}

	public String getMaxLength() {
		return maxLength;
	}

	public String getObjectsSelector() {
		return objectsSelector;
	}

	public String getValidationPattern() {
		return validationPattern;
	}

	public String getRowClassName() {
		return rowClassName;
	}

	public String getProcessorMode() {
		return processorMode;
	}

	public String getDependentRowsClassName() {
		return dependentRowsClassName;
	}

	/**
	 * {@inheritDoc}
	 */
	public StudyConfigurationParameterType getType() {
		return type;
	}

	public String getHideDependentRowsIfSelectedValueIs() {
		return hideDependentRowsIfSelectedValueIs;
	}

	public String getSelectValueIfThereIsNothingIsSelected() {
		return selectValueIfThereIsNothingIsSelected;
	}

	public String getShowAdditionalStudyConfigurationParameterIfSelectedValueIs() {
		return showAdditionalStudyConfigurationParameterIfSelectedValueIs;
	}

	public StudyConfigurationParameter getAdditionalStudyConfigurationParameter() {
		return additionalStudyConfigurationParameter;
	}

	public String getValidationErrorMessage() {
		return validationErrorMessage;
	}

	private static class Constants {
		public static final String CUSTOM = "-=custom=-";
	}

	/**
	 * {@inheritDoc}
	 */
	public List<StudyConfigurationParameter> asArray() {
		List<StudyConfigurationParameter> list = new ArrayList<StudyConfigurationParameter>();
		for (StudyConfigurationParameter studyConfigurationParameter : StudyConfigurationParameter.values()) {
			if (!studyConfigurationParameter.isDisabled() && !studyConfigurationParameter.isIgnoreName()
					&& studyConfigurationParameter.getType() != StudyConfigurationParameterType.DYNAMIC_LABEL
					&& studyConfigurationParameter.getType() != StudyConfigurationParameterType.GROUP) {
				list.add(studyConfigurationParameter);
			}
		}
		return list;
	}

	/**
	 * {@inheritDoc}
	 */
	public StudyConfigurationParameter find(String name) {
		StudyConfigurationParameter result = null;
		for (StudyConfigurationParameter studyConfigurationParameter : asArray()) {
			if (studyConfigurationParameter.getName().equals(name)) {
				result = studyConfigurationParameter;
				break;
			}
		}
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	public boolean hasTypo(String name) {
		boolean result = false;
		for (StudyConfigurationParameter studyConfigurationParameter : asArray()) {
			if (studyConfigurationParameter.getName().equalsIgnoreCase(name)
					&& !studyConfigurationParameter.getName().equals(name)) {
				result = true;
				break;
			}
		}
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	public boolean isRequired() {
		return required;
	}

	/**
	 * {@inheritDoc}
	 */
	public String getDefaultValue() {
		return defaultValue;
	}
}
