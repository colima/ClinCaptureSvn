/*******************************************************************************
 * ClinCapture, Copyright (C) 2009-2013 Clinovo Inc.
 *
 * This program is free software: you can redistribute it and/or modify it under the terms of the Lesser GNU General Public License 
 * as published by the Free Software Foundation, either version 2.1 of the License, or(at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty 
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the Lesser GNU General Public License for more details.
 *
 * You should have received a copy of the Lesser GNU General Public License along with this program.  
 \* If not, see <http://www.gnu.org/licenses/>. Modified by Clinovo Inc 01/29/2013.
 ******************************************************************************/

/*
 * OpenClinica is distributed under the
 * GNU Lesser General Public License (GNU LGPL).

 * For details see: http://www.openclinica.org/license
 * copyright 2003-2005 Akaza Research
 */
package org.akaza.openclinica.bean.service;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;

import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * This is a help class for each study, it saves all the parameter configurations.
 * 
 * @author jxu
 */
@XmlAccessorType(XmlAccessType.NONE)
@XmlRootElement(name = "Parameters", namespace = "http://www.cdisc.org/ns/odm/v1.3")
@JsonAutoDetect(fieldVisibility = JsonAutoDetect.Visibility.NONE, creatorVisibility = JsonAutoDetect.Visibility.NONE, getterVisibility = JsonAutoDetect.Visibility.NONE, isGetterVisibility = JsonAutoDetect.Visibility.NONE, setterVisibility = JsonAutoDetect.Visibility.NONE)
public class StudyParameterConfig {

	@JsonProperty("collectDob")
	@XmlElement(name = "CollectDob", namespace = "http://www.cdisc.org/ns/odm/v1.3")
	private String collectDob;

	@JsonProperty("discrepancyManagement")
	@XmlElement(name = "DiscrepancyManagement", namespace = "http://www.cdisc.org/ns/odm/v1.3")
	private String discrepancyManagement;

	@JsonProperty("genderRequired")
	@XmlElement(name = "GenderRequired", namespace = "http://www.cdisc.org/ns/odm/v1.3")
	private String genderRequired; // true or false

	@JsonProperty("subjectPersonIdRequired")
	@XmlElement(name = "SubjectPersonIdRequired", namespace = "http://www.cdisc.org/ns/odm/v1.3")
	private String subjectPersonIdRequired; // required, optional, copy from SSID or not used

	@JsonProperty("interviewerNameRequired")
	@XmlElement(name = "InterviewerNameRequired", namespace = "http://www.cdisc.org/ns/odm/v1.3")
	private String interviewerNameRequired; // required, optional

	@JsonProperty("interviewerNameDefault")
	@XmlElement(name = "InterviewerNameDefault", namespace = "http://www.cdisc.org/ns/odm/v1.3")
	private String interviewerNameDefault; // blank,pre-populated

	@JsonProperty("interviewerNameEditable")
	@XmlElement(name = "InterviewerNameEditable", namespace = "http://www.cdisc.org/ns/odm/v1.3")
	private String interviewerNameEditable; // editable or not

	@JsonProperty("interviewDateRequired")
	@XmlElement(name = "InterviewDateRequired", namespace = "http://www.cdisc.org/ns/odm/v1.3")
	private String interviewDateRequired; // required, optional

	@JsonProperty("interviewDateDefault")
	@XmlElement(name = "InterviewDateDefault", namespace = "http://www.cdisc.org/ns/odm/v1.3")
	private String interviewDateDefault; // blank, pre-populated

	@JsonProperty("interviewDateEditable")
	@XmlElement(name = "InterviewDateEditable", namespace = "http://www.cdisc.org/ns/odm/v1.3")
	private String interviewDateEditable; // editable or not

	@JsonProperty("subjectIdGeneration")
	@XmlElement(name = "SubjectIdGeneration", namespace = "http://www.cdisc.org/ns/odm/v1.3")
	private String subjectIdGeneration; // manual, auto non-editable, auto
	// editable,

	@JsonProperty("autoGeneratedPrefix")
	@XmlElement(name = "AutoGeneratedPrefix", namespace = "http://www.cdisc.org/ns/odm/v1.3")
	private String autoGeneratedPrefix; // SiteName, Empty or Custom

	@JsonProperty("autoGeneratedSeparator")
	@XmlElement(name = "AutoGeneratedSeparator", namespace = "http://www.cdisc.org/ns/odm/v1.3")
	private String autoGeneratedSeparator; // Empty or Custom

	@JsonProperty("autoGeneratedSuffix")
	@XmlElement(name = "AutoGeneratedSuffix", namespace = "http://www.cdisc.org/ns/odm/v1.3")
	private String autoGeneratedSuffix; // 3,4,5,6

	private String subjectIdPrefixSuffix; // auto with prefix/suffix, or not

	@JsonProperty("personIdShownOnCRF")
	@XmlElement(name = "PersonIdShownOnCRF", namespace = "http://www.cdisc.org/ns/odm/v1.3")
	private String personIdShownOnCRF; // personal Id is shown on CRF header or not

	@JsonProperty("secondaryLabelViewable")
	@XmlElement(name = "SecondaryLabelViewable", namespace = "http://www.cdisc.org/ns/odm/v1.3")
	private String secondaryLabelViewable; // Subject secondary label would be shown on CRF header

	@JsonProperty("adminForcedReasonForChange")
	@XmlElement(name = "AdminForcedReasonForChange", namespace = "http://www.cdisc.org/ns/odm/v1.3")
	private String adminForcedReasonForChange; // Administrative editing will not allow changes without a DN added
	// 'reason for change'

	@JsonProperty("eventLocationRequired")
	@XmlElement(name = "EventLocationRequired", namespace = "http://www.cdisc.org/ns/odm/v1.3")
	private String eventLocationRequired;

	@JsonProperty("secondaryIdRequired")
	@XmlElement(name = "SecondaryIdRequired", namespace = "http://www.cdisc.org/ns/odm/v1.3")
	private String secondaryIdRequired; // required, optional, or not used

	private String dateOfEnrollmentForStudyRequired; // required, optional, or not used

	@JsonProperty("studySubjectIdLabel")
	@XmlElement(name = "StudySubjectIdLabel", namespace = "http://www.cdisc.org/ns/odm/v1.3")
	private String studySubjectIdLabel;

	@JsonProperty("secondaryIdLabel")
	@XmlElement(name = "SecondaryIdLabel", namespace = "http://www.cdisc.org/ns/odm/v1.3")
	private String secondaryIdLabel;

	@JsonProperty("dateOfEnrollmentForStudyLabel")
	@XmlElement(name = "DateOfEnrollmentForStudyLabel", namespace = "http://www.cdisc.org/ns/odm/v1.3")
	private String dateOfEnrollmentForStudyLabel;

	@JsonProperty("genderLabel")
	@XmlElement(name = "GenderLabel", namespace = "http://www.cdisc.org/ns/odm/v1.3")
	private String genderLabel;

	@JsonProperty("startDateTimeRequired")
	@XmlElement(name = "StartDateTimeRequired", namespace = "http://www.cdisc.org/ns/odm/v1.3")
	private String startDateTimeRequired;

	@JsonProperty("useStartTime")
	@XmlElement(name = "UseStartTime", namespace = "http://www.cdisc.org/ns/odm/v1.3")
	private String useStartTime;

	@JsonProperty("endDateTimeRequired")
	@XmlElement(name = "EndDateTimeRequired", namespace = "http://www.cdisc.org/ns/odm/v1.3")
	private String endDateTimeRequired;

	@JsonProperty("useEndTime")
	@XmlElement(name = "UseEndTime", namespace = "http://www.cdisc.org/ns/odm/v1.3")
	private String useEndTime;

	@JsonProperty("startDateTimeLabel")
	@XmlElement(name = "StartDateTimeLabel", namespace = "http://www.cdisc.org/ns/odm/v1.3")
	private String startDateTimeLabel;

	@JsonProperty("endDateTimeLabel")
	@XmlElement(name = "EndDateTimeLabel", namespace = "http://www.cdisc.org/ns/odm/v1.3")
	private String endDateTimeLabel;

	@JsonProperty("markImportedCRFAsCompleted")
	@XmlElement(name = "MarkImportedCRFAsCompleted", namespace = "http://www.cdisc.org/ns/odm/v1.3")
	private String markImportedCRFAsCompleted;

	@JsonProperty("allowSdvWithOpenQueries")
	@XmlElement(name = "AllowSdvWithOpenQueries", namespace = "http://www.cdisc.org/ns/odm/v1.3")
	private String allowSdvWithOpenQueries;

	@JsonProperty("allowDynamicGroupsManagement")
	@XmlElement(name = "AllowDynamicGroupsManagement", namespace = "http://www.cdisc.org/ns/odm/v1.3")
	private String allowDynamicGroupsManagement;

	@JsonProperty("replaceExisitingDataDuringImport")
	@XmlElement(name = "ReplaceExisitingDataDuringImport", namespace = "http://www.cdisc.org/ns/odm/v1.3")
	private String replaceExisitingDataDuringImport;

	@JsonProperty("autoScheduleEventDuringImport")
	@XmlElement(name = "AutoScheduleEventDuringImport", namespace = "http://www.cdisc.org/ns/odm/v1.3")
	private String autoScheduleEventDuringImport;

	@JsonProperty("autoCreateSubjectDuringImport")
	@XmlElement(name = "AutoCreateSubjectDuringImport", namespace = "http://www.cdisc.org/ns/odm/v1.3")
	private String autoCreateSubjectDuringImport;

	@JsonProperty("allowDiscrepancyCorrectionForms")
	@XmlElement(name = "AllowDiscrepancyCorrectionForms", namespace = "http://www.cdisc.org/ns/odm/v1.3")
	private String allowDiscrepancyCorrectionForms;

	@JsonProperty("autoCodeDictionaryName")
	@XmlElement(name = "AutoCodeDictionaryName", namespace = "http://www.cdisc.org/ns/odm/v1.3")
	private String autoCodeDictionaryName = "";

	@JsonProperty("medicalCodingContextNeeded")
	@XmlElement(name = "MedicalCodingContextNeeded", namespace = "http://www.cdisc.org/ns/odm/v1.3")
	private String medicalCodingContextNeeded = "no";

	// Randomization
	@JsonProperty("assignRandomizationResultTo")
	@XmlElement(name = "AssignRandomizationResultTo", namespace = "http://www.cdisc.org/ns/odm/v1.3")
	private String assignRandomizationResultTo = "none";

	@JsonProperty("randomizationTrialId")
	@XmlElement(name = "RandomizationTrialId", namespace = "http://www.cdisc.org/ns/odm/v1.3")
	private String randomizationTrialId = "";

	@JsonProperty("randomizationEnviroment")
	@XmlElement(name = "RandomizationEnviroment", namespace = "http://www.cdisc.org/ns/odm/v1.3")
	private String randomizationEnviroment = "";

	// Evaluation
	@JsonProperty("evaluateWithContext")
	@XmlElement(name = "EvaluateWithContext", namespace = "http://www.cdisc.org/ns/odm/v1.3")
	private String evaluateWithContext = "no";

	@JsonProperty("allowRulesAutoScheduling")
	@XmlElement(name = "AllowRulesAutoScheduling", namespace = "http://www.cdisc.org/ns/odm/v1.3")
	private String allowRulesAutoScheduling = "yes";

	// Annotated CRF SAS Item Names
	@JsonProperty("annotatedCrfSasItemNames")
	@XmlElement(name = "AnnotatedCrfSasItemNames", namespace = "http://www.cdisc.org/ns/odm/v1.3")
	private String annotatedCrfSasItemNames = "no";

	@JsonProperty("autoTabbing")
	@XmlElement(name = "AutoTabbing", namespace = "http://www.cdisc.org/ns/odm/v1.3")
	private String autoTabbing = "yes";

	@JsonProperty("showYearsInCalendar")
	@XmlElement(name = "ShowYearsInCalendar", namespace = "http://www.cdisc.org/ns/odm/v1.3")
	private String showYearsInCalendar = "yes";

	@JsonProperty("instanceType")
	@XmlElement(name = "InstanceType", namespace = "http://www.cdisc.org/ns/odm/v1.3")
	private String instanceType = "development";

	// features
	private StudyFeatureConfig studyFeatureConfig = new StudyFeatureConfig();

	private String bioontologyUsername = "";
	private String defaultBioontologyURL = "";
	private String medicalCodingApiKey = "";
	private String medicalCodingApprovalNeeded = "no";

	/**
	 * This is base constructor to set all default values.
	 */
	public StudyParameterConfig() {

		collectDob = "3";
		discrepancyManagement = "true";
		genderRequired = "false";
		subjectPersonIdRequired = "not used";
		interviewerNameRequired = "not_used";

		interviewerNameDefault = "blank";
		interviewerNameEditable = "true";
		interviewDateRequired = "not_used";
		interviewDateDefault = "blank"; // blank, pre-populated
		interviewDateEditable = "true"; // editable or not
		subjectIdGeneration = "auto editable"; // manual, auto non-editable, auto editable,
		autoGeneratedPrefix = "SiteID";
		autoGeneratedSeparator = "-";
		autoGeneratedSuffix = "3";
		subjectIdPrefixSuffix = "true";
		personIdShownOnCRF = "false";
		secondaryLabelViewable = "false";
		adminForcedReasonForChange = "true";
		eventLocationRequired = "not_used";

		secondaryIdRequired = "not_used";
		dateOfEnrollmentForStudyRequired = "not_used";
		studySubjectIdLabel = "Subject ID";
		secondaryIdLabel = "Secondary ID";
		dateOfEnrollmentForStudyLabel = "Date of Enrollment for Study";
		genderLabel = "Sex";

		startDateTimeRequired = "not_used";
		useStartTime = "yes";
		endDateTimeRequired = "not_used";
		useEndTime = "yes";
		startDateTimeLabel = "Start Date/Time";
		endDateTimeLabel = "End Date/Time";

		markImportedCRFAsCompleted = "no";
		autoScheduleEventDuringImport = "no";
		autoCreateSubjectDuringImport = "no";
		allowSdvWithOpenQueries = "no";
		replaceExisitingDataDuringImport = "no";

		annotatedCrfSasItemNames = "no";
		allowDynamicGroupsManagement = "yes";
		allowDiscrepancyCorrectionForms = "yes";
		randomizationEnviroment = "prod";

		autoTabbing = "yes";
		showYearsInCalendar = "yes";
	}

	public StudyFeatureConfig getStudyFeatureConfig() {
		return studyFeatureConfig;
	}

	public void setStudyFeatureConfig(StudyFeatureConfig studyFeatureConfig) {
		this.studyFeatureConfig = studyFeatureConfig;
	}

	/**
	 * @return Returns the collectDob.
	 */
	public String getCollectDob() {
		return collectDob;
	}

	/**
	 * @param collectDob
	 *            The collectDob to set.
	 */
	public void setCollectDob(String collectDob) {
		this.collectDob = collectDob;
	}

	/**
	 * @return Returns the discrepancyManagement.
	 */
	public String getDiscrepancyManagement() {
		return discrepancyManagement;
	}

	/**
	 * @param discrepancyManagement
	 *            The discrepancyManagement to set.
	 */
	public void setDiscrepancyManagement(String discrepancyManagement) {
		this.discrepancyManagement = discrepancyManagement;
	}

	/**
	 * @return Returns the genderRequired.
	 */
	public String getGenderRequired() {
		return genderRequired;
	}

	/**
	 * @param genderRequired
	 *            The genderRequired to set.
	 */
	public void setGenderRequired(String genderRequired) {
		this.genderRequired = genderRequired;
	}

	/**
	 * @return Returns the interviewDateDefault.
	 */
	public String getInterviewDateDefault() {
		return interviewDateDefault;
	}

	/**
	 * @param interviewDateDefault
	 *            The interviewDateDefault to set.
	 */
	public void setInterviewDateDefault(String interviewDateDefault) {
		this.interviewDateDefault = interviewDateDefault;
	}

	/**
	 * @return Returns the interviewDateEditable.
	 */
	public String getInterviewDateEditable() {
		return interviewDateEditable;
	}

	/**
	 * @param interviewDateEditable
	 *            The interviewDateEditable to set.
	 */
	public void setInterviewDateEditable(String interviewDateEditable) {
		this.interviewDateEditable = interviewDateEditable;
	}

	/**
	 * @return Returns the interviewDateRequired.
	 */
	public String getInterviewDateRequired() {
		return interviewDateRequired;
	}

	/**
	 * @param interviewDateRequired
	 *            The interviewDateRequired to set.
	 */
	public void setInterviewDateRequired(String interviewDateRequired) {
		this.interviewDateRequired = interviewDateRequired;
	}

	/**
	 * @return Returns the interviewerNameDefault.
	 */
	public String getInterviewerNameDefault() {
		return interviewerNameDefault;
	}

	/**
	 * @param interviewerNameDefault
	 *            The interviewerNameDefault to set.
	 */
	public void setInterviewerNameDefault(String interviewerNameDefault) {
		this.interviewerNameDefault = interviewerNameDefault;
	}

	/**
	 * @return Returns the interviewerNameEditable.
	 */
	public String getInterviewerNameEditable() {
		return interviewerNameEditable;
	}

	/**
	 * @param interviewerNameEditable
	 *            The interviewerNameEditable to set.
	 */
	public void setInterviewerNameEditable(String interviewerNameEditable) {
		this.interviewerNameEditable = interviewerNameEditable;
	}

	/**
	 * @return Returns the interviewerNameRequired.
	 */
	public String getInterviewerNameRequired() {
		return interviewerNameRequired;
	}

	/**
	 * @param interviewerNameRequired
	 *            The interviewerNameRequired to set.
	 */
	public void setInterviewerNameRequired(String interviewerNameRequired) {
		this.interviewerNameRequired = interviewerNameRequired;
	}

	/**
	 * @return Returns the subjectIdGeneration.
	 */
	public String getSubjectIdGeneration() {
		return subjectIdGeneration;
	}

	/**
	 * @param subjectIdGeneration
	 *            The subjectIdGeneration to set.
	 */
	public void setSubjectIdGeneration(String subjectIdGeneration) {
		this.subjectIdGeneration = subjectIdGeneration;
	}

	/**
	 * @return Returns the autoGeneratedPrefix;
	 */
	public String getAutoGeneratedPrefix() {
		return autoGeneratedPrefix;
	}

	/**
	 * @param autoGeneratedPrefix
	 *            The autoGeneratedPrefix to set.
	 */
	public void setAutoGeneratedPrefix(String autoGeneratedPrefix) {
		this.autoGeneratedPrefix = autoGeneratedPrefix;
	}

	/**
	 * @return Returns the autoGeneratedSeparator;
	 */
	public String getAutoGeneratedSeparator() {
		return autoGeneratedSeparator;
	}

	/**
	 * @param autoGeneratedSeparator
	 *            The autoGeneratedSeparator to set.
	 */
	public void setAutoGeneratedSeparator(String autoGeneratedSeparator) {
		this.autoGeneratedSeparator = autoGeneratedSeparator;
	}

	/**
	 * @return Returns the autoGeneratedSuffix;
	 */
	public String getAutoGeneratedSuffix() {
		return autoGeneratedSuffix;
	}

	/**
	 * @param autoGeneratedSuffix
	 *            The autoGeneratedSuffix to set.
	 */
	public void setAutoGeneratedSuffix(String autoGeneratedSuffix) {
		this.autoGeneratedSuffix = autoGeneratedSuffix;
	}

	/**
	 * @return Returns the subjectIdPrefixSuffix.
	 */
	public String getSubjectIdPrefixSuffix() {
		return subjectIdPrefixSuffix;
	}

	/**
	 * @param subjectIdPrefixSuffix
	 *            The subjectIdPrefixSuffix to set.
	 */
	public void setSubjectIdPrefixSuffix(String subjectIdPrefixSuffix) {
		this.subjectIdPrefixSuffix = subjectIdPrefixSuffix;
	}

	/**
	 * @return Returns the subjectPersonIdRequired.
	 */
	public String getSubjectPersonIdRequired() {
		return subjectPersonIdRequired;
	}

	/**
	 * @param subjectPersonIdRequired
	 *            The subjectPersonIdRequired to set.
	 */
	public void setSubjectPersonIdRequired(String subjectPersonIdRequired) {
		this.subjectPersonIdRequired = subjectPersonIdRequired;
	}

	/**
	 * @return Returns the personIdShownOnCRF.
	 */
	public String getPersonIdShownOnCRF() {
		return personIdShownOnCRF;
	}

	/**
	 * @param personIdShownOnCRF
	 *            The personIdShownOnCRF to set.
	 */
	public void setPersonIdShownOnCRF(String personIdShownOnCRF) {
		this.personIdShownOnCRF = personIdShownOnCRF;
	}

	public String getSecondaryLabelViewable() {
		return secondaryLabelViewable;
	}

	public void setSecondaryLabelViewable(String secondaryLabelViewable) {
		this.secondaryLabelViewable = secondaryLabelViewable;
	}

	public String getAdminForcedReasonForChange() {
		return adminForcedReasonForChange;
	}

	public void setAdminForcedReasonForChange(String adminForcedReasonForChange) {
		this.adminForcedReasonForChange = adminForcedReasonForChange;
	}

	public String getEventLocationRequired() {
		return eventLocationRequired;
	}

	public void setEventLocationRequired(String eventLocationRequired) {
		this.eventLocationRequired = eventLocationRequired;
	}

	public String getSecondaryIdRequired() {
		return secondaryIdRequired;
	}

	public void setSecondaryIdRequired(String secondaryIdRequired) {
		this.secondaryIdRequired = secondaryIdRequired;
	}

	public String getDateOfEnrollmentForStudyRequired() {
		return dateOfEnrollmentForStudyRequired;
	}

	public void setDateOfEnrollmentForStudyRequired(String dateOfEnrollmentForStudyRequired) {
		this.dateOfEnrollmentForStudyRequired = dateOfEnrollmentForStudyRequired;
	}

	public String getStudySubjectIdLabel() {
		return studySubjectIdLabel;
	}

	public void setStudySubjectIdLabel(String studySubjectIdLabel) {
		this.studySubjectIdLabel = studySubjectIdLabel;
	}

	public String getSecondaryIdLabel() {
		return secondaryIdLabel;
	}

	public void setSecondaryIdLabel(String secondaryIdLabel) {
		this.secondaryIdLabel = secondaryIdLabel;
	}

	public String getDateOfEnrollmentForStudyLabel() {
		return dateOfEnrollmentForStudyLabel;
	}

	public void setDateOfEnrollmentForStudyLabel(String dateOfEnrollmentForStudyLabel) {
		this.dateOfEnrollmentForStudyLabel = dateOfEnrollmentForStudyLabel;
	}

	public String getGenderLabel() {
		return genderLabel;
	}

	public void setGenderLabel(String genderLabel) {
		this.genderLabel = genderLabel;
	}

	public String getStartDateTimeRequired() {
		return startDateTimeRequired;
	}

	public void setStartDateTimeRequired(String startDateTimeRequired) {
		this.startDateTimeRequired = startDateTimeRequired;
	}

	public String getUseStartTime() {
		return useStartTime;
	}

	public void setUseStartTime(String useStartTime) {
		this.useStartTime = useStartTime;
	}

	public String getEndDateTimeRequired() {
		return endDateTimeRequired;
	}

	public void setEndDateTimeRequired(String endDateTimeRequired) {
		this.endDateTimeRequired = endDateTimeRequired;
	}

	public String getUseEndTime() {
		return useEndTime;
	}

	public void setUseEndTime(String useEndTime) {
		this.useEndTime = useEndTime;
	}

	public String getStartDateTimeLabel() {
		return startDateTimeLabel;
	}

	public void setStartDateTimeLabel(String startDateTimeLabel) {
		this.startDateTimeLabel = startDateTimeLabel;
	}

	public String getEndDateTimeLabel() {
		return endDateTimeLabel;
	}

	public void setEndDateTimeLabel(String endDateTimeLabel) {
		this.endDateTimeLabel = endDateTimeLabel;
	}

	public String getMarkImportedCRFAsCompleted() {
		return markImportedCRFAsCompleted;
	}

	public void setMarkImportedCRFAsCompleted(String markImportedCRFAsCompleted) {
		this.markImportedCRFAsCompleted = markImportedCRFAsCompleted;
	}

	public String getAllowSdvWithOpenQueries() {
		return allowSdvWithOpenQueries;
	}

	public void setAllowSdvWithOpenQueries(String allowSdvWithOpenQueries) {
		this.allowSdvWithOpenQueries = allowSdvWithOpenQueries;
	}

	public String getReplaceExisitingDataDuringImport() {
		return replaceExisitingDataDuringImport;
	}

	public void setReplaceExisitingDataDuringImport(String replaceExisitingDataDuringImport) {
		this.replaceExisitingDataDuringImport = replaceExisitingDataDuringImport;
	}

	public String getBioontologyUsername() {
		return bioontologyUsername;
	}

	public void setBioontologyUsername(String bioontologyUsername) {
		this.bioontologyUsername = bioontologyUsername;
	}

	public String getDefaultBioontologyURL() {
		return defaultBioontologyURL;
	}

	public void setDefaultBioontologyURL(String defaultBioontologyURL) {
		this.defaultBioontologyURL = defaultBioontologyURL;
	}

	public String getAutoCodeDictionaryName() {
		return autoCodeDictionaryName;
	}

	public void setAutoCodeDictionaryName(String autoCodeDictionaryName) {
		this.autoCodeDictionaryName = autoCodeDictionaryName;
	}

	public String getMedicalCodingApprovalNeeded() {
		return medicalCodingApprovalNeeded;
	}

	public void setMedicalCodingApprovalNeeded(String medicalCodingApprovalNeeded) {
		if (!medicalCodingApprovalNeeded.isEmpty()) {
			this.medicalCodingApprovalNeeded = medicalCodingApprovalNeeded;
		}
	}

	public String getAutoScheduleEventDuringImport() {
		return autoScheduleEventDuringImport;
	}

	public void setAutoScheduleEventDuringImport(String autoScheduleEventDuringImport) {
		this.autoScheduleEventDuringImport = autoScheduleEventDuringImport;
	}

	public String getMedicalCodingContextNeeded() {
		return medicalCodingContextNeeded;
	}

	public void setMedicalCodingContextNeeded(String medicalCodingContextNeeded) {
		this.medicalCodingContextNeeded = medicalCodingContextNeeded;
	}

	public String getAutoCreateSubjectDuringImport() {
		return autoCreateSubjectDuringImport;
	}

	public void setAutoCreateSubjectDuringImport(String autoCreateSubjectDuringImport) {
		this.autoCreateSubjectDuringImport = autoCreateSubjectDuringImport;
	}

	public String getMedicalCodingApiKey() {
		return medicalCodingApiKey;
	}

	public void setMedicalCodingApiKey(String medicalCodingApiKey) {
		this.medicalCodingApiKey = medicalCodingApiKey;
	}

	/**
	 * @return the assignRandomizationResultTo
	 */
	public String getAssignRandomizationResultTo() {
		return assignRandomizationResultTo;
	}

	/**
	 * @param assignRandomizationResultTo
	 *            the assignRandomizationResultTo to set
	 */
	public void setAssignRandomizationResultTo(String assignRandomizationResultTo) {
		this.assignRandomizationResultTo = assignRandomizationResultTo;
	}

	/**
	 * @return the randomizationTrialId
	 */
	public String getRandomizationTrialId() {
		return randomizationTrialId;
	}

	/**
	 * @param randomizationTrialId
	 *            the randomizationTrialId to set
	 */
	public void setRandomizationTrialId(String randomizationTrialId) {
		this.randomizationTrialId = randomizationTrialId;
	}

	public String getEvaluateWithContext() {
		return evaluateWithContext;
	}

	public void setEvaluateWithContext(String evaluateWithContext) {
		this.evaluateWithContext = evaluateWithContext;
	}

	/**
	 * @return the allowDynamicGroupsManagement
	 */
	public String getAllowDynamicGroupsManagement() {
		return allowDynamicGroupsManagement;
	}

	/**
	 * @param allowDynamicGroupsManagement
	 *            the allowDynamicGroupsManagement to set
	 */
	public void setAllowDynamicGroupsManagement(String allowDynamicGroupsManagement) {
		this.allowDynamicGroupsManagement = allowDynamicGroupsManagement;
	}

	/**
	 * @return the allowRulesAutoScheduling
	 */
	public String getAllowRulesAutoScheduling() {
		return allowRulesAutoScheduling;
	}

	/**
	 * @param allowRulesAutoScheduling
	 *            the allowRulesAutoScheduling to set
	 */
	public void setAllowRulesAutoScheduling(String allowRulesAutoScheduling) {
		this.allowRulesAutoScheduling = allowRulesAutoScheduling;
	}

	/**
	 * @return the aCrfSasItemNames
	 */
	public String getAnnotatedCrfSasItemNames() {
		return annotatedCrfSasItemNames;
	}

	/**
	 * @param annotatedCrfSasItemNames
	 *            the aCrfSasItemNames to set
	 */
	public void setAnnotatedCrfSasItemNames(String annotatedCrfSasItemNames) {
		this.annotatedCrfSasItemNames = annotatedCrfSasItemNames;
	}

	/**
	 * @return the allowDiscrepancyCorrectionForms
	 */
	public String getAllowDiscrepancyCorrectionForms() {
		return allowDiscrepancyCorrectionForms;
	}

	/**
	 * @param allowDiscrepancyCorrectionForms
	 *            the allowDiscrepancyCorrectionForms to set
	 */
	public void setAllowDiscrepancyCorrectionForms(String allowDiscrepancyCorrectionForms) {
		this.allowDiscrepancyCorrectionForms = allowDiscrepancyCorrectionForms;
	}

	public void setRandomizationEnviroment(String randomizationEnviroment) {
		this.randomizationEnviroment = randomizationEnviroment;
	}

	public String getRandomizationEnviroment() {
		return this.randomizationEnviroment;
	}

	public String getAutoTabbing() {
		return autoTabbing;
	}

	public void setAutoTabbing(String autoTabbing) {
		this.autoTabbing = autoTabbing;
	}

	public String getShowYearsInCalendar() {
		return showYearsInCalendar;
	}

	public void setShowYearsInCalendar(String showYearsInCalendar) {
		this.showYearsInCalendar = showYearsInCalendar;
	}

	public String getInstanceType() {
		return instanceType;
	}

	public void setInstanceType(String instanceType) {
		this.instanceType = instanceType;
	}

	/**
	 * @return Returns the crfAnnotation.
	 */
	public String getCrfAnnotation() {
		return studyFeatureConfig.getCrfAnnotation();
	}

	/**
	 * @param crfAnnotation
	 *            the crfAnnotation to set
	 */
	public void setCrfAnnotation(String crfAnnotation) {
		studyFeatureConfig.setCrfAnnotation(crfAnnotation);
	}

	/**
	 * @return Returns the dynamicGroup.
	 */
	public String getDynamicGroup() {
		return studyFeatureConfig.getDynamicGroup();
	}

	/**
	 * @param dynamicGroup
	 *            the dynamicGroup to set
	 */
	public void setDynamicGroup(String dynamicGroup) {
		studyFeatureConfig.setDynamicGroup(dynamicGroup);
	}

	/**
	 * @return Returns the calendaredVisits.
	 */
	public String getCalendaredVisits() {
		return studyFeatureConfig.getCalendaredVisits();
	}

	/**
	 * @param calendaredVisits
	 *            the calendaredVisits to set
	 */
	public void setCalendaredVisits(String calendaredVisits) {
		studyFeatureConfig.setCalendaredVisits(calendaredVisits);
	}

	/**
	 * @return Returns the interactiveDashboards.
	 */
	public String getInteractiveDashboards() {
		return studyFeatureConfig.getInteractiveDashboards();
	}

	/**
	 * @param interactiveDashboards
	 *            the interactiveDashboards to set
	 */
	public void setInteractiveDashboards(String interactiveDashboards) {
		studyFeatureConfig.setInteractiveDashboards(interactiveDashboards);
	}

	/**
	 * @return Returns the itemLevelSDV.
	 */
	public String getItemLevelSDV() {
		return studyFeatureConfig.getItemLevelSDV();
	}

	/**
	 * @param itemLevelSDV
	 *            the itemLevelSDV to set
	 */
	public void setItemLevelSDV(String itemLevelSDV) {
		studyFeatureConfig.setItemLevelSDV(itemLevelSDV);
	}

	/**
	 * @return Returns the subjectCasebookInPDF.
	 */
	public String getSubjectCasebookInPDF() {
		return studyFeatureConfig.getSubjectCasebookInPDF();
	}

	/**
	 * @param subjectCasebookInPDF
	 *            the subjectCasebookInPDF to set
	 */
	public void setSubjectCasebookInPDF(String subjectCasebookInPDF) {
		studyFeatureConfig.setSubjectCasebookInPDF(subjectCasebookInPDF);
	}

	/**
	 * @return Returns the crfMasking.
	 */
	public String getCrfMasking() {
		return studyFeatureConfig.getCrfMasking();
	}

	/**
	 * @param crfMasking
	 *            the crfMasking to set
	 */
	public void setCrfMasking(String crfMasking) {
		studyFeatureConfig.setCrfMasking(crfMasking);
	}

	/**
	 * @return Returns the sasExtracts.
	 */
	public String getSasExtracts() {
		return studyFeatureConfig.getSasExtracts();
	}

	/**
	 * @param sasExtracts
	 *            the sasExtracts to set
	 */
	public void setSasExtracts(String sasExtracts) {
		studyFeatureConfig.setSasExtracts(sasExtracts);
	}

	/**
	 * @return Returns the studyEvaluator.
	 */
	public String getStudyEvaluator() {
		return studyFeatureConfig.getStudyEvaluator();
	}

	/**
	 * @param studyEvaluator
	 *            the studyEvaluator to set
	 */
	public void setStudyEvaluator(String studyEvaluator) {
		studyFeatureConfig.setStudyEvaluator(studyEvaluator);
	}

	/**
	 * @return Returns the randomization.
	 */
	public String getRandomization() {
		return studyFeatureConfig.getRandomization();
	}

	/**
	 * @param randomization
	 *            the randomization to set
	 */
	public void setRandomization(String randomization) {
		studyFeatureConfig.setRandomization(randomization);
	}

	/**
	 * @return Returns the medicalCoding.
	 */
	public String getMedicalCoding() {
		return studyFeatureConfig.getMedicalCoding();
	}

	/**
	 * @param medicalCoding
	 *            the medicalCoding to set
	 */
	public void setMedicalCoding(String medicalCoding) {
		studyFeatureConfig.setMedicalCoding(medicalCoding);
	}
}
