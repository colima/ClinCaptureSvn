<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:tx="http://www.springframework.org/schema/tx"
		xmlns:util="http://www.springframework.org/schema/util"
		xsi:schemaLocation="http://www.springframework.org/schema/beans
							http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
							http://www.springframework.org/schema/util 
							http://www.springframework.org/schema/util/spring-util-2.5.xsd">

     
     <!-- WSDL Definitions -->
     
     
     
     <bean id="SubjectRegistrationService" class="org.springframework.ws.wsdl.wsdl11.SimpleWsdl11Definition">
     	<constructor-arg value="/WEB-INF/schemas/clinicalConnector/SubjectRegistrationService.wsdl"/> 
     </bean>
     
     <bean id="StudyManagementService" class="org.springframework.ws.wsdl.wsdl11.SimpleWsdl11Definition">
     	<constructor-arg value="/WEB-INF/schemas/clinicalConnector/StudyManagementService.wsdl"/> 
     </bean>
     
     <bean id="DataCaptureService" class="org.springframework.ws.wsdl.wsdl11.SimpleWsdl11Definition">
     	<constructor-arg value="/WEB-INF/schemas/clinicalConnector/DataCaptureService.wsdl"/> 
     </bean>
     
     <bean id="dataWsdl" class="org.springframework.ws.wsdl.wsdl11.DefaultWsdl11Definition">
        <property name="schema" ref="dataSchema"/>
        <property name="portTypeName" value="ws"/>
        <property name="locationUri" value="/ws/data/v1"/>
        <property name="createSoap12Binding" value="true" />
     </bean>
     
     <bean id="connectorSchema" class="org.springframework.xml.xsd.SimpleXsdSchema">
     	<property name="xsd" value="/WEB-INF/schemas/clinicalConnector/ClinicalConnector.xsd"/>
     </bean>
     
     <bean id="dataCaptureSchema" class="org.springframework.xml.xsd.SimpleXsdSchema">
     	<property name="xsd" value="/WEB-INF/schemas/clinicalConnector/dataCapture.xsd"/>
     </bean>
     
     <bean id="studyManagementSchema" class="org.springframework.xml.xsd.SimpleXsdSchema">
     	<property name="xsd" value="/WEB-INF/schemas/clinicalConnector/studyManagement.xsd"/>
     </bean>
     
     <bean id="registerSubjectSchema" class="org.springframework.xml.xsd.SimpleXsdSchema">
     	<property name="xsd" value="/WEB-INF/schemas/clinicalConnector/registerSubject.xsd"/>
     </bean>
     
     <bean id="dataSchema" class="org.springframework.xml.xsd.SimpleXsdSchema">
         <property name="xsd" value="/WEB-INF/schemas/data.xsd" />
     </bean>
     
     <bean id="studyEventDefinitionWsdl" class="org.springframework.ws.wsdl.wsdl11.DefaultWsdl11Definition">
        <property name="schema" ref="studyEventDefinitionSchema"/>
        <property name="portTypeName" value="ws"/>
        <property name="locationUri" value="/ws/studyEventDefinition/v1"/>
     </bean>
     
     <bean id="studyEventDefinitionSchema" class="org.springframework.xml.xsd.SimpleXsdSchema">
         <property name="xsd" value="/WEB-INF/schemas/studyEventDefinition.xsd" />
     </bean>
     
     <bean id="studyWsdl" class="org.springframework.ws.wsdl.wsdl11.DefaultWsdl11Definition">
        <property name="schema" ref="studySchema"/>
        <property name="portTypeName" value="ws"/>
        <property name="locationUri" value="/ws/study/v1"/>
     </bean>
     
     <bean id="studySchema" class="org.springframework.xml.xsd.SimpleXsdSchema">
         <property name="xsd" value="/WEB-INF/schemas/study.xsd" />
     </bean>
     
     <bean id="studySubjectWsdl" class="org.springframework.ws.wsdl.wsdl11.DefaultWsdl11Definition">
        <property name="schema" ref="studySubjectSchema"/>
        <property name="portTypeName" value="ws"/>
        <property name="locationUri" value="/ws/studySubject/v1"/>
     </bean>
     
     <bean id="studySubjectSchema" class="org.springframework.xml.xsd.SimpleXsdSchema">
         <property name="xsd" value="/WEB-INF/schemas/studySubject.xsd" />
     </bean>
     
     <bean id="eventWsdl" class="org.springframework.ws.wsdl.wsdl11.DefaultWsdl11Definition">
        <property name="schema" ref="eventSchema"/>
        <property name="portTypeName" value="ws"/>
        <property name="locationUri" value="/ws/event/v1"/>
     </bean>
     
     <bean id="eventSchema" class="org.springframework.xml.xsd.SimpleXsdSchema">
         <property name="xsd" value="/WEB-INF/schemas/event.xsd" />
     </bean>
     
     <bean id="crfWsdl" class="org.springframework.ws.wsdl.wsdl11.DefaultWsdl11Definition">
        <property name="schema" ref="crfSchema"/>
        <property name="portTypeName" value="ImageRepository"/>
        <property name="locationUri" value="/ws/crf/v1"/>
    </bean>
    
    <bean id="crfSchema" class="org.springframework.xml.xsd.SimpleXsdSchema">
        <property name="xsd" value="/WEB-INF/schemas/crf.xsd"/>
    </bean>
    
    <!-- Endpoint Mappings  -->
    <bean id="subjectEndpointMapping" class="org.springframework.ws.soap.server.endpoint.mapping.SoapActionEndpointMapping">
    <!-- org.springframework.ws.soap.server.endpoint.mapping.SoapActionEndpointMapping -->
    <!-- org.springframework.ws.soap.addressing.server.SimpleActionEndpointMapping -->
        <property name="mappings">
            <props>
                <prop key="registerSubject">registerSubjectEndpoint</prop>
                <prop key="rollbackRegisterSubject">rollbackRegisterSubjectEndpoint</prop>
                <prop key="createStudy">createStudyEndpoint</prop>
                <prop key="rollbackCreateStudy">rollbackCreateStudyEndpoint</prop>
                <prop key="loadLabs">loadLabsEndpoint</prop>
                <prop key="rollbackLoadLabs">rollbackLoadLabsEndpoint</prop>
            </props>
        </property>
        <!-- always remember to add the security interceptors here, otherwise they will break -->
        <property name="interceptors">
			<list>
				<ref local="loggingInterceptor"/>
				<ref bean="wsSecurityInterceptor"/>
                <ref bean="userPermissionInterceptor"/>
			</list>
		</property>
    </bean>  
    
    <!-- change the SAAJ to accept only SOAP 1.2 handlers, for CABIG, tbh 02/2011 -->
    <bean id="messageFactory" class="org.springframework.ws.soap.axiom.AxiomSoapMessageFactory">
    <!-- was SaajSoapMessageFactory, tbh -->
        <property name="soapVersion">
            <util:constant static-field="org.springframework.ws.soap.SoapVersion.SOAP_12"/>
        </property>
    </bean> 
     
    
    <!-- PayloadRootAnnotationMethodEndpointMapping is the mapping that detects and handles the @PayloadRoot  
         annotations  -->
    <bean class="org.springframework.ws.server.endpoint.mapping.PayloadRootAnnotationMethodEndpointMapping"> 
        <property name="interceptors">
            <list>
                <ref bean="wsSecurityInterceptor"/>
                <ref bean="userPermissionInterceptor"/>
            </list>
        </property>
    </bean>
    
    <!--  Annotation Based MethodEndpoint Adapter -->
    <bean class="org.springframework.ws.server.endpoint.adapter.XPathParamAnnotationMethodEndpointAdapter">
        <property name="namespaces">
            <props>
                <prop key="e">http://openclinica.org/ws/event/v1</prop>
                <prop key="studySubject">http://openclinica.org/ws/studySubject/v1</prop>
                <prop key="study">http://openclinica.org/ws/study/v1</prop>
                <prop key="sed">http://openclinica.org/ws/studyEventDefinition/v1</prop>
                <prop key="data">http://openclinica.org/ws/data/v1</prop>
                <prop key="odm13">http://www.cdisc.org/ns/odm/v1.3</prop>
                <prop key="cabig">http://openclinica.org/ws/cabig/v1</prop>
                <prop key="connector">http://clinicalconnector.nci.nih.gov</prop>
            </props>
        </property>
    </bean>
    
    <!-- The GenericMarshallingMethodEndpointAdapter  converts the incoming XML messages to marshalled 
         objects used as parameters and return value -->
    <bean class="org.springframework.ws.server.endpoint.adapter.GenericMarshallingMethodEndpointAdapter">
        <constructor-arg ref="jaxb2Marshaller"/>
    </bean>
    
    <!-- adding the payload adapter b/c the above GenericMarshallingMethodEndpointAdapter overrides all default endpoint
    adapters, tbh 01/2011 -->
    <bean id="payloadAdapter" class="org.springframework.ws.server.endpoint.adapter.PayloadEndpointAdapter" />
    
    <bean id="dateAdapter" class="org.akaza.openclinica.ws.DateAdapter" />

    <bean id="jaxb2Marshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <property name="contextPaths">
            <list>
                <value>org.openclinica.ws.beans</value>
                <value>org.openclinica.ws.crf.v1</value>
                <value>org.openclinica.ws.studysubject.v1</value>
            </list>    
        </property>
        
        <property name="mtomEnabled" value="true"/>
        <property name="adapters">
            <list><ref bean="dateAdapter"/></list>    
        </property>
    </bean> 
    
    <!--  Endpoints -->
    <bean id="registerSubjectEndpoint" class="org.akaza.openclinica.ws.cabig.RegisterSubjectEndpoint">
        <constructor-arg ref="dataSource"/>
        <constructor-arg ref="messageSource"/>
        <constructor-arg ref="coreResources"/>
        <!--  <constructor-arg ref="jaxb2Marshaller"/> -->  
    </bean>
    
    <bean id="rollbackRegisterSubjectEndpoint" class="org.akaza.openclinica.ws.cabig.RollbackRegisterSubjectEndpoint">
        <constructor-arg ref="dataSource"/>
        <constructor-arg ref="messageSource"/>
        <constructor-arg ref="coreResources"/>
    </bean> 
    
    <bean id="createStudyEndpoint" class="org.akaza.openclinica.ws.cabig.CreateStudyEndpoint">
        <constructor-arg ref="dataSource"/>
        <constructor-arg ref="messageSource"/>
        <constructor-arg ref="coreResources"/>
    </bean>
    
    <bean id="rollbackCreateStudyEndpoint" class="org.akaza.openclinica.ws.cabig.RollbackCreateStudyEndpoint">
        <constructor-arg ref="dataSource"/>
        <constructor-arg ref="messageSource"/>
        <constructor-arg ref="coreResources"/>
    </bean>
    
    <bean id="loadLabsEndpoint" class="org.akaza.openclinica.ws.cabig.LoadLabsEndpoint">
        <constructor-arg ref="dataSource"/>
        <constructor-arg ref="messageSource"/>
        <constructor-arg ref="coreResources"/>
    </bean>
    
    <bean id="rollbackLoadLabsEndpoint" class="org.akaza.openclinica.ws.cabig.RollbackLoadLabsEndpoint">
        <constructor-arg ref="dataSource"/>
        <constructor-arg ref="messageSource"/>
        <constructor-arg ref="coreResources"/>
    </bean>
    
    <bean id="dataEndpoint" class="org.akaza.openclinica.ws.DataEndpoint">
        <constructor-arg ref="dataSource"/>
        <constructor-arg ref="messageSource"/>
        <constructor-arg ref="coreResources"/>
    </bean>
    
     <bean id="studyEventDefinitionEndpoint" class="org.akaza.openclinica.ws.StudyEventDefinitionEndpoint">
        <constructor-arg ref="dataSource"/>
        <constructor-arg ref="messageSource"/>
    </bean>
    
    <bean id="studyEndpoint" class="org.akaza.openclinica.ws.StudyEndpoint">
        <constructor-arg ref="dataSource"/>
        <constructor-arg ref="messageSource"/>
    </bean>
    
    <bean id="studySubjectEndpoint" class="org.akaza.openclinica.ws.StudySubjectEndpoint">
        <constructor-arg ref="subjectService"/>
        <constructor-arg ref="dataSource"/>
        <constructor-arg ref="messageSource"/>
        <property name="dateFormat" value="yyyy-MM-dd"/>
    </bean>
    
    <bean id="eventEndpoint" class="org.akaza.openclinica.ws.EventEndpoint">
        <constructor-arg ref="eventService"/>
        <constructor-arg ref="dataSource"/>
        <constructor-arg ref="messageSource"/>
        <property name="dateFormat" value="yyyy-MM-dd"/>
    </bean>
    
    <bean id="crfEndpoint" class="org.akaza.openclinica.ws.CrfEndpoint">
        <constructor-arg ref="subjectService"/>
        <constructor-arg ref="dataSource"/>
        <property name="dateFormat" value="yyyy-MM-dd"/>
        <property name="dataInfo" ref="dataInfo"/>
    </bean>
    
    <!-- Security -->
    
    <bean id="userPermissionInterceptor" class="org.akaza.openclinica.ws.UserPermissionInterceptor">
        <constructor-arg ref="dataSource"/>
    </bean>
    
    <!-- had to remove XWS security since it is only compliant with SAAJ, not Axiom, tbh 01/2011 -->
    <!--  <bean id="wsSecurityInterceptor" class="org.springframework.ws.soap.security.xwss.XwsSecurityInterceptor">
        <property name="secureResponse" value="false"/>
        <property name="policyConfiguration" value="classpath:securityPolicy.xml"/>
        <property name="callbackHandlers" ref="springSecurityHandler"/>
    </bean> --> 
    <bean id="wsSecurityInterceptor" class="org.springframework.ws.soap.security.wss4j.Wss4jSecurityInterceptor">
		<property name="validationCallbackHandler" ref="springSecurityHandler"/>
		<property name="validationActions" value="UsernameToken"/>
		<property name="securementActions" value="NoSecurity"/> <!-- was Encrypt -->
	</bean> 
    
    <bean id="authenticationManager" class="org.springframework.security.authentication.ProviderManager">
      <property name="providers">
          <bean class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
              <property name="userDetailsService" ref="ocUserDetailsService"/>
          </bean>
      </property>
    </bean>
    
    <bean id="loggingInterceptor" class="org.springframework.ws.server.endpoint.interceptor.PayloadLoggingInterceptor">
		<description>
		This interceptor logs the message payload.
		</description>
	</bean>
  
  	<!--  -->
  	<!-- org.springframework.ws.soap.security.wss4j.callback.SpringPlainTextPasswordValidationCallbackHandler
  		  class="org.akaza.openclinica.ws.SpringPlainTextPasswordValidationCallbackHandler"> -->
    <!--  <bean id="springSecurityHandler" 
     class="org.akaza.openclinica.ws.SpringPlainTextPasswordValidationCallbackHandler">
    <property name="authenticationManager" ref="authenticationManager"/>
    </bean> -->
    <bean id="springSecurityHandler"
      class="org.springframework.ws.soap.security.wss4j.callback.SpringPlainTextPasswordValidationCallbackHandler">
    	<property name="authenticationManager" ref="authenticationManager"/>
  	</bean> 
  	<!--  <bean id="springSecurityHandler" class="org.springframework.ws.soap.security.wss4j.callback.SpringDigestPasswordValidationCallbackHandler">
        <property name="userDetailsService" ref="ocUserDetailsService"/>
    </bean> -->
  	
    
</beans>
    
    